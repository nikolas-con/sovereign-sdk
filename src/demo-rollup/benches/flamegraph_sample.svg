<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="726" onload="init(evt)" viewBox="0 0 1200 726" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="726" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="709.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="709.00"> </text><svg id="frames" x="10" width="1180" total_samples="213631"><g><title>libsystem_malloc.dylib`free (35 samples, 0.02%)</title><rect x="0.0131%" y="533" width="0.0164%" height="15" fill="rgb(227,0,7)" fg:x="28" fg:w="35"/><text x="0.2631%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (37 samples, 0.02%)</title><rect x="0.0609%" y="517" width="0.0173%" height="15" fill="rgb(217,0,24)" fg:x="130" fg:w="37"/><text x="0.3109%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (69 samples, 0.03%)</title><rect x="0.0875%" y="517" width="0.0323%" height="15" fill="rgb(221,193,54)" fg:x="187" fg:w="69"/><text x="0.3375%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_free_scan_madvise_free (25 samples, 0.01%)</title><rect x="0.1250%" y="517" width="0.0117%" height="15" fill="rgb(248,212,6)" fg:x="267" fg:w="25"/><text x="0.3750%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`madvise (132 samples, 0.06%)</title><rect x="0.1390%" y="501" width="0.0618%" height="15" fill="rgb(208,68,35)" fg:x="297" fg:w="132"/><text x="0.3890%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_small (365 samples, 0.17%)</title><rect x="0.0304%" y="533" width="0.1709%" height="15" fill="rgb(232,128,0)" fg:x="65" fg:w="365"/><text x="0.2804%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (138 samples, 0.06%)</title><rect x="0.1367%" y="517" width="0.0646%" height="15" fill="rgb(207,160,47)" fg:x="292" fg:w="138"/><text x="0.3867%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (57 samples, 0.03%)</title><rect x="0.2195%" y="533" width="0.0267%" height="15" fill="rgb(228,23,34)" fg:x="469" fg:w="57"/><text x="0.4695%" y="543.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.02%)</title><rect x="0.2467%" y="533" width="0.0197%" height="15" fill="rgb(218,30,26)" fg:x="527" fg:w="42"/><text x="0.4967%" y="543.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.02%)</title><rect x="0.2467%" y="517" width="0.0197%" height="15" fill="rgb(220,122,19)" fg:x="527" fg:w="42"/><text x="0.4967%" y="527.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;ed25519_dalek::secret::SecretKey as zeroize::Zeroize&gt;::zeroize (24 samples, 0.01%)</title><rect x="0.2696%" y="533" width="0.0112%" height="15" fill="rgb(250,228,42)" fg:x="576" fg:w="24"/><text x="0.5196%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (24 samples, 0.01%)</title><rect x="0.3520%" y="517" width="0.0112%" height="15" fill="rgb(240,193,28)" fg:x="752" fg:w="24"/><text x="0.6020%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_small (111 samples, 0.05%)</title><rect x="0.3632%" y="517" width="0.0520%" height="15" fill="rgb(216,20,37)" fg:x="776" fg:w="111"/><text x="0.6132%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (32 samples, 0.01%)</title><rect x="0.4194%" y="517" width="0.0150%" height="15" fill="rgb(206,188,39)" fg:x="896" fg:w="32"/><text x="0.6694%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (37 samples, 0.02%)</title><rect x="0.4517%" y="501" width="0.0173%" height="15" fill="rgb(217,207,13)" fg:x="965" fg:w="37"/><text x="0.7017%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.01%)</title><rect x="0.4545%" y="485" width="0.0145%" height="15" fill="rgb(231,73,38)" fg:x="971" fg:w="31"/><text x="0.7045%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (30 samples, 0.01%)</title><rect x="0.4550%" y="469" width="0.0140%" height="15" fill="rgb(225,20,46)" fg:x="972" fg:w="30"/><text x="0.7050%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (26 samples, 0.01%)</title><rect x="0.4569%" y="453" width="0.0122%" height="15" fill="rgb(210,31,41)" fg:x="976" fg:w="26"/><text x="0.7069%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`borsh::ser::BorshSerialize::try_to_vec (64 samples, 0.03%)</title><rect x="0.4461%" y="517" width="0.0300%" height="15" fill="rgb(221,200,47)" fg:x="953" fg:w="64"/><text x="0.6961%" y="527.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`demo_stf::runtime::Runtime&lt;C&gt;::encode_bank_call (28 samples, 0.01%)</title><rect x="0.4765%" y="517" width="0.0131%" height="15" fill="rgb(226,26,5)" fg:x="1018" fg:w="28"/><text x="0.7265%" y="527.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (352 samples, 0.16%)</title><rect x="0.4920%" y="517" width="0.1648%" height="15" fill="rgb(249,33,26)" fg:x="1051" fg:w="352"/><text x="0.7420%" y="527.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (96 samples, 0.04%)</title><rect x="0.6881%" y="485" width="0.0449%" height="15" fill="rgb(235,183,28)" fg:x="1470" fg:w="96"/><text x="0.9381%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (35 samples, 0.02%)</title><rect x="0.7429%" y="437" width="0.0164%" height="15" fill="rgb(221,5,38)" fg:x="1587" fg:w="35"/><text x="0.9929%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (64 samples, 0.03%)</title><rect x="0.7330%" y="485" width="0.0300%" height="15" fill="rgb(247,18,42)" fg:x="1566" fg:w="64"/><text x="0.9830%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::finish_grow (51 samples, 0.02%)</title><rect x="0.7391%" y="469" width="0.0239%" height="15" fill="rgb(241,131,45)" fg:x="1579" fg:w="51"/><text x="0.9891%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`realloc (48 samples, 0.02%)</title><rect x="0.7405%" y="453" width="0.0225%" height="15" fill="rgb(249,31,29)" fg:x="1582" fg:w="48"/><text x="0.9905%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (353 samples, 0.17%)</title><rect x="0.6661%" y="501" width="0.1652%" height="15" fill="rgb(225,111,53)" fg:x="1423" fg:w="353"/><text x="0.9161%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hex::val (145 samples, 0.07%)</title><rect x="0.7635%" y="485" width="0.0679%" height="15" fill="rgb(238,160,17)" fg:x="1631" fg:w="145"/><text x="1.0135%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (114 samples, 0.05%)</title><rect x="0.8313%" y="501" width="0.0534%" height="15" fill="rgb(214,148,48)" fg:x="1776" fg:w="114"/><text x="1.0813%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (43 samples, 0.02%)</title><rect x="0.8880%" y="485" width="0.0201%" height="15" fill="rgb(232,36,49)" fg:x="1897" fg:w="43"/><text x="1.1380%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (133 samples, 0.06%)</title><rect x="0.9175%" y="469" width="0.0623%" height="15" fill="rgb(209,103,24)" fg:x="1960" fg:w="133"/><text x="1.1675%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (39 samples, 0.02%)</title><rect x="0.9797%" y="469" width="0.0183%" height="15" fill="rgb(229,88,8)" fg:x="2093" fg:w="39"/><text x="1.2297%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (141 samples, 0.07%)</title><rect x="0.9999%" y="453" width="0.0660%" height="15" fill="rgb(213,181,19)" fg:x="2136" fg:w="141"/><text x="1.2499%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (2,614 samples, 1.22%)</title><rect x="1.0659%" y="453" width="1.2236%" height="15" fill="rgb(254,191,54)" fg:x="2277" fg:w="2614"/><text x="1.3159%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::to_bytes (41 samples, 0.02%)</title><rect x="2.2895%" y="453" width="0.0192%" height="15" fill="rgb(241,83,37)" fg:x="4891" fg:w="41"/><text x="2.5395%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::field::_&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (2,862 samples, 1.34%)</title><rect x="0.9980%" y="469" width="1.3397%" height="15" fill="rgb(233,36,39)" fg:x="2132" fg:w="2862"/><text x="1.2480%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`subtle::black_box (57 samples, 0.03%)</title><rect x="2.3110%" y="453" width="0.0267%" height="15" fill="rgb(226,3,54)" fg:x="4937" fg:w="57"/><text x="2.5610%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::edwards::CompressedEdwardsY::decompress (3,041 samples, 1.42%)</title><rect x="0.9161%" y="485" width="1.4235%" height="15" fill="rgb(245,192,40)" fg:x="1957" fg:w="3041"/><text x="1.1661%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_modules_api::default_signature::private_key::DefaultPrivateKey::from_hex (3,597 samples, 1.68%)</title><rect x="0.6567%" y="517" width="1.6837%" height="15" fill="rgb(238,167,29)" fg:x="1403" fg:w="3597"/><text x="0.9067%" y="527.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`ed25519_dalek::keypair::Keypair::from_bytes (3,105 samples, 1.45%)</title><rect x="0.8870%" y="501" width="1.4534%" height="15" fill="rgb(232,182,51)" fg:x="1895" fg:w="3105"/><text x="1.1370%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (3,135 samples, 1.47%)</title><rect x="2.3466%" y="485" width="1.4675%" height="15" fill="rgb(231,60,39)" fg:x="5013" fg:w="3135"/><text x="2.5966%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (238 samples, 0.11%)</title><rect x="3.8141%" y="485" width="0.1114%" height="15" fill="rgb(208,69,12)" fg:x="8148" fg:w="238"/><text x="4.0641%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha512::soft::compress (235 samples, 0.11%)</title><rect x="3.8155%" y="469" width="0.1100%" height="15" fill="rgb(235,93,37)" fg:x="8151" fg:w="235"/><text x="4.0655%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (73 samples, 0.03%)</title><rect x="3.9292%" y="485" width="0.0342%" height="15" fill="rgb(213,116,39)" fg:x="8394" fg:w="73"/><text x="4.1792%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (62 samples, 0.03%)</title><rect x="3.9634%" y="485" width="0.0290%" height="15" fill="rgb(222,207,29)" fg:x="8467" fg:w="62"/><text x="4.2134%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2,113 samples, 0.99%)</title><rect x="4.0565%" y="469" width="0.9891%" height="15" fill="rgb(206,96,30)" fg:x="8666" fg:w="2113"/><text x="4.3065%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (1,574 samples, 0.74%)</title><rect x="5.0456%" y="469" width="0.7368%" height="15" fill="rgb(218,138,4)" fg:x="10779" fg:w="1574"/><text x="5.2956%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (39 samples, 0.02%)</title><rect x="5.7824%" y="469" width="0.0183%" height="15" fill="rgb(250,191,14)" fg:x="12353" fg:w="39"/><text x="6.0324%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (472 samples, 0.22%)</title><rect x="5.8007%" y="469" width="0.2209%" height="15" fill="rgb(239,60,40)" fg:x="12392" fg:w="472"/><text x="6.0507%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (137 samples, 0.06%)</title><rect x="6.0216%" y="469" width="0.0641%" height="15" fill="rgb(206,27,48)" fg:x="12864" fg:w="137"/><text x="6.2716%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::window::LookupTable&lt;T&gt;::select (221 samples, 0.10%)</title><rect x="6.0857%" y="469" width="0.1034%" height="15" fill="rgb(225,35,8)" fg:x="13001" fg:w="221"/><text x="6.3357%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::edwards::EdwardsBasepointTable::basepoint_mul (4,945 samples, 2.31%)</title><rect x="3.9985%" y="485" width="2.3147%" height="15" fill="rgb(250,213,24)" fg:x="8542" fg:w="4945"/><text x="4.2485%" y="495.50">r..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`subtle::black_box (265 samples, 0.12%)</title><rect x="6.1892%" y="469" width="0.1240%" height="15" fill="rgb(247,123,22)" fg:x="13222" fg:w="265"/><text x="6.4392%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (137 samples, 0.06%)</title><rect x="6.3137%" y="469" width="0.0641%" height="15" fill="rgb(231,138,38)" fg:x="13488" fg:w="137"/><text x="6.5637%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::edwards::EdwardsPoint::compress (2,802 samples, 1.31%)</title><rect x="6.3132%" y="485" width="1.3116%" height="15" fill="rgb(231,145,46)" fg:x="13487" fg:w="2802"/><text x="6.5632%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (2,664 samples, 1.25%)</title><rect x="6.3778%" y="469" width="1.2470%" height="15" fill="rgb(251,118,11)" fg:x="13625" fg:w="2664"/><text x="6.6278%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::scalar::Scalar::to_radix_16 (89 samples, 0.04%)</title><rect x="7.6248%" y="485" width="0.0417%" height="15" fill="rgb(217,147,25)" fg:x="16289" fg:w="89"/><text x="7.8748%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::window::LookupTable&lt;T&gt;::select (62 samples, 0.03%)</title><rect x="7.6665%" y="485" width="0.0290%" height="15" fill="rgb(247,81,37)" fg:x="16378" fg:w="62"/><text x="7.9165%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;ed25519_dalek::public::PublicKey as core::convert::From&lt;&amp;ed25519_dalek::secret::SecretKey&gt;&gt;::from (11,449 samples, 5.36%)</title><rect x="2.3424%" y="501" width="5.3592%" height="15" fill="rgb(209,12,38)" fg:x="5004" fg:w="11449"/><text x="2.5924%" y="511.50">rollup_..</text></g><g><title>libsystem_kernel.dylib`getentropy (283 samples, 0.13%)</title><rect x="7.7016%" y="485" width="0.1325%" height="15" fill="rgb(227,1,9)" fg:x="16453" fg:w="283"/><text x="7.9516%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::fill_bytes (285 samples, 0.13%)</title><rect x="7.7016%" y="501" width="0.1334%" height="15" fill="rgb(248,47,43)" fg:x="16453" fg:w="285"/><text x="7.9516%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_modules_api::default_signature::private_key::DefaultPrivateKey::generate (11,741 samples, 5.50%)</title><rect x="2.3405%" y="517" width="5.4959%" height="15" fill="rgb(221,10,30)" fg:x="5000" fg:w="11741"/><text x="2.5905%" y="527.50">rollup_..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (256 samples, 0.12%)</title><rect x="7.8561%" y="485" width="0.1198%" height="15" fill="rgb(210,229,1)" fg:x="16783" fg:w="256"/><text x="8.1061%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha512::soft::compress (252 samples, 0.12%)</title><rect x="7.8579%" y="469" width="0.1180%" height="15" fill="rgb(222,148,37)" fg:x="16787" fg:w="252"/><text x="8.1079%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (3,143 samples, 1.47%)</title><rect x="7.9909%" y="469" width="1.4712%" height="15" fill="rgb(234,67,33)" fg:x="17071" fg:w="3143"/><text x="8.2409%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::scalar::Scalar as core::ops::arith::Add&lt;&amp;curve25519_dalek::scalar::Scalar&gt;&gt;::add (36 samples, 0.02%)</title><rect x="9.4621%" y="469" width="0.0169%" height="15" fill="rgb(247,98,35)" fg:x="20214" fg:w="36"/><text x="9.7121%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (430 samples, 0.20%)</title><rect x="9.4790%" y="469" width="0.2013%" height="15" fill="rgb(247,138,52)" fg:x="20250" fg:w="430"/><text x="9.7290%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha512::soft::compress (415 samples, 0.19%)</title><rect x="9.4860%" y="453" width="0.1943%" height="15" fill="rgb(213,79,30)" fg:x="20265" fg:w="415"/><text x="9.7360%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (67 samples, 0.03%)</title><rect x="9.6849%" y="469" width="0.0314%" height="15" fill="rgb(246,177,23)" fg:x="20690" fg:w="67"/><text x="9.9349%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (58 samples, 0.03%)</title><rect x="9.7163%" y="469" width="0.0271%" height="15" fill="rgb(230,62,27)" fg:x="20757" fg:w="58"/><text x="9.9663%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::scalar::Scalar52::from_bytes (40 samples, 0.02%)</title><rect x="9.7509%" y="469" width="0.0187%" height="15" fill="rgb(216,154,8)" fg:x="20831" fg:w="40"/><text x="10.0009%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::scalar::Scalar52::mul (57 samples, 0.03%)</title><rect x="9.7715%" y="469" width="0.0267%" height="15" fill="rgb(244,35,45)" fg:x="20875" fg:w="57"/><text x="10.0215%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (2,105 samples, 0.99%)</title><rect x="9.8530%" y="453" width="0.9853%" height="15" fill="rgb(251,115,12)" fg:x="21049" fg:w="2105"/><text x="10.1030%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint as subtle::ConditionallySelectable&gt;::conditional_assign (1,529 samples, 0.72%)</title><rect x="10.8383%" y="453" width="0.7157%" height="15" fill="rgb(240,54,50)" fg:x="23154" fg:w="1529"/><text x="11.0883%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (36 samples, 0.02%)</title><rect x="11.5540%" y="453" width="0.0169%" height="15" fill="rgb(233,84,52)" fg:x="24683" fg:w="36"/><text x="11.8040%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (473 samples, 0.22%)</title><rect x="11.5709%" y="453" width="0.2214%" height="15" fill="rgb(207,117,47)" fg:x="24719" fg:w="473"/><text x="11.8209%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (117 samples, 0.05%)</title><rect x="11.7923%" y="453" width="0.0548%" height="15" fill="rgb(249,43,39)" fg:x="25192" fg:w="117"/><text x="12.0423%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::window::LookupTable&lt;T&gt;::select (209 samples, 0.10%)</title><rect x="11.8471%" y="453" width="0.0978%" height="15" fill="rgb(209,38,44)" fg:x="25309" fg:w="209"/><text x="12.0971%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::edwards::EdwardsBasepointTable::basepoint_mul (4,859 samples, 2.27%)</title><rect x="9.7987%" y="469" width="2.2745%" height="15" fill="rgb(236,212,23)" fg:x="20933" fg:w="4859"/><text x="10.0487%" y="479.50">r..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`subtle::black_box (274 samples, 0.13%)</title><rect x="11.9449%" y="453" width="0.1283%" height="15" fill="rgb(242,79,21)" fg:x="25518" fg:w="274"/><text x="12.1949%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (131 samples, 0.06%)</title><rect x="12.0736%" y="453" width="0.0613%" height="15" fill="rgb(211,96,35)" fg:x="25793" fg:w="131"/><text x="12.3236%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (2,626 samples, 1.23%)</title><rect x="12.1349%" y="453" width="1.2292%" height="15" fill="rgb(253,215,40)" fg:x="25924" fg:w="2626"/><text x="12.3849%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::edwards::EdwardsPoint::compress (2,759 samples, 1.29%)</title><rect x="12.0732%" y="469" width="1.2915%" height="15" fill="rgb(211,81,21)" fg:x="25792" fg:w="2759"/><text x="12.3232%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::scalar::Scalar52::from_bytes_wide (48 samples, 0.02%)</title><rect x="13.3656%" y="453" width="0.0225%" height="15" fill="rgb(208,190,38)" fg:x="28553" fg:w="48"/><text x="13.6156%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::scalar::Scalar::from_bytes_mod_order_wide (161 samples, 0.08%)</title><rect x="13.3656%" y="469" width="0.0754%" height="15" fill="rgb(235,213,38)" fg:x="28553" fg:w="161"/><text x="13.6156%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_mul (113 samples, 0.05%)</title><rect x="13.3880%" y="453" width="0.0529%" height="15" fill="rgb(237,122,38)" fg:x="28601" fg:w="113"/><text x="13.6380%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::scalar::Scalar::to_radix_16 (88 samples, 0.04%)</title><rect x="13.4409%" y="469" width="0.0412%" height="15" fill="rgb(244,218,35)" fg:x="28714" fg:w="88"/><text x="13.6909%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::window::LookupTable&lt;T&gt;::select (67 samples, 0.03%)</title><rect x="13.4901%" y="469" width="0.0314%" height="15" fill="rgb(240,68,47)" fg:x="28819" fg:w="67"/><text x="13.7401%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`ed25519_dalek::secret::ExpandedSecretKey::sign (11,874 samples, 5.56%)</title><rect x="7.9787%" y="485" width="5.5582%" height="15" fill="rgb(210,16,53)" fg:x="17045" fg:w="11874"/><text x="8.2287%" y="495.50">rollup_..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha512::Engine512::update (25 samples, 0.01%)</title><rect x="13.5252%" y="469" width="0.0117%" height="15" fill="rgb(235,124,12)" fg:x="28894" fg:w="25"/><text x="13.7752%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;ed25519_dalek::keypair::Keypair as signature::signer::Signer&lt;ed25519::Signature&gt;&gt;::try_sign (12,177 samples, 5.70%)</title><rect x="7.8439%" y="501" width="5.7000%" height="15" fill="rgb(224,169,11)" fg:x="16757" fg:w="12177"/><text x="8.0939%" y="511.50">rollup_..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (166 samples, 0.08%)</title><rect x="13.5449%" y="501" width="0.0777%" height="15" fill="rgb(250,166,2)" fg:x="28936" fg:w="166"/><text x="13.7949%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_demo_rollup::rng_xfers::RngDaService as sov_rollup_interface::node::services::da::DaService&gt;::extract_relevant_txs (28,506 samples, 13.34%)</title><rect x="0.2809%" y="533" width="13.3436%" height="15" fill="rgb(242,216,29)" fg:x="600" fg:w="28506"/><text x="0.5309%" y="543.50">rollup_coarse_measur..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_modules_api::transaction::Transaction&lt;sov_modules_api::default_context::DefaultContext&gt;::new_signed_tx (12,365 samples, 5.79%)</title><rect x="7.8364%" y="517" width="5.7880%" height="15" fill="rgb(230,116,27)" fg:x="16741" fg:w="12365"/><text x="8.0864%" y="527.50">rollup_..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (40 samples, 0.02%)</title><rect x="13.6970%" y="485" width="0.0187%" height="15" fill="rgb(228,99,48)" fg:x="29261" fg:w="40"/><text x="13.9470%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::histogram::Histogram::start_timer (47 samples, 0.02%)</title><rect x="13.7386%" y="485" width="0.0220%" height="15" fill="rgb(253,11,6)" fg:x="29350" fg:w="47"/><text x="13.9886%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (45 samples, 0.02%)</title><rect x="13.7396%" y="469" width="0.0211%" height="15" fill="rgb(247,143,39)" fg:x="29352" fg:w="45"/><text x="13.9896%" y="479.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (45 samples, 0.02%)</title><rect x="13.7396%" y="453" width="0.0211%" height="15" fill="rgb(236,97,10)" fg:x="29352" fg:w="45"/><text x="13.9896%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (42 samples, 0.02%)</title><rect x="13.7410%" y="437" width="0.0197%" height="15" fill="rgb(233,208,19)" fg:x="29355" fg:w="42"/><text x="13.9910%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (25 samples, 0.01%)</title><rect x="13.7738%" y="405" width="0.0117%" height="15" fill="rgb(216,164,2)" fg:x="29425" fg:w="25"/><text x="14.0238%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (49 samples, 0.02%)</title><rect x="13.7686%" y="469" width="0.0229%" height="15" fill="rgb(220,129,5)" fg:x="29414" fg:w="49"/><text x="14.0186%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (48 samples, 0.02%)</title><rect x="13.7691%" y="453" width="0.0225%" height="15" fill="rgb(242,17,10)" fg:x="29415" fg:w="48"/><text x="14.0191%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (45 samples, 0.02%)</title><rect x="13.7705%" y="437" width="0.0211%" height="15" fill="rgb(242,107,0)" fg:x="29418" fg:w="45"/><text x="14.0205%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (42 samples, 0.02%)</title><rect x="13.7719%" y="421" width="0.0197%" height="15" fill="rgb(251,28,31)" fg:x="29421" fg:w="42"/><text x="14.0219%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_db::ledger_db::LedgerDB::put_transaction (257 samples, 0.12%)</title><rect x="13.6722%" y="517" width="0.1203%" height="15" fill="rgb(233,223,10)" fg:x="29208" fg:w="257"/><text x="13.9222%" y="527.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::SchemaBatch::put (254 samples, 0.12%)</title><rect x="13.6736%" y="501" width="0.1189%" height="15" fill="rgb(215,21,27)" fg:x="29211" fg:w="254"/><text x="13.9236%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_db::schema::tables::_&lt;impl sov_rollup_interface::node::db::ValueCodec&lt;sov_db::schema::tables::TxByNumber&gt; for sov_db::schema::types::StoredTransaction&gt;::encode_value (58 samples, 0.03%)</title><rect x="13.7653%" y="485" width="0.0271%" height="15" fill="rgb(232,23,21)" fg:x="29407" fg:w="58"/><text x="14.0153%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_db::schema::types::split_tx_for_storage (23 samples, 0.01%)</title><rect x="13.7925%" y="517" width="0.0108%" height="15" fill="rgb(244,5,23)" fg:x="29465" fg:w="23"/><text x="14.0425%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (38 samples, 0.02%)</title><rect x="13.8117%" y="485" width="0.0178%" height="15" fill="rgb(226,81,46)" fg:x="29506" fg:w="38"/><text x="14.0617%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_free_detach_region (36 samples, 0.02%)</title><rect x="13.8599%" y="469" width="0.0169%" height="15" fill="rgb(247,70,30)" fg:x="29609" fg:w="36"/><text x="14.1099%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (32 samples, 0.01%)</title><rect x="13.8618%" y="453" width="0.0150%" height="15" fill="rgb(212,68,19)" fg:x="29613" fg:w="32"/><text x="14.1118%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (28 samples, 0.01%)</title><rect x="13.8767%" y="469" width="0.0131%" height="15" fill="rgb(240,187,13)" fg:x="29645" fg:w="28"/><text x="14.1267%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (24 samples, 0.01%)</title><rect x="13.8931%" y="469" width="0.0112%" height="15" fill="rgb(223,113,26)" fg:x="29680" fg:w="24"/><text x="14.1431%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`madvise (66 samples, 0.03%)</title><rect x="13.9137%" y="453" width="0.0309%" height="15" fill="rgb(206,192,2)" fg:x="29724" fg:w="66"/><text x="14.1637%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_small (248 samples, 0.12%)</title><rect x="13.8295%" y="485" width="0.1161%" height="15" fill="rgb(241,108,4)" fg:x="29544" fg:w="248"/><text x="14.0795%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (71 samples, 0.03%)</title><rect x="13.9123%" y="469" width="0.0332%" height="15" fill="rgb(247,173,49)" fg:x="29721" fg:w="71"/><text x="14.1623%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (321 samples, 0.15%)</title><rect x="13.8117%" y="501" width="0.1503%" height="15" fill="rgb(224,114,35)" fg:x="29506" fg:w="321"/><text x="14.0617%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::WriteToWAL (35 samples, 0.02%)</title><rect x="13.9825%" y="421" width="0.0164%" height="15" fill="rgb(245,159,27)" fg:x="29871" fg:w="35"/><text x="14.2325%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::log::Writer::AddRecord (35 samples, 0.02%)</title><rect x="13.9825%" y="405" width="0.0164%" height="15" fill="rgb(245,172,44)" fg:x="29871" fg:w="35"/><text x="14.2325%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::log::Writer::EmitPhysicalRecord (27 samples, 0.01%)</title><rect x="13.9863%" y="389" width="0.0126%" height="15" fill="rgb(236,23,11)" fg:x="29879" fg:w="27"/><text x="14.2363%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::WriteToWAL (48 samples, 0.02%)</title><rect x="13.9825%" y="437" width="0.0225%" height="15" fill="rgb(205,117,38)" fg:x="29871" fg:w="48"/><text x="14.2325%" y="447.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (49 samples, 0.02%)</title><rect x="14.4202%" y="325" width="0.0229%" height="15" fill="rgb(237,72,25)" fg:x="30806" fg:w="49"/><text x="14.6702%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (40 samples, 0.02%)</title><rect x="14.4431%" y="325" width="0.0187%" height="15" fill="rgb(244,70,9)" fg:x="30855" fg:w="40"/><text x="14.6931%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_context (130 samples, 0.06%)</title><rect x="14.4689%" y="325" width="0.0609%" height="15" fill="rgb(217,125,39)" fg:x="30910" fg:w="130"/><text x="14.7189%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (357 samples, 0.17%)</title><rect x="14.3977%" y="341" width="0.1671%" height="15" fill="rgb(235,36,10)" fg:x="30758" fg:w="357"/><text x="14.6477%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_level (75 samples, 0.04%)</title><rect x="14.5297%" y="325" width="0.0351%" height="15" fill="rgb(251,123,47)" fg:x="31040" fg:w="75"/><text x="14.7797%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (1,215 samples, 0.57%)</title><rect x="14.0368%" y="357" width="0.5687%" height="15" fill="rgb(221,13,13)" fg:x="29987" fg:w="1215"/><text x="14.2868%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_level (75 samples, 0.04%)</title><rect x="14.5705%" y="341" width="0.0351%" height="15" fill="rgb(238,131,9)" fg:x="31127" fg:w="75"/><text x="14.8205%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::SkipListRep::Allocate (36 samples, 0.02%)</title><rect x="14.6056%" y="357" width="0.0169%" height="15" fill="rgb(211,50,8)" fg:x="31202" fg:w="36"/><text x="14.8556%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (1,335 samples, 0.62%)</title><rect x="14.0083%" y="389" width="0.6249%" height="15" fill="rgb(245,182,24)" fg:x="29926" fg:w="1335"/><text x="14.2583%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (1,285 samples, 0.60%)</title><rect x="14.0317%" y="373" width="0.6015%" height="15" fill="rgb(242,14,37)" fg:x="29976" fg:w="1285"/><text x="14.2817%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (23 samples, 0.01%)</title><rect x="14.6224%" y="357" width="0.0108%" height="15" fill="rgb(246,228,12)" fg:x="31238" fg:w="23"/><text x="14.8724%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (1,341 samples, 0.63%)</title><rect x="14.0069%" y="405" width="0.6277%" height="15" fill="rgb(213,55,15)" fg:x="29923" fg:w="1341"/><text x="14.2569%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write_opt (1,397 samples, 0.65%)</title><rect x="13.9825%" y="501" width="0.6539%" height="15" fill="rgb(209,9,3)" fg:x="29871" fg:w="1397"/><text x="14.2325%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_write (1,397 samples, 0.65%)</title><rect x="13.9825%" y="485" width="0.6539%" height="15" fill="rgb(230,59,30)" fg:x="29871" fg:w="1397"/><text x="14.2325%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::Write (1,397 samples, 0.65%)</title><rect x="13.9825%" y="469" width="0.6539%" height="15" fill="rgb(209,121,21)" fg:x="29871" fg:w="1397"/><text x="14.2325%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::WriteImpl (1,397 samples, 0.65%)</title><rect x="13.9825%" y="453" width="0.6539%" height="15" fill="rgb(220,109,13)" fg:x="29871" fg:w="1397"/><text x="14.2325%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WriteBatchInternal::InsertInto (1,349 samples, 0.63%)</title><rect x="14.0050%" y="437" width="0.6315%" height="15" fill="rgb(232,18,1)" fg:x="29919" fg:w="1349"/><text x="14.2550%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WriteBatchInternal::Iterate (1,348 samples, 0.63%)</title><rect x="14.0055%" y="421" width="0.6310%" height="15" fill="rgb(215,41,42)" fg:x="29920" fg:w="1348"/><text x="14.2555%" y="431.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (33 samples, 0.02%)</title><rect x="14.6369%" y="469" width="0.0154%" height="15" fill="rgb(224,123,36)" fg:x="31269" fg:w="33"/><text x="14.8869%" y="479.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (65 samples, 0.03%)</title><rect x="14.6655%" y="453" width="0.0304%" height="15" fill="rgb(240,125,3)" fg:x="31330" fg:w="65"/><text x="14.9155%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (45 samples, 0.02%)</title><rect x="14.6968%" y="453" width="0.0211%" height="15" fill="rgb(205,98,50)" fg:x="31397" fg:w="45"/><text x="14.9468%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WriteBatch::Put (178 samples, 0.08%)</title><rect x="14.6365%" y="485" width="0.0833%" height="15" fill="rgb(205,185,37)" fg:x="31268" fg:w="178"/><text x="14.8865%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WriteBatchInternal::Put (126 samples, 0.06%)</title><rect x="14.6608%" y="469" width="0.0590%" height="15" fill="rgb(238,207,15)" fg:x="31320" fg:w="126"/><text x="14.9108%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::DB::write_schemas (1,959 samples, 0.92%)</title><rect x="13.8032%" y="517" width="0.9170%" height="15" fill="rgb(213,199,42)" fg:x="29488" fg:w="1959"/><text x="14.0532%" y="527.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_writebatch_put_cf (179 samples, 0.08%)</title><rect x="14.6365%" y="501" width="0.0838%" height="15" fill="rgb(235,201,11)" fg:x="31268" fg:w="179"/><text x="14.8865%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (86 samples, 0.04%)</title><rect x="14.7493%" y="437" width="0.0403%" height="15" fill="rgb(207,46,11)" fg:x="31509" fg:w="86"/><text x="14.9993%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (139 samples, 0.07%)</title><rect x="14.7319%" y="501" width="0.0651%" height="15" fill="rgb(241,35,35)" fg:x="31472" fg:w="139"/><text x="14.9819%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (124 samples, 0.06%)</title><rect x="14.7390%" y="485" width="0.0580%" height="15" fill="rgb(243,32,47)" fg:x="31487" fg:w="124"/><text x="14.9890%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (124 samples, 0.06%)</title><rect x="14.7390%" y="469" width="0.0580%" height="15" fill="rgb(247,202,23)" fg:x="31487" fg:w="124"/><text x="14.9890%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (112 samples, 0.05%)</title><rect x="14.7446%" y="453" width="0.0524%" height="15" fill="rgb(219,102,11)" fg:x="31499" fg:w="112"/><text x="14.9946%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (23 samples, 0.01%)</title><rect x="14.8031%" y="501" width="0.0108%" height="15" fill="rgb(243,110,44)" fg:x="31624" fg:w="23"/><text x="15.0531%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::histogram::Histogram::start_timer (28 samples, 0.01%)</title><rect x="14.8242%" y="501" width="0.0131%" height="15" fill="rgb(222,74,54)" fg:x="31669" fg:w="28"/><text x="15.0742%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (27 samples, 0.01%)</title><rect x="14.8246%" y="485" width="0.0126%" height="15" fill="rgb(216,99,12)" fg:x="31670" fg:w="27"/><text x="15.0746%" y="495.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (26 samples, 0.01%)</title><rect x="14.8251%" y="469" width="0.0122%" height="15" fill="rgb(226,22,26)" fg:x="31671" fg:w="26"/><text x="15.0751%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (24 samples, 0.01%)</title><rect x="14.8260%" y="453" width="0.0112%" height="15" fill="rgb(217,163,10)" fg:x="31673" fg:w="24"/><text x="15.0760%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_db::ledger_db::LedgerDB::commit_slot (2,550 samples, 1.19%)</title><rect x="13.6469%" y="533" width="1.1936%" height="15" fill="rgb(213,25,53)" fg:x="29154" fg:w="2550"/><text x="13.8969%" y="543.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::SchemaBatch::put (257 samples, 0.12%)</title><rect x="14.7202%" y="517" width="0.1203%" height="15" fill="rgb(252,105,26)" fg:x="31447" fg:w="257"/><text x="14.9702%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.02%)</title><rect x="14.8742%" y="501" width="0.0164%" height="15" fill="rgb(220,39,43)" fg:x="31776" fg:w="35"/><text x="15.1242%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (53 samples, 0.02%)</title><rect x="14.9721%" y="421" width="0.0248%" height="15" fill="rgb(229,68,48)" fg:x="31985" fg:w="53"/><text x="15.2221%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.03%)</title><rect x="14.9969%" y="421" width="0.0337%" height="15" fill="rgb(252,8,32)" fg:x="32038" fg:w="72"/><text x="15.2469%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`core::fmt::Formatter::debug_tuple (22 samples, 0.01%)</title><rect x="15.0329%" y="421" width="0.0103%" height="15" fill="rgb(223,20,43)" fg:x="32115" fg:w="22"/><text x="15.2829%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;mut W as core::fmt::Write&gt;::write_str (27 samples, 0.01%)</title><rect x="15.0872%" y="389" width="0.0126%" height="15" fill="rgb(229,81,49)" fg:x="32231" fg:w="27"/><text x="15.3372%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.01%)</title><rect x="15.0882%" y="373" width="0.0117%" height="15" fill="rgb(236,28,36)" fg:x="32233" fg:w="25"/><text x="15.3382%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;str as core::fmt::Debug&gt;::fmt (376 samples, 0.18%)</title><rect x="15.0446%" y="405" width="0.1760%" height="15" fill="rgb(249,185,26)" fg:x="32140" fg:w="376"/><text x="15.2946%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`core::unicode::unicode_data::grapheme_extend::lookup (255 samples, 0.12%)</title><rect x="15.1013%" y="389" width="0.1194%" height="15" fill="rgb(249,174,33)" fg:x="32261" fg:w="255"/><text x="15.3513%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`core::fmt::builders::DebugTuple::field (404 samples, 0.19%)</title><rect x="15.0432%" y="421" width="0.1891%" height="15" fill="rgb(233,201,37)" fg:x="32137" fg:w="404"/><text x="15.2932%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`core::unicode::printable::is_printable (23 samples, 0.01%)</title><rect x="15.2216%" y="405" width="0.0108%" height="15" fill="rgb(221,78,26)" fg:x="32518" fg:w="23"/><text x="15.4716%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::KeyHash as core::fmt::Debug&gt;::fmt (578 samples, 0.27%)</title><rect x="14.9641%" y="437" width="0.2706%" height="15" fill="rgb(250,127,30)" fg:x="31968" fg:w="578"/><text x="15.2141%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::fmt::format::format_inner (604 samples, 0.28%)</title><rect x="14.9524%" y="469" width="0.2827%" height="15" fill="rgb(230,49,44)" fg:x="31943" fg:w="604"/><text x="15.2024%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`core::fmt::write (591 samples, 0.28%)</title><rect x="14.9585%" y="453" width="0.2766%" height="15" fill="rgb(229,67,23)" fg:x="31956" fg:w="591"/><text x="15.2085%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`anyhow::__private::format_err (624 samples, 0.29%)</title><rect x="14.9519%" y="485" width="0.2921%" height="15" fill="rgb(249,83,47)" fg:x="31942" fg:w="624"/><text x="15.2019%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.01%)</title><rect x="15.2576%" y="469" width="0.0131%" height="15" fill="rgb(215,43,3)" fg:x="32595" fg:w="28"/><text x="15.5076%" y="479.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (22 samples, 0.01%)</title><rect x="15.2801%" y="437" width="0.0103%" height="15" fill="rgb(238,154,13)" fg:x="32643" fg:w="22"/><text x="15.5301%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (33 samples, 0.02%)</title><rect x="15.2754%" y="469" width="0.0154%" height="15" fill="rgb(219,56,2)" fg:x="32633" fg:w="33"/><text x="15.5254%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (23 samples, 0.01%)</title><rect x="15.2801%" y="453" width="0.0108%" height="15" fill="rgb(233,0,4)" fg:x="32643" fg:w="23"/><text x="15.5301%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (46 samples, 0.02%)</title><rect x="15.3030%" y="421" width="0.0215%" height="15" fill="rgb(235,30,7)" fg:x="32692" fg:w="46"/><text x="15.5530%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::histogram::Histogram::start_timer (52 samples, 0.02%)</title><rect x="15.3007%" y="469" width="0.0243%" height="15" fill="rgb(250,79,13)" fg:x="32687" fg:w="52"/><text x="15.5507%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (52 samples, 0.02%)</title><rect x="15.3007%" y="453" width="0.0243%" height="15" fill="rgb(211,146,34)" fg:x="32687" fg:w="52"/><text x="15.5507%" y="463.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (52 samples, 0.02%)</title><rect x="15.3007%" y="437" width="0.0243%" height="15" fill="rgb(228,22,38)" fg:x="32687" fg:w="52"/><text x="15.5507%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::vec::MetricVec&lt;T&gt;::with_label_values (32 samples, 0.01%)</title><rect x="15.3250%" y="469" width="0.0150%" height="15" fill="rgb(235,168,5)" fg:x="32739" fg:w="32"/><text x="15.5750%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.01%)</title><rect x="15.3494%" y="453" width="0.0108%" height="15" fill="rgb(221,155,16)" fg:x="32791" fg:w="23"/><text x="15.5994%" y="463.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (51 samples, 0.02%)</title><rect x="15.6873%" y="357" width="0.0239%" height="15" fill="rgb(215,215,53)" fg:x="33513" fg:w="51"/><text x="15.9373%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (165 samples, 0.08%)</title><rect x="15.7112%" y="357" width="0.0772%" height="15" fill="rgb(223,4,10)" fg:x="33564" fg:w="165"/><text x="15.9612%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_context (45 samples, 0.02%)</title><rect x="15.7983%" y="357" width="0.0211%" height="15" fill="rgb(234,103,6)" fg:x="33750" fg:w="45"/><text x="16.0483%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (459 samples, 0.21%)</title><rect x="15.6307%" y="373" width="0.2149%" height="15" fill="rgb(227,97,0)" fg:x="33392" fg:w="459"/><text x="15.8807%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_level (56 samples, 0.03%)</title><rect x="15.8193%" y="357" width="0.0262%" height="15" fill="rgb(234,150,53)" fg:x="33795" fg:w="56"/><text x="16.0693%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::SaveValue (34 samples, 0.02%)</title><rect x="15.8460%" y="373" width="0.0159%" height="15" fill="rgb(228,201,54)" fg:x="33852" fg:w="34"/><text x="16.0960%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (949 samples, 0.44%)</title><rect x="15.4196%" y="389" width="0.4442%" height="15" fill="rgb(222,22,37)" fg:x="32941" fg:w="949"/><text x="15.6696%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (971 samples, 0.45%)</title><rect x="15.4154%" y="405" width="0.4545%" height="15" fill="rgb(237,53,32)" fg:x="32932" fg:w="971"/><text x="15.6654%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (24 samples, 0.01%)</title><rect x="15.8722%" y="405" width="0.0112%" height="15" fill="rgb(233,25,53)" fg:x="33908" fg:w="24"/><text x="16.1222%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, std::__1::shared_ptr (22 samples, 0.01%)</title><rect x="15.8732%" y="389" width="0.0103%" height="15" fill="rgb(210,40,34)" fg:x="33910" fg:w="22"/><text x="16.1232%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTable::Get (22 samples, 0.01%)</title><rect x="15.8732%" y="373" width="0.0103%" height="15" fill="rgb(241,220,44)" fg:x="33910" fg:w="22"/><text x="16.1232%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::GetImpl (1,065 samples, 0.50%)</title><rect x="15.3896%" y="421" width="0.4985%" height="15" fill="rgb(235,28,35)" fg:x="32877" fg:w="1065"/><text x="15.6396%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1,079 samples, 0.51%)</title><rect x="15.3854%" y="437" width="0.5051%" height="15" fill="rgb(210,56,17)" fg:x="32868" fg:w="1079"/><text x="15.6354%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_get_pinned_cf (1,093 samples, 0.51%)</title><rect x="15.3812%" y="453" width="0.5116%" height="15" fill="rgb(224,130,29)" fg:x="32859" fg:w="1093"/><text x="15.6312%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf (1,194 samples, 0.56%)</title><rect x="15.3400%" y="469" width="0.5589%" height="15" fill="rgb(235,212,8)" fg:x="32771" fg:w="1194"/><text x="15.5900%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_db::schema::tables::_&lt;impl sov_rollup_interface::node::db::ValueCodec&lt;sov_db::schema::tables::KeyHashToKey&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::decode_value (23 samples, 0.01%)</title><rect x="15.9003%" y="469" width="0.0108%" height="15" fill="rgb(223,33,50)" fg:x="33968" fg:w="23"/><text x="16.1503%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::DB::get (1,416 samples, 0.66%)</title><rect x="15.2567%" y="485" width="0.6628%" height="15" fill="rgb(219,149,13)" fg:x="32593" fg:w="1416"/><text x="15.5067%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (56 samples, 0.03%)</title><rect x="15.9771%" y="469" width="0.0262%" height="15" fill="rgb(250,156,29)" fg:x="34132" fg:w="56"/><text x="16.2271%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_init (22 samples, 0.01%)</title><rect x="16.0033%" y="469" width="0.0103%" height="15" fill="rgb(216,193,19)" fg:x="34188" fg:w="22"/><text x="16.2533%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (36 samples, 0.02%)</title><rect x="16.0136%" y="469" width="0.0169%" height="15" fill="rgb(216,135,14)" fg:x="34210" fg:w="36"/><text x="16.2636%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (72 samples, 0.03%)</title><rect x="16.0609%" y="421" width="0.0337%" height="15" fill="rgb(241,47,5)" fg:x="34311" fg:w="72"/><text x="16.3109%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (81 samples, 0.04%)</title><rect x="16.0576%" y="453" width="0.0379%" height="15" fill="rgb(233,42,35)" fg:x="34304" fg:w="81"/><text x="16.3076%" y="463.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (81 samples, 0.04%)</title><rect x="16.0576%" y="437" width="0.0379%" height="15" fill="rgb(231,13,6)" fg:x="34304" fg:w="81"/><text x="16.3076%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (92 samples, 0.04%)</title><rect x="16.0534%" y="469" width="0.0431%" height="15" fill="rgb(207,181,40)" fg:x="34295" fg:w="92"/><text x="16.3034%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (33 samples, 0.02%)</title><rect x="16.1142%" y="421" width="0.0154%" height="15" fill="rgb(254,173,49)" fg:x="34425" fg:w="33"/><text x="16.3642%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (65 samples, 0.03%)</title><rect x="16.1035%" y="453" width="0.0304%" height="15" fill="rgb(221,1,38)" fg:x="34402" fg:w="65"/><text x="16.3535%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (51 samples, 0.02%)</title><rect x="16.1100%" y="437" width="0.0239%" height="15" fill="rgb(206,124,46)" fg:x="34416" fg:w="51"/><text x="16.3600%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;std::sys::unix::locks::pthread_mutex::AllocatedMutex as std::sys_common::lazy_box::LazyInit&gt;::init (98 samples, 0.05%)</title><rect x="16.0988%" y="469" width="0.0459%" height="15" fill="rgb(249,21,11)" fg:x="34392" fg:w="98"/><text x="16.3488%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (80 samples, 0.04%)</title><rect x="16.1601%" y="469" width="0.0374%" height="15" fill="rgb(222,201,40)" fg:x="34523" fg:w="80"/><text x="16.4101%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::finish_grow (24 samples, 0.01%)</title><rect x="16.1863%" y="453" width="0.0112%" height="15" fill="rgb(235,61,29)" fg:x="34579" fg:w="24"/><text x="16.4363%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`core::hash::BuildHasher::hash_one (60 samples, 0.03%)</title><rect x="16.2233%" y="453" width="0.0281%" height="15" fill="rgb(219,207,3)" fg:x="34658" fg:w="60"/><text x="16.4733%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (158 samples, 0.07%)</title><rect x="16.2018%" y="469" width="0.0740%" height="15" fill="rgb(222,56,46)" fg:x="34612" fg:w="158"/><text x="16.4518%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (52 samples, 0.02%)</title><rect x="16.2514%" y="453" width="0.0243%" height="15" fill="rgb(239,76,54)" fg:x="34718" fg:w="52"/><text x="16.5014%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.02%)</title><rect x="16.2570%" y="437" width="0.0187%" height="15" fill="rgb(231,124,27)" fg:x="34730" fg:w="40"/><text x="16.5070%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (35 samples, 0.02%)</title><rect x="16.2593%" y="421" width="0.0164%" height="15" fill="rgb(249,195,6)" fg:x="34735" fg:w="35"/><text x="16.5093%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (256 samples, 0.12%)</title><rect x="16.2893%" y="421" width="0.1198%" height="15" fill="rgb(237,174,47)" fg:x="34799" fg:w="256"/><text x="16.5393%" y="431.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (278 samples, 0.13%)</title><rect x="16.2799%" y="437" width="0.1301%" height="15" fill="rgb(206,201,31)" fg:x="34779" fg:w="278"/><text x="16.5299%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::histogram::Histogram::start_timer (286 samples, 0.13%)</title><rect x="16.2767%" y="469" width="0.1339%" height="15" fill="rgb(231,57,52)" fg:x="34772" fg:w="286"/><text x="16.5267%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (279 samples, 0.13%)</title><rect x="16.2799%" y="453" width="0.1306%" height="15" fill="rgb(248,177,22)" fg:x="34779" fg:w="279"/><text x="16.5299%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::vec::MetricVec&lt;T&gt;::with_label_values (62 samples, 0.03%)</title><rect x="16.4105%" y="469" width="0.0290%" height="15" fill="rgb(215,211,37)" fg:x="35058" fg:w="62"/><text x="16.6605%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_db::schema::tables::_&lt;impl sov_rollup_interface::node::db::KeyEncoder&lt;sov_db::schema::tables::JmtNodes&gt; for jmt::node_type::NodeKey&gt;::encode_key (27 samples, 0.01%)</title><rect x="16.4485%" y="469" width="0.0126%" height="15" fill="rgb(241,128,51)" fg:x="35139" fg:w="27"/><text x="16.6985%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (103 samples, 0.05%)</title><rect x="16.5889%" y="453" width="0.0482%" height="15" fill="rgb(227,165,31)" fg:x="35439" fg:w="103"/><text x="16.8389%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (91 samples, 0.04%)</title><rect x="16.5945%" y="437" width="0.0426%" height="15" fill="rgb(228,167,24)" fg:x="35451" fg:w="91"/><text x="16.8445%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (66 samples, 0.03%)</title><rect x="16.6062%" y="421" width="0.0309%" height="15" fill="rgb(228,143,12)" fg:x="35476" fg:w="66"/><text x="16.8562%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (54 samples, 0.03%)</title><rect x="16.6118%" y="405" width="0.0253%" height="15" fill="rgb(249,149,8)" fg:x="35488" fg:w="54"/><text x="16.8618%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (29 samples, 0.01%)</title><rect x="16.6235%" y="389" width="0.0136%" height="15" fill="rgb(243,35,44)" fg:x="35513" fg:w="29"/><text x="16.8735%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_db::schema::tables::_&lt;impl sov_rollup_interface::node::db::ValueCodec&lt;sov_db::schema::tables::JmtNodes&gt; for jmt::node_type::Node&gt;::encode_value (466 samples, 0.22%)</title><rect x="16.4625%" y="469" width="0.2181%" height="15" fill="rgb(246,89,9)" fg:x="35169" fg:w="466"/><text x="16.7125%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::Child as borsh::ser::BorshSerialize&gt;::serialize (89 samples, 0.04%)</title><rect x="16.6390%" y="453" width="0.0417%" height="15" fill="rgb(233,213,13)" fg:x="35546" fg:w="89"/><text x="16.8890%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (28 samples, 0.01%)</title><rect x="16.7728%" y="437" width="0.0131%" height="15" fill="rgb(233,141,41)" fg:x="35832" fg:w="28"/><text x="17.0228%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (78 samples, 0.04%)</title><rect x="16.7504%" y="453" width="0.0365%" height="15" fill="rgb(239,167,4)" fg:x="35784" fg:w="78"/><text x="17.0004%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (39 samples, 0.02%)</title><rect x="16.7948%" y="453" width="0.0183%" height="15" fill="rgb(209,217,16)" fg:x="35879" fg:w="39"/><text x="17.0448%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (23 samples, 0.01%)</title><rect x="16.8740%" y="421" width="0.0108%" height="15" fill="rgb(219,88,35)" fg:x="36048" fg:w="23"/><text x="17.1240%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_size (23 samples, 0.01%)</title><rect x="16.8866%" y="421" width="0.0108%" height="15" fill="rgb(220,193,23)" fg:x="36075" fg:w="23"/><text x="17.1366%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (150 samples, 0.07%)</title><rect x="16.8463%" y="437" width="0.0702%" height="15" fill="rgb(230,90,52)" fg:x="35989" fg:w="150"/><text x="17.0963%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (41 samples, 0.02%)</title><rect x="16.8974%" y="421" width="0.0192%" height="15" fill="rgb(252,106,19)" fg:x="36098" fg:w="41"/><text x="17.1474%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (30 samples, 0.01%)</title><rect x="16.9025%" y="405" width="0.0140%" height="15" fill="rgb(206,74,20)" fg:x="36109" fg:w="30"/><text x="17.1525%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (75 samples, 0.04%)</title><rect x="16.9166%" y="437" width="0.0351%" height="15" fill="rgb(230,138,44)" fg:x="36139" fg:w="75"/><text x="17.1666%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (307 samples, 0.14%)</title><rect x="16.8370%" y="453" width="0.1437%" height="15" fill="rgb(235,182,43)" fg:x="35969" fg:w="307"/><text x="17.0870%" y="463.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (24 samples, 0.01%)</title><rect x="16.9929%" y="405" width="0.0112%" height="15" fill="rgb(242,16,51)" fg:x="36302" fg:w="24"/><text x="17.2429%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (223 samples, 0.10%)</title><rect x="17.0041%" y="405" width="0.1044%" height="15" fill="rgb(248,9,4)" fg:x="36326" fg:w="223"/><text x="17.2541%" y="415.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (267 samples, 0.12%)</title><rect x="16.9858%" y="421" width="0.1250%" height="15" fill="rgb(210,31,22)" fg:x="36287" fg:w="267"/><text x="17.2358%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (268 samples, 0.13%)</title><rect x="16.9858%" y="437" width="0.1254%" height="15" fill="rgb(239,54,39)" fg:x="36287" fg:w="268"/><text x="17.2358%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (285 samples, 0.13%)</title><rect x="16.9807%" y="453" width="0.1334%" height="15" fill="rgb(230,99,41)" fg:x="36276" fg:w="285"/><text x="17.2307%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (34 samples, 0.02%)</title><rect x="17.1169%" y="405" width="0.0159%" height="15" fill="rgb(253,106,12)" fg:x="36567" fg:w="34"/><text x="17.3669%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.01%)</title><rect x="17.1206%" y="389" width="0.0122%" height="15" fill="rgb(213,46,41)" fg:x="36575" fg:w="26"/><text x="17.3706%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.01%)</title><rect x="17.1225%" y="373" width="0.0103%" height="15" fill="rgb(215,133,35)" fg:x="36579" fg:w="22"/><text x="17.3725%" y="383.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (37 samples, 0.02%)</title><rect x="17.1164%" y="421" width="0.0173%" height="15" fill="rgb(213,28,5)" fg:x="36566" fg:w="37"/><text x="17.3664%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;rocksdb::db_options::WriteOptions as core::default::Default&gt;::default (41 samples, 0.02%)</title><rect x="17.1150%" y="453" width="0.0192%" height="15" fill="rgb(215,77,49)" fg:x="36563" fg:w="41"/><text x="17.3650%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_writeoptions_create (38 samples, 0.02%)</title><rect x="17.1164%" y="437" width="0.0178%" height="15" fill="rgb(248,100,22)" fg:x="36566" fg:w="38"/><text x="17.3664%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`core::hash::BuildHasher::hash_one (45 samples, 0.02%)</title><rect x="17.1459%" y="453" width="0.0211%" height="15" fill="rgb(208,67,9)" fg:x="36629" fg:w="45"/><text x="17.3959%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::histogram::Histogram::observe (133 samples, 0.06%)</title><rect x="17.1670%" y="453" width="0.0623%" height="15" fill="rgb(219,133,21)" fg:x="36674" fg:w="133"/><text x="17.4170%" y="463.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (183 samples, 0.09%)</title><rect x="17.2320%" y="421" width="0.0857%" height="15" fill="rgb(246,46,29)" fg:x="36813" fg:w="183"/><text x="17.4820%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (166 samples, 0.08%)</title><rect x="17.2400%" y="405" width="0.0777%" height="15" fill="rgb(246,185,52)" fg:x="36830" fg:w="166"/><text x="17.4900%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::histogram::Histogram::start_timer (190 samples, 0.09%)</title><rect x="17.2292%" y="453" width="0.0889%" height="15" fill="rgb(252,136,11)" fg:x="36807" fg:w="190"/><text x="17.4792%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (184 samples, 0.09%)</title><rect x="17.2320%" y="437" width="0.0861%" height="15" fill="rgb(219,138,53)" fg:x="36813" fg:w="184"/><text x="17.4820%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::vec::MetricVec&lt;T&gt;::with_label_values (101 samples, 0.05%)</title><rect x="17.3182%" y="453" width="0.0473%" height="15" fill="rgb(211,51,23)" fg:x="36997" fg:w="101"/><text x="17.5682%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.01%)</title><rect x="17.3786%" y="437" width="0.0136%" height="15" fill="rgb(247,221,28)" fg:x="37126" fg:w="29"/><text x="17.6286%" y="447.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (26 samples, 0.01%)</title><rect x="17.5681%" y="389" width="0.0122%" height="15" fill="rgb(251,222,45)" fg:x="37531" fg:w="26"/><text x="17.8181%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::VersionEdit::~VersionEdit (31 samples, 0.01%)</title><rect x="17.6112%" y="373" width="0.0145%" height="15" fill="rgb(217,162,53)" fg:x="37623" fg:w="31"/><text x="17.8612%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::port::CondVar::SignalAll (27 samples, 0.01%)</title><rect x="17.6257%" y="373" width="0.0126%" height="15" fill="rgb(229,93,14)" fg:x="37654" fg:w="27"/><text x="17.8757%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_broadcast (24 samples, 0.01%)</title><rect x="17.6271%" y="357" width="0.0112%" height="15" fill="rgb(209,67,49)" fg:x="37657" fg:w="24"/><text x="17.8771%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::MarkLogsSynced (122 samples, 0.06%)</title><rect x="17.5911%" y="389" width="0.0571%" height="15" fill="rgb(213,87,29)" fg:x="37580" fg:w="122"/><text x="17.8411%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::PreprocessWrite (80 samples, 0.04%)</title><rect x="17.6538%" y="389" width="0.0374%" height="15" fill="rgb(205,151,52)" fg:x="37714" fg:w="80"/><text x="17.9038%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::WriteContext::~WriteContext (44 samples, 0.02%)</title><rect x="17.6913%" y="389" width="0.0206%" height="15" fill="rgb(253,215,39)" fg:x="37794" fg:w="44"/><text x="17.9413%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`crc32c_arm64(unsigned int, unsigned char const*, unsigned long) (72 samples, 0.03%)</title><rect x="17.7816%" y="341" width="0.0337%" height="15" fill="rgb(221,220,41)" fg:x="37987" fg:w="72"/><text x="18.0316%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::SetPerfLevel (38 samples, 0.02%)</title><rect x="17.8439%" y="325" width="0.0178%" height="15" fill="rgb(218,133,21)" fg:x="38120" fg:w="38"/><text x="18.0939%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`write (17,633 samples, 8.25%)</title><rect x="17.9033%" y="309" width="8.2540%" height="15" fill="rgb(221,193,43)" fg:x="38247" fg:w="17633"/><text x="18.1533%" y="319.50">libsystem_k..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::PosixWritableFile::Append (24 samples, 0.01%)</title><rect x="26.1591%" y="309" width="0.0112%" height="15" fill="rgb(240,128,52)" fg:x="55884" fg:w="24"/><text x="26.4091%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WritableFileWriter::WriteBuffered (17,770 samples, 8.32%)</title><rect x="17.8616%" y="325" width="8.3181%" height="15" fill="rgb(253,114,12)" fg:x="38158" fg:w="17770"/><text x="18.1116%" y="335.50">rollup_coars..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WritableFileWriter::Flush (17,859 samples, 8.36%)</title><rect x="17.8209%" y="341" width="8.3597%" height="15" fill="rgb(215,223,47)" fg:x="38071" fg:w="17859"/><text x="18.0709%" y="351.50">rollup_coars..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (29 samples, 0.01%)</title><rect x="26.1980%" y="325" width="0.0136%" height="15" fill="rgb(248,225,23)" fg:x="55967" fg:w="29"/><text x="26.4480%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WritableFileWriter::Append (98 samples, 0.05%)</title><rect x="26.2186%" y="325" width="0.0459%" height="15" fill="rgb(250,108,0)" fg:x="56011" fg:w="98"/><text x="26.4686%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::log::Writer::AddRecord (18,720 samples, 8.76%)</title><rect x="17.7685%" y="357" width="8.7628%" height="15" fill="rgb(228,208,7)" fg:x="37959" fg:w="18720"/><text x="18.0185%" y="367.50">rollup_coars..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::log::Writer::EmitPhysicalRecord (727 samples, 0.34%)</title><rect x="26.1910%" y="341" width="0.3403%" height="15" fill="rgb(244,45,10)" fg:x="55952" fg:w="727"/><text x="26.4410%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::crc32c::Crc32cCombine (570 samples, 0.27%)</title><rect x="26.2644%" y="325" width="0.2668%" height="15" fill="rgb(207,125,25)" fg:x="56109" fg:w="570"/><text x="26.5144%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::WriteToWAL (18,750 samples, 8.78%)</title><rect x="17.7573%" y="373" width="8.7768%" height="15" fill="rgb(210,195,18)" fg:x="37935" fg:w="18750"/><text x="18.0073%" y="383.50">rollup_coars..</text></g><g><title>libdyld.dylib`tlv_get_addr (64 samples, 0.03%)</title><rect x="26.6136%" y="341" width="0.0300%" height="15" fill="rgb(249,80,12)" fg:x="56855" fg:w="64"/><text x="26.8636%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`fsync (26,899 samples, 12.59%)</title><rect x="26.6436%" y="341" width="12.5913%" height="15" fill="rgb(221,65,9)" fg:x="56919" fg:w="26899"/><text x="26.8936%" y="351.50">libsystem_kernel.dy..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::PosixWritableFile::Sync (35 samples, 0.02%)</title><rect x="39.2387%" y="341" width="0.0164%" height="15" fill="rgb(235,49,36)" fg:x="83826" fg:w="35"/><text x="39.4887%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WritableFileWriter::SyncInternal (27,146 samples, 12.71%)</title><rect x="26.5645%" y="357" width="12.7070%" height="15" fill="rgb(225,32,20)" fg:x="56750" fg:w="27146"/><text x="26.8145%" y="367.50">rollup_coarse_measu..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WritableFileWriter::Sync (27,206 samples, 12.74%)</title><rect x="26.5369%" y="373" width="12.7350%" height="15" fill="rgb(215,141,46)" fg:x="56691" fg:w="27206"/><text x="26.7869%" y="383.50">rollup_coarse_measu..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::WriteToWAL (46,080 samples, 21.57%)</title><rect x="17.7118%" y="389" width="21.5699%" height="15" fill="rgb(250,160,47)" fg:x="37838" fg:w="46080"/><text x="17.9618%" y="399.50">rollup_coarse_measure-64f9a1d8b338..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_context (27 samples, 0.01%)</title><rect x="39.3108%" y="373" width="0.0126%" height="15" fill="rgb(216,222,40)" fg:x="83980" fg:w="27"/><text x="39.5608%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::InstrumentedMutex::Lock (89 samples, 0.04%)</title><rect x="39.2841%" y="389" width="0.0417%" height="15" fill="rgb(234,217,39)" fg:x="83923" fg:w="89"/><text x="39.5341%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (126 samples, 0.06%)</title><rect x="39.4100%" y="325" width="0.0590%" height="15" fill="rgb(207,178,40)" fg:x="84192" fg:w="126"/><text x="39.6600%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::MemTableInserter::CheckMemtableFull (25 samples, 0.01%)</title><rect x="39.4741%" y="325" width="0.0117%" height="15" fill="rgb(221,136,13)" fg:x="84329" fg:w="25"/><text x="39.7241%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (56 samples, 0.03%)</title><rect x="39.8528%" y="293" width="0.0262%" height="15" fill="rgb(249,199,10)" fg:x="85138" fg:w="56"/><text x="40.1028%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::GetVarint32PtrFallback (107 samples, 0.05%)</title><rect x="39.8790%" y="293" width="0.0501%" height="15" fill="rgb(249,222,13)" fg:x="85194" fg:w="107"/><text x="40.1290%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (61 samples, 0.03%)</title><rect x="39.9928%" y="277" width="0.0286%" height="15" fill="rgb(244,185,38)" fg:x="85437" fg:w="61"/><text x="40.2428%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (220 samples, 0.10%)</title><rect x="40.0213%" y="277" width="0.1030%" height="15" fill="rgb(236,202,9)" fg:x="85498" fg:w="220"/><text x="40.2713%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`DYLD-STUB$$memcmp (22 samples, 0.01%)</title><rect x="40.1243%" y="277" width="0.0103%" height="15" fill="rgb(250,229,37)" fg:x="85718" fg:w="22"/><text x="40.3743%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_context (97 samples, 0.05%)</title><rect x="40.1365%" y="277" width="0.0454%" height="15" fill="rgb(206,174,23)" fg:x="85744" fg:w="97"/><text x="40.3865%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (576 samples, 0.27%)</title><rect x="39.9291%" y="293" width="0.2696%" height="15" fill="rgb(211,33,43)" fg:x="85301" fg:w="576"/><text x="40.1791%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_level (36 samples, 0.02%)</title><rect x="40.1819%" y="277" width="0.0169%" height="15" fill="rgb(245,58,50)" fg:x="85841" fg:w="36"/><text x="40.4319%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTableRep::KeyComparator::decode_key (27 samples, 0.01%)</title><rect x="40.1988%" y="293" width="0.0126%" height="15" fill="rgb(244,68,36)" fg:x="85877" fg:w="27"/><text x="40.4488%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (1,447 samples, 0.68%)</title><rect x="39.5369%" y="309" width="0.6773%" height="15" fill="rgb(232,229,15)" fg:x="84463" fg:w="1447"/><text x="39.7869%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`char* rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::&apos;lambda&apos;()&gt;(unsigned long, bool, rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::&apos;lambda&apos; (42 samples, 0.02%)</title><rect x="40.2493%" y="277" width="0.0197%" height="15" fill="rgb(254,30,23)" fg:x="85985" fg:w="42"/><text x="40.4993%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::ConcurrentArena::AllocateAligned (62 samples, 0.03%)</title><rect x="40.2465%" y="293" width="0.0290%" height="15" fill="rgb(235,160,14)" fg:x="85979" fg:w="62"/><text x="40.4965%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::SkipListRep::Allocate (136 samples, 0.06%)</title><rect x="40.2142%" y="309" width="0.0637%" height="15" fill="rgb(212,155,44)" fg:x="85910" fg:w="136"/><text x="40.4642%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (40 samples, 0.02%)</title><rect x="40.2839%" y="309" width="0.0187%" height="15" fill="rgb(226,2,50)" fg:x="86059" fg:w="40"/><text x="40.5339%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (1,951 samples, 0.91%)</title><rect x="39.3927%" y="341" width="0.9133%" height="15" fill="rgb(234,177,6)" fg:x="84155" fg:w="1951"/><text x="39.6427%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (1,688 samples, 0.79%)</title><rect x="39.5158%" y="325" width="0.7901%" height="15" fill="rgb(217,24,9)" fg:x="84418" fg:w="1688"/><text x="39.7658%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (1,992 samples, 0.93%)</title><rect x="39.3852%" y="357" width="0.9324%" height="15" fill="rgb(220,13,46)" fg:x="84139" fg:w="1992"/><text x="39.6352%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WriteBatchInternal::InsertInto (2,239 samples, 1.05%)</title><rect x="39.3407%" y="389" width="1.0481%" height="15" fill="rgb(239,221,27)" fg:x="84044" fg:w="2239"/><text x="39.5907%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WriteBatchInternal::Iterate (2,196 samples, 1.03%)</title><rect x="39.3609%" y="373" width="1.0279%" height="15" fill="rgb(222,198,25)" fg:x="84087" fg:w="2196"/><text x="39.6109%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::ReadRecordFromWriteBatch (136 samples, 0.06%)</title><rect x="40.3251%" y="357" width="0.0637%" height="15" fill="rgb(211,99,13)" fg:x="86147" fg:w="136"/><text x="40.5751%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WriteThread::ExitAsBatchGroupLeader (55 samples, 0.03%)</title><rect x="40.3991%" y="389" width="0.0257%" height="15" fill="rgb(232,111,31)" fg:x="86305" fg:w="55"/><text x="40.6491%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::port::Mutex::Unlock (27 samples, 0.01%)</title><rect x="40.4497%" y="389" width="0.0126%" height="15" fill="rgb(245,82,37)" fg:x="86413" fg:w="27"/><text x="40.6997%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_context (46 samples, 0.02%)</title><rect x="40.4623%" y="389" width="0.0215%" height="15" fill="rgb(227,149,46)" fg:x="86440" fg:w="46"/><text x="40.7123%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::WriteImpl (49,211 samples, 23.04%)</title><rect x="17.4558%" y="405" width="23.0355%" height="15" fill="rgb(218,36,50)" fg:x="37291" fg:w="49211"/><text x="17.7058%" y="415.50">rollup_coarse_measure-64f9a1d8b33892a..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::Write (49,342 samples, 23.10%)</title><rect x="17.4291%" y="421" width="23.0968%" height="15" fill="rgb(226,80,48)" fg:x="37234" fg:w="49342"/><text x="17.6791%" y="431.50">rollup_coarse_measure-64f9a1d8b33892a..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_write (49,371 samples, 23.11%)</title><rect x="17.4174%" y="437" width="23.1104%" height="15" fill="rgb(238,224,15)" fg:x="37209" fg:w="49371"/><text x="17.6674%" y="447.50">rollup_coarse_measure-64f9a1d8b33892a..</text></g><g><title>libsystem_malloc.dylib`szone_size (23 samples, 0.01%)</title><rect x="40.5704%" y="389" width="0.0108%" height="15" fill="rgb(241,136,10)" fg:x="86671" fg:w="23"/><text x="40.8204%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (52 samples, 0.02%)</title><rect x="40.5573%" y="405" width="0.0243%" height="15" fill="rgb(208,32,45)" fg:x="86643" fg:w="52"/><text x="40.8073%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (85 samples, 0.04%)</title><rect x="40.5817%" y="405" width="0.0398%" height="15" fill="rgb(207,135,9)" fg:x="86695" fg:w="85"/><text x="40.8317%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (68 samples, 0.03%)</title><rect x="40.5896%" y="389" width="0.0318%" height="15" fill="rgb(206,86,44)" fg:x="86712" fg:w="68"/><text x="40.8396%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (23 samples, 0.01%)</title><rect x="40.6107%" y="373" width="0.0108%" height="15" fill="rgb(245,177,15)" fg:x="86757" fg:w="23"/><text x="40.8607%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write_opt (49,715 samples, 23.27%)</title><rect x="17.3692%" y="453" width="23.2714%" height="15" fill="rgb(206,64,50)" fg:x="37106" fg:w="49715"/><text x="17.6192%" y="463.50">rollup_coarse_measure-64f9a1d8b33892a..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_writebatch_destroy (241 samples, 0.11%)</title><rect x="40.5278%" y="437" width="0.1128%" height="15" fill="rgb(234,36,40)" fg:x="86580" fg:w="241"/><text x="40.7778%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WriteBatch::~WriteBatch (183 samples, 0.09%)</title><rect x="40.5550%" y="421" width="0.0857%" height="15" fill="rgb(213,64,8)" fg:x="86638" fg:w="183"/><text x="40.8050%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_writebatch_create (54 samples, 0.03%)</title><rect x="40.6434%" y="453" width="0.0253%" height="15" fill="rgb(210,75,36)" fg:x="86827" fg:w="54"/><text x="40.8934%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (36 samples, 0.02%)</title><rect x="40.7464%" y="341" width="0.0169%" height="15" fill="rgb(229,88,21)" fg:x="87047" fg:w="36"/><text x="40.9964%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (28 samples, 0.01%)</title><rect x="40.7502%" y="325" width="0.0131%" height="15" fill="rgb(252,204,47)" fg:x="87055" fg:w="28"/><text x="41.0002%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (68 samples, 0.03%)</title><rect x="40.7633%" y="341" width="0.0318%" height="15" fill="rgb(208,77,27)" fg:x="87083" fg:w="68"/><text x="41.0133%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (65 samples, 0.03%)</title><rect x="40.7647%" y="325" width="0.0304%" height="15" fill="rgb(221,76,26)" fg:x="87086" fg:w="65"/><text x="41.0147%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (45 samples, 0.02%)</title><rect x="40.7740%" y="309" width="0.0211%" height="15" fill="rgb(225,139,18)" fg:x="87106" fg:w="45"/><text x="41.0240%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (26 samples, 0.01%)</title><rect x="40.7829%" y="293" width="0.0122%" height="15" fill="rgb(230,137,11)" fg:x="87125" fg:w="26"/><text x="41.0329%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (120 samples, 0.06%)</title><rect x="40.7403%" y="357" width="0.0562%" height="15" fill="rgb(212,28,1)" fg:x="87034" fg:w="120"/><text x="40.9903%" y="367.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (124 samples, 0.06%)</title><rect x="40.7403%" y="373" width="0.0580%" height="15" fill="rgb(248,164,17)" fg:x="87034" fg:w="124"/><text x="40.9903%" y="383.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__grow_by_and_replace (173 samples, 0.08%)</title><rect x="40.7314%" y="389" width="0.0810%" height="15" fill="rgb(222,171,42)" fg:x="87015" fg:w="173"/><text x="40.9814%" y="399.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (290 samples, 0.14%)</title><rect x="40.7123%" y="405" width="0.1357%" height="15" fill="rgb(243,84,45)" fg:x="86974" fg:w="290"/><text x="40.9623%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (60 samples, 0.03%)</title><rect x="40.8199%" y="389" width="0.0281%" height="15" fill="rgb(252,49,23)" fg:x="87204" fg:w="60"/><text x="41.0699%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WriteBatch::Put (398 samples, 0.19%)</title><rect x="40.6729%" y="437" width="0.1863%" height="15" fill="rgb(215,19,7)" fg:x="86890" fg:w="398"/><text x="40.9229%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WriteBatchInternal::Put (344 samples, 0.16%)</title><rect x="40.6982%" y="421" width="0.1610%" height="15" fill="rgb(238,81,41)" fg:x="86944" fg:w="344"/><text x="40.9482%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_writebatch_put_cf (410 samples, 0.19%)</title><rect x="40.6715%" y="453" width="0.1919%" height="15" fill="rgb(210,199,37)" fg:x="86887" fg:w="410"/><text x="40.9215%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::DB::write_schemas (51,652 samples, 24.18%)</title><rect x="16.6867%" y="469" width="24.1781%" height="15" fill="rgb(244,192,49)" fg:x="35648" fg:w="51652"/><text x="16.9367%" y="479.50">rollup_coarse_measure-64f9a1d8b33892a3..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::DB::put (53,302 samples, 24.95%)</title><rect x="15.9200%" y="485" width="24.9505%" height="15" fill="rgb(226,211,11)" fg:x="34010" fg:w="53302"/><text x="16.1700%" y="495.50">rollup_coarse_measure-64f9a1d8b33892a3`s..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_db::state_db::StateDB as jmt::writer::TreeWriter&gt;::write_node_batch (55,446 samples, 25.95%)</title><rect x="14.9178%" y="501" width="25.9541%" height="15" fill="rgb(236,162,54)" fg:x="31869" fg:w="55446"/><text x="15.1678%" y="511.50">rollup_coarse_measure-64f9a1d8b33892a3`&lt;s..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_state::witness::ArrayWitness as sov_state::witness::Witness&gt;::add_hint (66 samples, 0.03%)</title><rect x="40.8719%" y="501" width="0.0309%" height="15" fill="rgb(220,229,9)" fg:x="87315" fg:w="66"/><text x="41.1219%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`borsh::ser::BorshSerialize::try_to_vec (44 samples, 0.02%)</title><rect x="40.8822%" y="485" width="0.0206%" height="15" fill="rgb(250,87,22)" fg:x="87337" fg:w="44"/><text x="41.1322%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (25 samples, 0.01%)</title><rect x="40.9805%" y="453" width="0.0117%" height="15" fill="rgb(239,43,17)" fg:x="87547" fg:w="25"/><text x="41.2305%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (23 samples, 0.01%)</title><rect x="40.9814%" y="437" width="0.0108%" height="15" fill="rgb(231,177,25)" fg:x="87549" fg:w="23"/><text x="41.2314%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (87 samples, 0.04%)</title><rect x="40.9524%" y="469" width="0.0407%" height="15" fill="rgb(219,179,1)" fg:x="87487" fg:w="87"/><text x="41.2024%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (32 samples, 0.01%)</title><rect x="41.0128%" y="453" width="0.0150%" height="15" fill="rgb(238,219,53)" fg:x="87616" fg:w="32"/><text x="41.2628%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_small (79 samples, 0.04%)</title><rect x="40.9931%" y="469" width="0.0370%" height="15" fill="rgb(232,167,36)" fg:x="87574" fg:w="79"/><text x="41.2431%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (24 samples, 0.01%)</title><rect x="41.0947%" y="437" width="0.0112%" height="15" fill="rgb(244,19,51)" fg:x="87791" fg:w="24"/><text x="41.3447%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (240 samples, 0.11%)</title><rect x="41.0366%" y="453" width="0.1123%" height="15" fill="rgb(224,6,22)" fg:x="87667" fg:w="240"/><text x="41.2866%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_madvise_free_range_no_lock (65 samples, 0.03%)</title><rect x="41.1186%" y="437" width="0.0304%" height="15" fill="rgb(224,145,5)" fg:x="87842" fg:w="65"/><text x="41.3686%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`madvise (64 samples, 0.03%)</title><rect x="41.1190%" y="421" width="0.0300%" height="15" fill="rgb(234,130,49)" fg:x="87843" fg:w="64"/><text x="41.3690%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (255 samples, 0.12%)</title><rect x="41.0301%" y="469" width="0.1194%" height="15" fill="rgb(254,6,2)" fg:x="87653" fg:w="255"/><text x="41.2801%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (51 samples, 0.02%)</title><rect x="41.1569%" y="469" width="0.0239%" height="15" fill="rgb(208,96,46)" fg:x="87924" fg:w="51"/><text x="41.4069%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (31 samples, 0.01%)</title><rect x="41.1841%" y="469" width="0.0145%" height="15" fill="rgb(239,3,39)" fg:x="87982" fg:w="31"/><text x="41.4341%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_small (25 samples, 0.01%)</title><rect x="41.2098%" y="453" width="0.0117%" height="15" fill="rgb(233,210,1)" fg:x="88037" fg:w="25"/><text x="41.4598%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (41 samples, 0.02%)</title><rect x="41.2215%" y="453" width="0.0192%" height="15" fill="rgb(244,137,37)" fg:x="88062" fg:w="41"/><text x="41.4715%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (40 samples, 0.02%)</title><rect x="41.2220%" y="437" width="0.0187%" height="15" fill="rgb(240,136,2)" fg:x="88063" fg:w="40"/><text x="41.4720%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (644 samples, 0.30%)</title><rect x="40.9416%" y="485" width="0.3015%" height="15" fill="rgb(239,18,37)" fg:x="87464" fg:w="644"/><text x="41.1916%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (93 samples, 0.04%)</title><rect x="41.1995%" y="469" width="0.0435%" height="15" fill="rgb(218,185,22)" fg:x="88015" fg:w="93"/><text x="41.4495%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`core::ptr::drop_in_place&lt;jmt::writer::TreeUpdateBatch&gt; (714 samples, 0.33%)</title><rect x="40.9112%" y="501" width="0.3342%" height="15" fill="rgb(225,218,4)" fg:x="87399" fg:w="714"/><text x="41.1612%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (42 samples, 0.02%)</title><rect x="41.3156%" y="469" width="0.0197%" height="15" fill="rgb(230,182,32)" fg:x="88263" fg:w="42"/><text x="41.5656%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (116 samples, 0.05%)</title><rect x="41.2922%" y="485" width="0.0543%" height="15" fill="rgb(242,56,43)" fg:x="88213" fg:w="116"/><text x="41.5422%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (95 samples, 0.04%)</title><rect x="41.3465%" y="485" width="0.0445%" height="15" fill="rgb(233,99,24)" fg:x="88329" fg:w="95"/><text x="41.5965%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (85 samples, 0.04%)</title><rect x="41.3512%" y="469" width="0.0398%" height="15" fill="rgb(234,209,42)" fg:x="88339" fg:w="85"/><text x="41.6012%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (23 samples, 0.01%)</title><rect x="41.3802%" y="453" width="0.0108%" height="15" fill="rgb(227,7,12)" fg:x="88401" fg:w="23"/><text x="41.6302%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (29 samples, 0.01%)</title><rect x="41.3947%" y="485" width="0.0136%" height="15" fill="rgb(245,203,43)" fg:x="88432" fg:w="29"/><text x="41.6447%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (39 samples, 0.02%)</title><rect x="41.4565%" y="421" width="0.0183%" height="15" fill="rgb(238,205,33)" fg:x="88564" fg:w="39"/><text x="41.7065%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (28 samples, 0.01%)</title><rect x="41.4762%" y="421" width="0.0131%" height="15" fill="rgb(231,56,7)" fg:x="88606" fg:w="28"/><text x="41.7262%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (93 samples, 0.04%)</title><rect x="41.4495%" y="437" width="0.0435%" height="15" fill="rgb(244,186,29)" fg:x="88549" fg:w="93"/><text x="41.6995%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`realloc (109 samples, 0.05%)</title><rect x="41.4462%" y="453" width="0.0510%" height="15" fill="rgb(234,111,31)" fg:x="88542" fg:w="109"/><text x="41.6962%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (148 samples, 0.07%)</title><rect x="41.4284%" y="485" width="0.0693%" height="15" fill="rgb(241,149,10)" fg:x="88504" fg:w="148"/><text x="41.6784%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::finish_grow (128 samples, 0.06%)</title><rect x="41.4378%" y="469" width="0.0599%" height="15" fill="rgb(249,206,44)" fg:x="88524" fg:w="128"/><text x="41.6878%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (51 samples, 0.02%)</title><rect x="41.5272%" y="469" width="0.0239%" height="15" fill="rgb(251,153,30)" fg:x="88715" fg:w="51"/><text x="41.7772%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (38 samples, 0.02%)</title><rect x="41.5333%" y="453" width="0.0178%" height="15" fill="rgb(239,152,38)" fg:x="88728" fg:w="38"/><text x="41.7833%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (34 samples, 0.02%)</title><rect x="41.5352%" y="437" width="0.0159%" height="15" fill="rgb(249,139,47)" fg:x="88732" fg:w="34"/><text x="41.7852%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (29 samples, 0.01%)</title><rect x="41.5375%" y="421" width="0.0136%" height="15" fill="rgb(244,64,35)" fg:x="88737" fg:w="29"/><text x="41.7875%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (33 samples, 0.02%)</title><rect x="41.5754%" y="405" width="0.0154%" height="15" fill="rgb(216,46,15)" fg:x="88818" fg:w="33"/><text x="41.8254%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (58 samples, 0.03%)</title><rect x="41.5651%" y="437" width="0.0271%" height="15" fill="rgb(250,74,19)" fg:x="88796" fg:w="58"/><text x="41.8151%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (44 samples, 0.02%)</title><rect x="41.5717%" y="421" width="0.0206%" height="15" fill="rgb(249,42,33)" fg:x="88810" fg:w="44"/><text x="41.8217%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (103 samples, 0.05%)</title><rect x="41.5530%" y="469" width="0.0482%" height="15" fill="rgb(242,149,17)" fg:x="88770" fg:w="103"/><text x="41.8030%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::finish_grow (81 samples, 0.04%)</title><rect x="41.5633%" y="453" width="0.0379%" height="15" fill="rgb(244,29,21)" fg:x="88792" fg:w="81"/><text x="41.8133%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::generate_bitmaps (113 samples, 0.05%)</title><rect x="41.6180%" y="469" width="0.0529%" height="15" fill="rgb(220,130,37)" fg:x="88909" fg:w="113"/><text x="41.8680%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (45 samples, 0.02%)</title><rect x="41.7084%" y="453" width="0.0211%" height="15" fill="rgb(211,67,2)" fg:x="89102" fg:w="45"/><text x="41.9584%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`digest::FixedOutput::finalize_fixed (32 samples, 0.01%)</title><rect x="41.7365%" y="453" width="0.0150%" height="15" fill="rgb(235,68,52)" fg:x="89162" fg:w="32"/><text x="41.9865%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (66 samples, 0.03%)</title><rect x="41.8048%" y="437" width="0.0309%" height="15" fill="rgb(246,142,3)" fg:x="89308" fg:w="66"/><text x="42.0548%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`digest::FixedOutput::finalize_fixed (50 samples, 0.02%)</title><rect x="41.8455%" y="437" width="0.0234%" height="15" fill="rgb(241,25,7)" fg:x="89395" fg:w="50"/><text x="42.0955%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (68 samples, 0.03%)</title><rect x="41.9494%" y="421" width="0.0318%" height="15" fill="rgb(242,119,39)" fg:x="89617" fg:w="68"/><text x="42.1994%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`anyhow::context::_&lt;impl anyhow::Context&lt;T,core::convert::Infallible&gt; for core::option::Option&lt;T&gt;&gt;::with_context (33 samples, 0.02%)</title><rect x="41.9864%" y="421" width="0.0154%" height="15" fill="rgb(241,98,45)" fg:x="89696" fg:w="33"/><text x="42.2364%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (71 samples, 0.03%)</title><rect x="42.0112%" y="421" width="0.0332%" height="15" fill="rgb(254,28,30)" fg:x="89749" fg:w="71"/><text x="42.2612%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (3,405 samples, 1.59%)</title><rect x="41.8689%" y="437" width="1.5939%" height="15" fill="rgb(241,142,54)" fg:x="89445" fg:w="3405"/><text x="42.1189%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (3,030 samples, 1.42%)</title><rect x="42.0445%" y="421" width="1.4183%" height="15" fill="rgb(222,85,15)" fg:x="89820" fg:w="3030"/><text x="42.2945%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (9,772 samples, 4.57%)</title><rect x="41.7514%" y="453" width="4.5742%" height="15" fill="rgb(210,85,47)" fg:x="89194" fg:w="9772"/><text x="42.0014%" y="463.50">rollu..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (6,114 samples, 2.86%)</title><rect x="43.4637%" y="437" width="2.8619%" height="15" fill="rgb(224,206,25)" fg:x="92852" fg:w="6114"/><text x="43.7137%" y="447.50">ro..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (15,538 samples, 7.27%)</title><rect x="41.6709%" y="469" width="7.2733%" height="15" fill="rgb(243,201,19)" fg:x="89022" fg:w="15538"/><text x="41.9209%" y="479.50">rollup_coa..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (5,594 samples, 2.62%)</title><rect x="46.3257%" y="453" width="2.6185%" height="15" fill="rgb(236,59,4)" fg:x="98966" fg:w="5594"/><text x="46.5757%" y="463.50">ro..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::get_child_with_siblings (18,321 samples, 8.58%)</title><rect x="41.5047%" y="485" width="8.5760%" height="15" fill="rgb(254,179,45)" fg:x="88667" fg:w="18321"/><text x="41.7547%" y="495.50">rollup_coars..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (2,428 samples, 1.14%)</title><rect x="48.9442%" y="469" width="1.1365%" height="15" fill="rgb(226,14,10)" fg:x="104560" fg:w="2428"/><text x="49.1942%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (70 samples, 0.03%)</title><rect x="50.1224%" y="469" width="0.0328%" height="15" fill="rgb(244,27,41)" fg:x="107077" fg:w="70"/><text x="50.3724%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (34 samples, 0.02%)</title><rect x="50.1734%" y="437" width="0.0159%" height="15" fill="rgb(235,35,32)" fg:x="107186" fg:w="34"/><text x="50.4234%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (91 samples, 0.04%)</title><rect x="50.1570%" y="469" width="0.0426%" height="15" fill="rgb(218,68,31)" fg:x="107151" fg:w="91"/><text x="50.4070%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (82 samples, 0.04%)</title><rect x="50.1613%" y="453" width="0.0384%" height="15" fill="rgb(207,120,37)" fg:x="107160" fg:w="82"/><text x="50.4113%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (22 samples, 0.01%)</title><rect x="50.1893%" y="437" width="0.0103%" height="15" fill="rgb(227,98,0)" fg:x="107220" fg:w="22"/><text x="50.4393%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (50 samples, 0.02%)</title><rect x="50.2277%" y="469" width="0.0234%" height="15" fill="rgb(207,7,3)" fg:x="107302" fg:w="50"/><text x="50.4777%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (106 samples, 0.05%)</title><rect x="50.2844%" y="421" width="0.0496%" height="15" fill="rgb(206,98,19)" fg:x="107423" fg:w="106"/><text x="50.5344%" y="431.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (125 samples, 0.06%)</title><rect x="50.2759%" y="437" width="0.0585%" height="15" fill="rgb(217,5,26)" fg:x="107405" fg:w="125"/><text x="50.5259%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (126 samples, 0.06%)</title><rect x="50.2759%" y="453" width="0.0590%" height="15" fill="rgb(235,190,38)" fg:x="107405" fg:w="126"/><text x="50.5259%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (177 samples, 0.08%)</title><rect x="50.2530%" y="469" width="0.0829%" height="15" fill="rgb(247,86,24)" fg:x="107356" fg:w="177"/><text x="50.5030%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::histogram::Histogram::observe (50 samples, 0.02%)</title><rect x="50.3560%" y="469" width="0.0234%" height="15" fill="rgb(205,101,16)" fg:x="107576" fg:w="50"/><text x="50.6060%" y="479.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (263 samples, 0.12%)</title><rect x="50.3827%" y="437" width="0.1231%" height="15" fill="rgb(246,168,33)" fg:x="107633" fg:w="263"/><text x="50.6327%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (235 samples, 0.11%)</title><rect x="50.3958%" y="421" width="0.1100%" height="15" fill="rgb(231,114,1)" fg:x="107661" fg:w="235"/><text x="50.6458%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::histogram::Histogram::start_timer (273 samples, 0.13%)</title><rect x="50.3794%" y="469" width="0.1278%" height="15" fill="rgb(207,184,53)" fg:x="107626" fg:w="273"/><text x="50.6294%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (266 samples, 0.12%)</title><rect x="50.3827%" y="453" width="0.1245%" height="15" fill="rgb(224,95,51)" fg:x="107633" fg:w="266"/><text x="50.6327%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.01%)</title><rect x="50.5442%" y="453" width="0.0126%" height="15" fill="rgb(212,188,45)" fg:x="107978" fg:w="27"/><text x="50.7942%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::vec::MetricVec&lt;T&gt;::with_label_values (125 samples, 0.06%)</title><rect x="50.5072%" y="469" width="0.0585%" height="15" fill="rgb(223,154,38)" fg:x="107899" fg:w="125"/><text x="50.7572%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.01%)</title><rect x="50.6134%" y="421" width="0.0103%" height="15" fill="rgb(251,22,52)" fg:x="108126" fg:w="22"/><text x="50.8634%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (30 samples, 0.01%)</title><rect x="50.6102%" y="437" width="0.0140%" height="15" fill="rgb(229,209,22)" fg:x="108119" fg:w="30"/><text x="50.8602%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (26 samples, 0.01%)</title><rect x="50.6317%" y="405" width="0.0122%" height="15" fill="rgb(234,138,34)" fg:x="108165" fg:w="26"/><text x="50.8817%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (85 samples, 0.04%)</title><rect x="50.6242%" y="437" width="0.0398%" height="15" fill="rgb(212,95,11)" fg:x="108149" fg:w="85"/><text x="50.8742%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (81 samples, 0.04%)</title><rect x="50.6261%" y="421" width="0.0379%" height="15" fill="rgb(240,179,47)" fg:x="108153" fg:w="81"/><text x="50.8761%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (43 samples, 0.02%)</title><rect x="50.6439%" y="405" width="0.0201%" height="15" fill="rgb(240,163,11)" fg:x="108191" fg:w="43"/><text x="50.8939%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (124 samples, 0.06%)</title><rect x="50.6064%" y="453" width="0.0580%" height="15" fill="rgb(236,37,12)" fg:x="108111" fg:w="124"/><text x="50.8564%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (51 samples, 0.02%)</title><rect x="50.6897%" y="437" width="0.0239%" height="15" fill="rgb(232,164,16)" fg:x="108289" fg:w="51"/><text x="50.9397%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (127 samples, 0.06%)</title><rect x="50.6668%" y="453" width="0.0594%" height="15" fill="rgb(244,205,15)" fg:x="108240" fg:w="127"/><text x="50.9168%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_small (27 samples, 0.01%)</title><rect x="50.7263%" y="453" width="0.0126%" height="15" fill="rgb(223,117,47)" fg:x="108367" fg:w="27"/><text x="50.9763%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (27 samples, 0.01%)</title><rect x="50.7450%" y="453" width="0.0126%" height="15" fill="rgb(244,107,35)" fg:x="108407" fg:w="27"/><text x="50.9950%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (45 samples, 0.02%)</title><rect x="50.7941%" y="373" width="0.0211%" height="15" fill="rgb(205,140,8)" fg:x="108512" fg:w="45"/><text x="51.0441%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (28 samples, 0.01%)</title><rect x="50.8021%" y="357" width="0.0131%" height="15" fill="rgb(228,84,46)" fg:x="108529" fg:w="28"/><text x="51.0521%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (66 samples, 0.03%)</title><rect x="50.7852%" y="405" width="0.0309%" height="15" fill="rgb(254,188,9)" fg:x="108493" fg:w="66"/><text x="51.0352%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (51 samples, 0.02%)</title><rect x="50.7923%" y="389" width="0.0239%" height="15" fill="rgb(206,112,54)" fg:x="108508" fg:w="51"/><text x="51.0423%" y="399.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (71 samples, 0.03%)</title><rect x="50.7852%" y="421" width="0.0332%" height="15" fill="rgb(216,84,49)" fg:x="108493" fg:w="71"/><text x="51.0352%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;rocksdb::db_options::ReadOptions as core::default::Default&gt;::default (108 samples, 0.05%)</title><rect x="50.7693%" y="453" width="0.0506%" height="15" fill="rgb(214,194,35)" fg:x="108459" fg:w="108"/><text x="51.0193%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_readoptions_create (90 samples, 0.04%)</title><rect x="50.7777%" y="437" width="0.0421%" height="15" fill="rgb(249,28,3)" fg:x="108477" fg:w="90"/><text x="51.0277%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;rocksdb::db_pinnable_slice::DBPinnableSlice as core::convert::AsRef&lt;[u8]&gt;&gt;::as_ref (100 samples, 0.05%)</title><rect x="50.8199%" y="453" width="0.0468%" height="15" fill="rgb(222,56,52)" fg:x="108567" fg:w="100"/><text x="51.0699%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (25 samples, 0.01%)</title><rect x="50.8976%" y="373" width="0.0117%" height="15" fill="rgb(245,217,50)" fg:x="108733" fg:w="25"/><text x="51.1476%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (74 samples, 0.03%)</title><rect x="50.8831%" y="421" width="0.0346%" height="15" fill="rgb(213,201,24)" fg:x="108702" fg:w="74"/><text x="51.1331%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (58 samples, 0.03%)</title><rect x="50.8906%" y="405" width="0.0271%" height="15" fill="rgb(248,116,28)" fg:x="108718" fg:w="58"/><text x="51.1406%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (53 samples, 0.02%)</title><rect x="50.8929%" y="389" width="0.0248%" height="15" fill="rgb(219,72,43)" fg:x="108723" fg:w="53"/><text x="51.1429%" y="399.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (78 samples, 0.04%)</title><rect x="50.8817%" y="437" width="0.0365%" height="15" fill="rgb(209,138,14)" fg:x="108699" fg:w="78"/><text x="51.1317%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::FailIfCfHasTs (25 samples, 0.01%)</title><rect x="50.9317%" y="421" width="0.0117%" height="15" fill="rgb(222,18,33)" fg:x="108806" fg:w="25"/><text x="51.1817%" y="431.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (37 samples, 0.02%)</title><rect x="50.9968%" y="405" width="0.0173%" height="15" fill="rgb(213,199,7)" fg:x="108945" fg:w="37"/><text x="51.2468%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (50 samples, 0.02%)</title><rect x="51.0141%" y="405" width="0.0234%" height="15" fill="rgb(250,110,10)" fg:x="108982" fg:w="50"/><text x="51.2641%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap (22 samples, 0.01%)</title><rect x="51.0694%" y="389" width="0.0103%" height="15" fill="rgb(248,123,6)" fg:x="109100" fg:w="22"/><text x="51.3194%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion (41 samples, 0.02%)</title><rect x="51.0638%" y="405" width="0.0192%" height="15" fill="rgb(206,91,31)" fg:x="109088" fg:w="41"/><text x="51.3138%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::FailIfCfHasTs (45 samples, 0.02%)</title><rect x="51.0848%" y="405" width="0.0211%" height="15" fill="rgb(211,154,13)" fg:x="109133" fg:w="45"/><text x="51.3348%" y="415.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (23 samples, 0.01%)</title><rect x="51.1307%" y="389" width="0.0108%" height="15" fill="rgb(225,148,7)" fg:x="109231" fg:w="23"/><text x="51.3807%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (94 samples, 0.04%)</title><rect x="51.6699%" y="373" width="0.0440%" height="15" fill="rgb(220,160,43)" fg:x="110383" fg:w="94"/><text x="51.9199%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (209 samples, 0.10%)</title><rect x="51.7823%" y="357" width="0.0978%" height="15" fill="rgb(213,52,39)" fg:x="110623" fg:w="209"/><text x="52.0323%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (781 samples, 0.37%)</title><rect x="51.8801%" y="357" width="0.3656%" height="15" fill="rgb(243,137,7)" fg:x="110832" fg:w="781"/><text x="52.1301%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`DYLD-STUB$$memcmp (80 samples, 0.04%)</title><rect x="52.2457%" y="357" width="0.0374%" height="15" fill="rgb(230,79,13)" fg:x="111613" fg:w="80"/><text x="52.4957%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_context (204 samples, 0.10%)</title><rect x="52.2855%" y="357" width="0.0955%" height="15" fill="rgb(247,105,23)" fg:x="111698" fg:w="204"/><text x="52.5355%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (1,583 samples, 0.74%)</title><rect x="51.7158%" y="373" width="0.7410%" height="15" fill="rgb(223,179,41)" fg:x="110481" fg:w="1583"/><text x="51.9658%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_level (162 samples, 0.08%)</title><rect x="52.3810%" y="357" width="0.0758%" height="15" fill="rgb(218,9,34)" fg:x="111902" fg:w="162"/><text x="52.6310%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (46 samples, 0.02%)</title><rect x="52.5130%" y="293" width="0.0215%" height="15" fill="rgb(222,106,8)" fg:x="112184" fg:w="46"/><text x="52.7630%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (40 samples, 0.02%)</title><rect x="52.5158%" y="277" width="0.0187%" height="15" fill="rgb(211,220,0)" fg:x="112190" fg:w="40"/><text x="52.7658%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (25 samples, 0.01%)</title><rect x="52.5228%" y="261" width="0.0117%" height="15" fill="rgb(229,52,16)" fg:x="112205" fg:w="25"/><text x="52.7728%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (65 samples, 0.03%)</title><rect x="52.5055%" y="309" width="0.0304%" height="15" fill="rgb(212,155,18)" fg:x="112168" fg:w="65"/><text x="52.7555%" y="319.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__grow_by_and_replace (90 samples, 0.04%)</title><rect x="52.4971%" y="341" width="0.0421%" height="15" fill="rgb(242,21,14)" fg:x="112150" fg:w="90"/><text x="52.7471%" y="351.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (72 samples, 0.03%)</title><rect x="52.5055%" y="325" width="0.0337%" height="15" fill="rgb(222,19,48)" fg:x="112168" fg:w="72"/><text x="52.7555%" y="335.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external (155 samples, 0.07%)</title><rect x="52.4924%" y="357" width="0.0726%" height="15" fill="rgb(232,45,27)" fg:x="112140" fg:w="155"/><text x="52.7424%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (54 samples, 0.03%)</title><rect x="52.5397%" y="341" width="0.0253%" height="15" fill="rgb(249,103,42)" fg:x="112241" fg:w="54"/><text x="52.7897%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::SaveValue (276 samples, 0.13%)</title><rect x="52.4573%" y="373" width="0.1292%" height="15" fill="rgb(246,81,33)" fg:x="112065" fg:w="276"/><text x="52.7073%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (3,093 samples, 1.45%)</title><rect x="51.1415%" y="389" width="1.4478%" height="15" fill="rgb(252,33,42)" fg:x="109254" fg:w="3093"/><text x="51.3915%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (58 samples, 0.03%)</title><rect x="52.5893%" y="389" width="0.0271%" height="15" fill="rgb(209,212,41)" fg:x="112347" fg:w="58"/><text x="52.8393%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_context (25 samples, 0.01%)</title><rect x="52.6244%" y="389" width="0.0117%" height="15" fill="rgb(207,154,6)" fg:x="112422" fg:w="25"/><text x="52.8744%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (3,270 samples, 1.53%)</title><rect x="51.1138%" y="405" width="1.5307%" height="15" fill="rgb(223,64,47)" fg:x="109195" fg:w="3270"/><text x="51.3638%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::FindFileInRange (24 samples, 0.01%)</title><rect x="52.6983%" y="357" width="0.0112%" height="15" fill="rgb(211,161,38)" fg:x="112580" fg:w="24"/><text x="52.9483%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::FilePicker::PrepareNextLevel (27 samples, 0.01%)</title><rect x="52.6974%" y="373" width="0.0126%" height="15" fill="rgb(219,138,40)" fg:x="112578" fg:w="27"/><text x="52.9474%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::FilePicker::GetNextFile (64 samples, 0.03%)</title><rect x="52.6806%" y="389" width="0.0300%" height="15" fill="rgb(241,228,46)" fg:x="112542" fg:w="64"/><text x="52.9306%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Block::NewIndexIterator (26 samples, 0.01%)</title><rect x="52.7620%" y="341" width="0.0122%" height="15" fill="rgb(223,209,38)" fg:x="112716" fg:w="26"/><text x="53.0120%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::IndexBlockIter::Initialize (25 samples, 0.01%)</title><rect x="52.7625%" y="325" width="0.0117%" height="15" fill="rgb(236,164,45)" fg:x="112717" fg:w="25"/><text x="53.0125%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::Env::IOPriority, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry (32 samples, 0.01%)</title><rect x="52.7742%" y="341" width="0.0150%" height="15" fill="rgb(231,15,5)" fg:x="112742" fg:w="32"/><text x="53.0242%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BinarySearchIndexReader::NewIterator (72 samples, 0.03%)</title><rect x="52.7559%" y="357" width="0.0337%" height="15" fill="rgb(252,35,15)" fg:x="112703" fg:w="72"/><text x="53.0059%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (172 samples, 0.08%)</title><rect x="52.9366%" y="293" width="0.0805%" height="15" fill="rgb(248,181,18)" fg:x="113089" fg:w="172"/><text x="53.1866%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`DYLD-STUB$$memcmp (22 samples, 0.01%)</title><rect x="53.0171%" y="293" width="0.0103%" height="15" fill="rgb(233,39,42)" fg:x="113261" fg:w="22"/><text x="53.2671%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::BinarySeek&lt;rocksdb::DecodeKeyV4&gt; (492 samples, 0.23%)</title><rect x="52.7995%" y="325" width="0.2303%" height="15" fill="rgb(238,110,33)" fg:x="112796" fg:w="492"/><text x="53.0495%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (224 samples, 0.10%)</title><rect x="52.9249%" y="309" width="0.1049%" height="15" fill="rgb(233,195,10)" fg:x="113064" fg:w="224"/><text x="53.1749%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::IndexBlockIter::DecodeCurrentValue (27 samples, 0.01%)</title><rect x="53.0438%" y="309" width="0.0126%" height="15" fill="rgb(254,105,3)" fg:x="113318" fg:w="27"/><text x="53.2938%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::IndexBlockIter::NextImpl (44 samples, 0.02%)</title><rect x="53.0377%" y="325" width="0.0206%" height="15" fill="rgb(221,225,9)" fg:x="113305" fg:w="44"/><text x="53.2877%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Seek (570 samples, 0.27%)</title><rect x="52.7934%" y="357" width="0.2668%" height="15" fill="rgb(224,227,45)" fg:x="112783" fg:w="570"/><text x="53.0434%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::IndexBlockIter::SeekImpl (563 samples, 0.26%)</title><rect x="52.7966%" y="341" width="0.2635%" height="15" fill="rgb(229,198,43)" fg:x="112790" fg:w="563"/><text x="53.0466%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Block::NewDataIterator (23 samples, 0.01%)</title><rect x="53.0831%" y="341" width="0.0108%" height="15" fill="rgb(206,209,35)" fg:x="113402" fg:w="23"/><text x="53.3331%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`crc32c_arm64(unsigned int, unsigned char const*, unsigned long) (154 samples, 0.07%)</title><rect x="53.1463%" y="261" width="0.0721%" height="15" fill="rgb(245,195,53)" fg:x="113537" fg:w="154"/><text x="53.3963%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockFetcher::ProcessTrailerIfPresent (163 samples, 0.08%)</title><rect x="53.1449%" y="293" width="0.0763%" height="15" fill="rgb(240,92,26)" fg:x="113534" fg:w="163"/><text x="53.3949%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::VerifyBlockChecksum(rocksdb::ChecksumType, char const*, unsigned long, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (163 samples, 0.08%)</title><rect x="53.1449%" y="277" width="0.0763%" height="15" fill="rgb(207,40,23)" fg:x="113534" fg:w="163"/><text x="53.3949%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`pread (1,027 samples, 0.48%)</title><rect x="53.2343%" y="277" width="0.4807%" height="15" fill="rgb(223,111,35)" fg:x="113725" fg:w="1027"/><text x="53.4843%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long long, unsigned long, rocksdb::Slice*, char*, std::__1::unique_ptr&lt;char [], std::__1::default_delete (1,057 samples, 0.49%)</title><rect x="53.2240%" y="293" width="0.4948%" height="15" fill="rgb(229,147,28)" fg:x="113703" fg:w="1057"/><text x="53.4740%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (48 samples, 0.02%)</title><rect x="53.7380%" y="181" width="0.0225%" height="15" fill="rgb(211,29,28)" fg:x="114801" fg:w="48"/><text x="53.9880%" y="191.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (96 samples, 0.04%)</title><rect x="53.7239%" y="261" width="0.0449%" height="15" fill="rgb(228,72,33)" fg:x="114771" fg:w="96"/><text x="53.9739%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (96 samples, 0.04%)</title><rect x="53.7239%" y="245" width="0.0449%" height="15" fill="rgb(205,214,31)" fg:x="114771" fg:w="96"/><text x="53.9739%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (91 samples, 0.04%)</title><rect x="53.7263%" y="229" width="0.0426%" height="15" fill="rgb(224,111,15)" fg:x="114776" fg:w="91"/><text x="53.9763%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (89 samples, 0.04%)</title><rect x="53.7272%" y="213" width="0.0417%" height="15" fill="rgb(253,21,26)" fg:x="114778" fg:w="89"/><text x="53.9772%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (81 samples, 0.04%)</title><rect x="53.7310%" y="197" width="0.0379%" height="15" fill="rgb(245,139,43)" fg:x="114786" fg:w="81"/><text x="53.9810%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`LZ4_decompress_safe_continue (872 samples, 0.41%)</title><rect x="53.7778%" y="261" width="0.4082%" height="15" fill="rgb(252,170,7)" fg:x="114886" fg:w="872"/><text x="54.0278%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`LZ4_decompress_safe (864 samples, 0.40%)</title><rect x="53.7815%" y="245" width="0.4044%" height="15" fill="rgb(231,118,14)" fg:x="114894" fg:w="864"/><text x="54.0315%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::UncompressBlockContentsForCompressionType (1,003 samples, 0.47%)</title><rect x="53.7188%" y="293" width="0.4695%" height="15" fill="rgb(238,83,0)" fg:x="114760" fg:w="1003"/><text x="53.9688%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::LZ4_Uncompress (992 samples, 0.46%)</title><rect x="53.7239%" y="277" width="0.4644%" height="15" fill="rgb(221,39,39)" fg:x="114771" fg:w="992"/><text x="53.9739%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockFetcher::ReadBlockContents (2,273 samples, 1.06%)</title><rect x="53.1295%" y="309" width="1.0640%" height="15" fill="rgb(222,119,46)" fg:x="113501" fg:w="2273"/><text x="53.3795%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::lru_cache::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int, rocksdb::Cache::CacheItemHelper const*, std::__1::function&lt;rocksdb::Status (52 samples, 0.02%)</title><rect x="54.2239%" y="293" width="0.0243%" height="15" fill="rgb(222,165,49)" fg:x="115839" fg:w="52"/><text x="54.4739%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry (124 samples, 0.06%)</title><rect x="54.1963%" y="309" width="0.0580%" height="15" fill="rgb(219,113,52)" fg:x="115780" fg:w="124"/><text x="54.4463%" y="319.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (22 samples, 0.01%)</title><rect x="54.2669%" y="293" width="0.0103%" height="15" fill="rgb(214,7,15)" fg:x="115931" fg:w="22"/><text x="54.5169%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.01%)</title><rect x="54.2669%" y="277" width="0.0103%" height="15" fill="rgb(235,32,4)" fg:x="115931" fg:w="22"/><text x="54.5169%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Block::Block (33 samples, 0.02%)</title><rect x="54.2847%" y="293" width="0.0154%" height="15" fill="rgb(238,90,54)" fg:x="115969" fg:w="33"/><text x="54.5347%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (34 samples, 0.02%)</title><rect x="54.3091%" y="229" width="0.0159%" height="15" fill="rgb(213,208,19)" fg:x="116021" fg:w="34"/><text x="54.5591%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (27 samples, 0.01%)</title><rect x="54.3123%" y="213" width="0.0126%" height="15" fill="rgb(233,156,4)" fg:x="116028" fg:w="27"/><text x="54.5623%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (38 samples, 0.02%)</title><rect x="54.3077%" y="261" width="0.0178%" height="15" fill="rgb(207,194,5)" fg:x="116018" fg:w="38"/><text x="54.5577%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (36 samples, 0.02%)</title><rect x="54.3086%" y="245" width="0.0169%" height="15" fill="rgb(206,111,30)" fg:x="116020" fg:w="36"/><text x="54.5586%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::lru_cache::LRUCacheShard::Insert (40 samples, 0.02%)</title><rect x="54.3072%" y="293" width="0.0187%" height="15" fill="rgb(243,70,54)" fg:x="116017" fg:w="40"/><text x="54.5572%" y="303.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (39 samples, 0.02%)</title><rect x="54.3077%" y="277" width="0.0183%" height="15" fill="rgb(242,28,8)" fg:x="116018" fg:w="39"/><text x="54.5577%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.01%)</title><rect x="54.3278%" y="277" width="0.0140%" height="15" fill="rgb(219,106,18)" fg:x="116061" fg:w="30"/><text x="54.5778%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (24 samples, 0.01%)</title><rect x="54.3428%" y="277" width="0.0112%" height="15" fill="rgb(244,222,10)" fg:x="116093" fg:w="24"/><text x="54.5928%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (22 samples, 0.01%)</title><rect x="54.3989%" y="229" width="0.0103%" height="15" fill="rgb(236,179,52)" fg:x="116213" fg:w="22"/><text x="54.6489%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (36 samples, 0.02%)</title><rect x="54.4102%" y="213" width="0.0169%" height="15" fill="rgb(213,23,39)" fg:x="116237" fg:w="36"/><text x="54.6602%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_small (125 samples, 0.06%)</title><rect x="54.3690%" y="245" width="0.0585%" height="15" fill="rgb(238,48,10)" fg:x="116149" fg:w="125"/><text x="54.6190%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (37 samples, 0.02%)</title><rect x="54.4102%" y="229" width="0.0173%" height="15" fill="rgb(251,196,23)" fg:x="116237" fg:w="37"/><text x="54.6602%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::cache_entry_roles_detail::RegisteredDeleter&lt;rocksdb::Block, (rocksdb::CacheEntryRole)0&gt;::Delete (145 samples, 0.07%)</title><rect x="54.3610%" y="277" width="0.0679%" height="15" fill="rgb(250,152,24)" fg:x="116132" fg:w="145"/><text x="54.6110%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Block::~Block (138 samples, 0.06%)</title><rect x="54.3643%" y="261" width="0.0646%" height="15" fill="rgb(209,150,17)" fg:x="116139" fg:w="138"/><text x="54.6143%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::CachableEntry (415 samples, 0.19%)</title><rect x="54.2543%" y="309" width="0.1943%" height="15" fill="rgb(234,202,34)" fg:x="115904" fg:w="415"/><text x="54.5043%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::lru_cache::LRUCacheShard::InsertItem (262 samples, 0.12%)</title><rect x="54.3259%" y="293" width="0.1226%" height="15" fill="rgb(253,148,53)" fg:x="116057" fg:w="262"/><text x="54.5759%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, bool, rocksdb::CachableEntry (2,892 samples, 1.35%)</title><rect x="53.1018%" y="325" width="1.3537%" height="15" fill="rgb(218,129,16)" fg:x="113442" fg:w="2892"/><text x="53.3518%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (2,911 samples, 1.36%)</title><rect x="53.0944%" y="341" width="1.3626%" height="15" fill="rgb(216,85,19)" fg:x="113426" fg:w="2911"/><text x="53.3444%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (2,999 samples, 1.40%)</title><rect x="53.0639%" y="357" width="1.4038%" height="15" fill="rgb(235,228,7)" fg:x="113361" fg:w="2999"/><text x="53.3139%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (25 samples, 0.01%)</title><rect x="54.4963%" y="309" width="0.0117%" height="15" fill="rgb(245,175,0)" fg:x="116421" fg:w="25"/><text x="54.7463%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::BinarySeek&lt;rocksdb::DecodeKey&gt; (68 samples, 0.03%)</title><rect x="54.4780%" y="341" width="0.0318%" height="15" fill="rgb(208,168,36)" fg:x="116382" fg:w="68"/><text x="54.7280%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (37 samples, 0.02%)</title><rect x="54.4926%" y="325" width="0.0173%" height="15" fill="rgb(246,171,24)" fg:x="116413" fg:w="37"/><text x="54.7426%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (50 samples, 0.02%)</title><rect x="54.5380%" y="325" width="0.0234%" height="15" fill="rgb(215,142,24)" fg:x="116510" fg:w="50"/><text x="54.7880%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_context (23 samples, 0.01%)</title><rect x="54.5651%" y="325" width="0.0108%" height="15" fill="rgb(250,187,7)" fg:x="116568" fg:w="23"/><text x="54.8151%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (132 samples, 0.06%)</title><rect x="54.5206%" y="341" width="0.0618%" height="15" fill="rgb(228,66,33)" fg:x="116473" fg:w="132"/><text x="54.7706%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (49 samples, 0.02%)</title><rect x="54.5824%" y="325" width="0.0229%" height="15" fill="rgb(234,215,21)" fg:x="116605" fg:w="49"/><text x="54.8324%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt; (51 samples, 0.02%)</title><rect x="54.6072%" y="325" width="0.0239%" height="15" fill="rgb(222,191,20)" fg:x="116658" fg:w="51"/><text x="54.8572%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter::NextImpl (126 samples, 0.06%)</title><rect x="54.5824%" y="341" width="0.0590%" height="15" fill="rgb(245,79,54)" fg:x="116605" fg:w="126"/><text x="54.8324%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::GetVarint32PtrFallback (22 samples, 0.01%)</title><rect x="54.6311%" y="325" width="0.0103%" height="15" fill="rgb(240,10,37)" fg:x="116709" fg:w="22"/><text x="54.8811%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter::SeekImpl (377 samples, 0.18%)</title><rect x="54.4682%" y="357" width="0.1765%" height="15" fill="rgb(214,192,32)" fg:x="116361" fg:w="377"/><text x="54.7182%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter::~DataBlockIter (24 samples, 0.01%)</title><rect x="54.6447%" y="357" width="0.0112%" height="15" fill="rgb(209,36,54)" fg:x="116738" fg:w="24"/><text x="54.8947%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::GetContext::SaveValue (24 samples, 0.01%)</title><rect x="54.6559%" y="357" width="0.0112%" height="15" fill="rgb(220,10,11)" fg:x="116762" fg:w="24"/><text x="54.9059%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::IndexBlockIter::~IndexBlockIter (30 samples, 0.01%)</title><rect x="54.6690%" y="357" width="0.0140%" height="15" fill="rgb(221,106,17)" fg:x="116790" fg:w="30"/><text x="54.9190%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTable::Get (4,190 samples, 1.96%)</title><rect x="52.7241%" y="373" width="1.9613%" height="15" fill="rgb(251,142,44)" fg:x="112635" fg:w="4190"/><text x="52.9741%" y="383.50">r..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, std::__1::shared_ptr (4,216 samples, 1.97%)</title><rect x="52.7203%" y="389" width="1.9735%" height="15" fill="rgb(238,13,15)" fg:x="112627" fg:w="4216"/><text x="52.9703%" y="399.50">r..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (4,367 samples, 2.04%)</title><rect x="52.6529%" y="405" width="2.0442%" height="15" fill="rgb(208,107,27)" fg:x="112483" fg:w="4367"/><text x="52.9029%" y="415.50">r..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_context (69 samples, 0.03%)</title><rect x="54.6971%" y="405" width="0.0323%" height="15" fill="rgb(205,136,37)" fg:x="116850" fg:w="69"/><text x="54.9471%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::GetImpl (8,114 samples, 3.80%)</title><rect x="50.9434%" y="421" width="3.7981%" height="15" fill="rgb(250,205,27)" fg:x="108831" fg:w="8114"/><text x="51.1934%" y="431.50">roll..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_level (26 samples, 0.01%)</title><rect x="54.7294%" y="405" width="0.0122%" height="15" fill="rgb(210,80,43)" fg:x="116919" fg:w="26"/><text x="54.9794%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (8,197 samples, 3.84%)</title><rect x="50.9182%" y="437" width="3.8370%" height="15" fill="rgb(247,160,36)" fg:x="108777" fg:w="8197"/><text x="51.1682%" y="447.50">roll..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_get_pinned_cf (8,291 samples, 3.88%)</title><rect x="50.8760%" y="453" width="3.8810%" height="15" fill="rgb(234,13,49)" fg:x="108687" fg:w="8291"/><text x="51.1260%" y="463.50">roll..</text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.02%)</title><rect x="54.7575%" y="437" width="0.0164%" height="15" fill="rgb(234,122,0)" fg:x="116979" fg:w="35"/><text x="55.0075%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (47 samples, 0.02%)</title><rect x="54.7739%" y="437" width="0.0220%" height="15" fill="rgb(207,146,38)" fg:x="117014" fg:w="47"/><text x="55.0239%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (34 samples, 0.02%)</title><rect x="54.7800%" y="421" width="0.0159%" height="15" fill="rgb(207,177,25)" fg:x="117027" fg:w="34"/><text x="55.0300%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::lru_cache::LRUCacheShard::Release (24 samples, 0.01%)</title><rect x="54.8038%" y="421" width="0.0112%" height="15" fill="rgb(211,178,42)" fg:x="117078" fg:w="24"/><text x="55.0538%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Cleanable::~Cleanable (30 samples, 0.01%)</title><rect x="54.8015%" y="437" width="0.0140%" height="15" fill="rgb(230,69,54)" fg:x="117073" fg:w="30"/><text x="55.0515%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_pinnableslice_destroy (128 samples, 0.06%)</title><rect x="54.7570%" y="453" width="0.0599%" height="15" fill="rgb(214,135,41)" fg:x="116978" fg:w="128"/><text x="55.0070%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf (9,090 samples, 4.26%)</title><rect x="50.5657%" y="469" width="4.2550%" height="15" fill="rgb(237,67,25)" fg:x="108024" fg:w="9090"/><text x="50.8157%" y="479.50">rollu..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (41 samples, 0.02%)</title><rect x="54.8263%" y="453" width="0.0192%" height="15" fill="rgb(222,189,50)" fg:x="117126" fg:w="41"/><text x="55.0763%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (32 samples, 0.01%)</title><rect x="54.8305%" y="437" width="0.0150%" height="15" fill="rgb(245,148,34)" fg:x="117135" fg:w="32"/><text x="55.0805%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (30 samples, 0.01%)</title><rect x="54.8315%" y="421" width="0.0140%" height="15" fill="rgb(222,29,6)" fg:x="117137" fg:w="30"/><text x="55.0815%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (26 samples, 0.01%)</title><rect x="54.8333%" y="405" width="0.0122%" height="15" fill="rgb(221,189,43)" fg:x="117141" fg:w="26"/><text x="55.0833%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (23 samples, 0.01%)</title><rect x="54.8474%" y="453" width="0.0108%" height="15" fill="rgb(207,36,27)" fg:x="117171" fg:w="23"/><text x="55.0974%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_db::schema::tables::_&lt;impl sov_rollup_interface::node::db::KeyEncoder&lt;sov_db::schema::tables::JmtNodes&gt; for jmt::node_type::NodeKey&gt;::encode_key (84 samples, 0.04%)</title><rect x="54.8240%" y="469" width="0.0393%" height="15" fill="rgb(217,90,24)" fg:x="117121" fg:w="84"/><text x="55.0740%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (132 samples, 0.06%)</title><rect x="54.8773%" y="453" width="0.0618%" height="15" fill="rgb(224,66,35)" fg:x="117235" fg:w="132"/><text x="55.1273%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (81 samples, 0.04%)</title><rect x="54.9569%" y="421" width="0.0379%" height="15" fill="rgb(221,13,50)" fg:x="117405" fg:w="81"/><text x="55.2069%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (74 samples, 0.03%)</title><rect x="54.9602%" y="405" width="0.0346%" height="15" fill="rgb(236,68,49)" fg:x="117412" fg:w="74"/><text x="55.2102%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (42 samples, 0.02%)</title><rect x="54.9752%" y="389" width="0.0197%" height="15" fill="rgb(229,146,28)" fg:x="117444" fg:w="42"/><text x="55.2252%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (101 samples, 0.05%)</title><rect x="54.9508%" y="437" width="0.0473%" height="15" fill="rgb(225,31,38)" fg:x="117392" fg:w="101"/><text x="55.2008%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;[T (661 samples, 0.31%)</title><rect x="55.0018%" y="437" width="0.3094%" height="15" fill="rgb(250,208,3)" fg:x="117501" fg:w="661"/><text x="55.2518%" y="447.50"></text></g><g><title> N] as borsh::de::BorshDeserialize&gt;::deserialize_reader::ArrayDropGuard&lt;T,_&gt;::fill_buffer (661 samples, 0.31%)</title><rect x="55.0018%" y="421" width="0.3094%" height="15" fill="rgb(246,54,23)" fg:x="117501" fg:w="661"/><text x="55.2518%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::Child as borsh::de::BorshDeserialize&gt;::deserialize_reader (301 samples, 0.14%)</title><rect x="55.1704%" y="405" width="0.1409%" height="15" fill="rgb(243,76,11)" fg:x="117861" fg:w="301"/><text x="55.4204%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;alloc::boxed::Box&lt;T&gt; as borsh::de::BorshDeserialize&gt;::deserialize_reader (867 samples, 0.41%)</title><rect x="54.9433%" y="453" width="0.4058%" height="15" fill="rgb(245,21,50)" fg:x="117376" fg:w="867"/><text x="55.1933%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::Child as borsh::de::BorshDeserialize&gt;::deserialize_reader (81 samples, 0.04%)</title><rect x="55.3113%" y="437" width="0.0379%" height="15" fill="rgb(228,9,43)" fg:x="118162" fg:w="81"/><text x="55.5613%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_db::schema::tables::_&lt;impl sov_rollup_interface::node::db::ValueCodec&lt;sov_db::schema::tables::JmtNodes&gt; for jmt::node_type::Node&gt;::decode_value (1,041 samples, 0.49%)</title><rect x="54.8633%" y="469" width="0.4873%" height="15" fill="rgb(208,100,47)" fg:x="117205" fg:w="1041"/><text x="55.1133%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (22 samples, 0.01%)</title><rect x="55.3520%" y="453" width="0.0103%" height="15" fill="rgb(232,26,8)" fg:x="118249" fg:w="22"/><text x="55.6020%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::DB::get_cf_handle (38 samples, 0.02%)</title><rect x="55.3506%" y="469" width="0.0178%" height="15" fill="rgb(216,166,38)" fg:x="118246" fg:w="38"/><text x="55.6006%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::DB::get (11,272 samples, 5.28%)</title><rect x="50.0939%" y="485" width="5.2764%" height="15" fill="rgb(251,202,51)" fg:x="107016" fg:w="11272"/><text x="50.3439%" y="495.50">rollup..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree::JellyfishMerkleTree&lt;R,H&gt;::get_with_proof (30,150 samples, 14.11%)</title><rect x="41.2585%" y="501" width="14.1131%" height="15" fill="rgb(254,216,34)" fg:x="88141" fg:w="30150"/><text x="41.5085%" y="511.50">rollup_coarse_measure..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (25 samples, 0.01%)</title><rect x="55.3745%" y="485" width="0.0117%" height="15" fill="rgb(251,32,27)" fg:x="118297" fg:w="25"/><text x="55.6245%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::sync::Arc&lt;T&gt;::drop_slow (58 samples, 0.03%)</title><rect x="55.4273%" y="469" width="0.0271%" height="15" fill="rgb(208,127,28)" fg:x="118410" fg:w="58"/><text x="55.6773%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (76 samples, 0.04%)</title><rect x="55.4550%" y="469" width="0.0356%" height="15" fill="rgb(224,137,22)" fg:x="118469" fg:w="76"/><text x="55.7050%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::raw::RawTable&lt;T,A&gt;::insert (49 samples, 0.02%)</title><rect x="55.4676%" y="453" width="0.0229%" height="15" fill="rgb(254,70,32)" fg:x="118496" fg:w="49"/><text x="55.7176%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (40 samples, 0.02%)</title><rect x="55.4718%" y="437" width="0.0187%" height="15" fill="rgb(229,75,37)" fg:x="118505" fg:w="40"/><text x="55.7218%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.01%)</title><rect x="55.5598%" y="437" width="0.0112%" height="15" fill="rgb(252,64,23)" fg:x="118693" fg:w="24"/><text x="55.8098%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.01%)</title><rect x="55.6085%" y="421" width="0.0117%" height="15" fill="rgb(232,162,48)" fg:x="118797" fg:w="25"/><text x="55.8585%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::InternalNode as core::clone::Clone&gt;::clone (90 samples, 0.04%)</title><rect x="55.5795%" y="437" width="0.0421%" height="15" fill="rgb(246,160,12)" fg:x="118735" fg:w="90"/><text x="55.8295%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (30 samples, 0.01%)</title><rect x="55.6928%" y="373" width="0.0140%" height="15" fill="rgb(247,166,0)" fg:x="118977" fg:w="30"/><text x="55.9428%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (22 samples, 0.01%)</title><rect x="55.7185%" y="373" width="0.0103%" height="15" fill="rgb(249,219,21)" fg:x="119032" fg:w="22"/><text x="55.9685%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (1,652 samples, 0.77%)</title><rect x="55.6717%" y="389" width="0.7733%" height="15" fill="rgb(205,209,3)" fg:x="118932" fg:w="1652"/><text x="55.9217%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (1,530 samples, 0.72%)</title><rect x="55.7288%" y="373" width="0.7162%" height="15" fill="rgb(243,44,1)" fg:x="119054" fg:w="1530"/><text x="55.9788%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (3,907 samples, 1.83%)</title><rect x="55.6506%" y="405" width="1.8289%" height="15" fill="rgb(206,159,16)" fg:x="118887" fg:w="3907"/><text x="55.9006%" y="415.50">r..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (2,210 samples, 1.03%)</title><rect x="56.4450%" y="389" width="1.0345%" height="15" fill="rgb(244,77,30)" fg:x="120584" fg:w="2210"/><text x="56.6950%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (5,101 samples, 2.39%)</title><rect x="55.6385%" y="421" width="2.3878%" height="15" fill="rgb(218,69,12)" fg:x="118861" fg:w="5101"/><text x="55.8885%" y="431.50">ro..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (1,168 samples, 0.55%)</title><rect x="57.4795%" y="405" width="0.5467%" height="15" fill="rgb(212,87,7)" fg:x="122794" fg:w="1168"/><text x="57.7295%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (5,680 samples, 2.66%)</title><rect x="55.6324%" y="437" width="2.6588%" height="15" fill="rgb(245,114,25)" fg:x="118848" fg:w="5680"/><text x="55.8824%" y="447.50">ro..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (566 samples, 0.26%)</title><rect x="58.0262%" y="421" width="0.2649%" height="15" fill="rgb(210,61,42)" fg:x="123962" fg:w="566"/><text x="58.2762%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::NodeKey::gen_child_node_key (28 samples, 0.01%)</title><rect x="58.3071%" y="437" width="0.0131%" height="15" fill="rgb(211,52,33)" fg:x="124562" fg:w="28"/><text x="58.5571%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (26 samples, 0.01%)</title><rect x="58.3080%" y="421" width="0.0122%" height="15" fill="rgb(234,58,33)" fg:x="124564" fg:w="26"/><text x="58.5580%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.01%)</title><rect x="58.3394%" y="421" width="0.0117%" height="15" fill="rgb(220,115,36)" fg:x="124631" fg:w="25"/><text x="58.5894%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (22 samples, 0.01%)</title><rect x="58.3408%" y="405" width="0.0103%" height="15" fill="rgb(243,153,54)" fg:x="124634" fg:w="22"/><text x="58.5908%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::InternalNode as core::clone::Clone&gt;::clone (72 samples, 0.03%)</title><rect x="58.3712%" y="421" width="0.0337%" height="15" fill="rgb(251,47,18)" fg:x="124699" fg:w="72"/><text x="58.6212%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (28 samples, 0.01%)</title><rect x="58.4920%" y="357" width="0.0131%" height="15" fill="rgb(242,102,42)" fg:x="124957" fg:w="28"/><text x="58.7420%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (30 samples, 0.01%)</title><rect x="58.5182%" y="357" width="0.0140%" height="15" fill="rgb(234,31,38)" fg:x="125013" fg:w="30"/><text x="58.7682%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (1,564 samples, 0.73%)</title><rect x="58.4658%" y="373" width="0.7321%" height="15" fill="rgb(221,117,51)" fg:x="124901" fg:w="1564"/><text x="58.7158%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (1,422 samples, 0.67%)</title><rect x="58.5322%" y="357" width="0.6656%" height="15" fill="rgb(212,20,18)" fg:x="125043" fg:w="1422"/><text x="58.7822%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (3,745 samples, 1.75%)</title><rect x="58.4372%" y="389" width="1.7530%" height="15" fill="rgb(245,133,36)" fg:x="124840" fg:w="3745"/><text x="58.6872%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (2,120 samples, 0.99%)</title><rect x="59.1979%" y="373" width="0.9924%" height="15" fill="rgb(212,6,19)" fg:x="126465" fg:w="2120"/><text x="59.4479%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (4,809 samples, 2.25%)</title><rect x="58.4222%" y="405" width="2.2511%" height="15" fill="rgb(218,1,36)" fg:x="124808" fg:w="4809"/><text x="58.6722%" y="415.50">r..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (1,032 samples, 0.48%)</title><rect x="60.1902%" y="389" width="0.4831%" height="15" fill="rgb(246,84,54)" fg:x="128585" fg:w="1032"/><text x="60.4402%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (5,368 samples, 2.51%)</title><rect x="58.4161%" y="421" width="2.5127%" height="15" fill="rgb(242,110,6)" fg:x="124795" fg:w="5368"/><text x="58.6661%" y="431.50">ro..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (546 samples, 0.26%)</title><rect x="60.6733%" y="405" width="0.2556%" height="15" fill="rgb(214,47,5)" fg:x="129617" fg:w="546"/><text x="60.9233%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::Node::hash (28 samples, 0.01%)</title><rect x="60.9354%" y="421" width="0.0131%" height="15" fill="rgb(218,159,25)" fg:x="130177" fg:w="28"/><text x="61.1854%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::generate_bitmaps (26 samples, 0.01%)</title><rect x="60.9364%" y="405" width="0.0122%" height="15" fill="rgb(215,211,28)" fg:x="130179" fg:w="26"/><text x="61.1864%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (33 samples, 0.02%)</title><rect x="60.9738%" y="405" width="0.0154%" height="15" fill="rgb(238,59,32)" fg:x="130259" fg:w="33"/><text x="61.2238%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (29 samples, 0.01%)</title><rect x="60.9757%" y="389" width="0.0136%" height="15" fill="rgb(226,82,3)" fg:x="130263" fg:w="29"/><text x="61.2257%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::Children as core::convert::From&lt;jmt::node_type::InternalNode&gt;&gt;::from (23 samples, 0.01%)</title><rect x="61.0057%" y="405" width="0.0108%" height="15" fill="rgb(240,164,32)" fg:x="130327" fg:w="23"/><text x="61.2557%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::InternalNode as core::clone::Clone&gt;::clone (58 samples, 0.03%)</title><rect x="61.0164%" y="405" width="0.0271%" height="15" fill="rgb(232,46,7)" fg:x="130350" fg:w="58"/><text x="61.2664%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (36 samples, 0.02%)</title><rect x="61.1278%" y="341" width="0.0169%" height="15" fill="rgb(229,129,53)" fg:x="130588" fg:w="36"/><text x="61.3778%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (25 samples, 0.01%)</title><rect x="61.1559%" y="341" width="0.0117%" height="15" fill="rgb(234,188,29)" fg:x="130648" fg:w="25"/><text x="61.4059%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (1,408 samples, 0.66%)</title><rect x="61.1049%" y="357" width="0.6591%" height="15" fill="rgb(246,141,4)" fg:x="130539" fg:w="1408"/><text x="61.3549%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (1,274 samples, 0.60%)</title><rect x="61.1676%" y="341" width="0.5964%" height="15" fill="rgb(229,23,39)" fg:x="130673" fg:w="1274"/><text x="61.4176%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (3,231 samples, 1.51%)</title><rect x="61.0857%" y="373" width="1.5124%" height="15" fill="rgb(206,12,3)" fg:x="130498" fg:w="3231"/><text x="61.3357%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (1,782 samples, 0.83%)</title><rect x="61.7640%" y="357" width="0.8341%" height="15" fill="rgb(252,226,20)" fg:x="131947" fg:w="1782"/><text x="62.0140%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (4,224 samples, 1.98%)</title><rect x="61.0721%" y="389" width="1.9772%" height="15" fill="rgb(216,123,35)" fg:x="130469" fg:w="4224"/><text x="61.3221%" y="399.50">r..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (964 samples, 0.45%)</title><rect x="62.5981%" y="373" width="0.4512%" height="15" fill="rgb(212,68,40)" fg:x="133729" fg:w="964"/><text x="62.8481%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (4,744 samples, 2.22%)</title><rect x="61.0609%" y="405" width="2.2207%" height="15" fill="rgb(254,125,32)" fg:x="130445" fg:w="4744"/><text x="61.3109%" y="415.50">r..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (496 samples, 0.23%)</title><rect x="63.0494%" y="389" width="0.2322%" height="15" fill="rgb(253,97,22)" fg:x="134693" fg:w="496"/><text x="63.2994%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::Node::hash (43 samples, 0.02%)</title><rect x="63.2914%" y="405" width="0.0201%" height="15" fill="rgb(241,101,14)" fg:x="135210" fg:w="43"/><text x="63.5414%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.01%)</title><rect x="63.3152%" y="389" width="0.0112%" height="15" fill="rgb(238,103,29)" fg:x="135261" fg:w="24"/><text x="63.5652%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (22 samples, 0.01%)</title><rect x="63.3270%" y="389" width="0.0103%" height="15" fill="rgb(233,195,47)" fg:x="135286" fg:w="22"/><text x="63.5770%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::NodeKey::gen_child_node_key (55 samples, 0.03%)</title><rect x="63.3120%" y="405" width="0.0257%" height="15" fill="rgb(246,218,30)" fg:x="135254" fg:w="55"/><text x="63.5620%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (26 samples, 0.01%)</title><rect x="63.3602%" y="389" width="0.0122%" height="15" fill="rgb(219,145,47)" fg:x="135357" fg:w="26"/><text x="63.6102%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.01%)</title><rect x="63.3836%" y="373" width="0.0108%" height="15" fill="rgb(243,12,26)" fg:x="135407" fg:w="23"/><text x="63.6336%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.01%)</title><rect x="63.3822%" y="389" width="0.0131%" height="15" fill="rgb(214,87,16)" fg:x="135404" fg:w="28"/><text x="63.6322%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::InternalNode as core::clone::Clone&gt;::clone (72 samples, 0.03%)</title><rect x="63.4028%" y="389" width="0.0337%" height="15" fill="rgb(208,99,42)" fg:x="135448" fg:w="72"/><text x="63.6528%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (445 samples, 0.21%)</title><rect x="63.4987%" y="341" width="0.2083%" height="15" fill="rgb(253,99,2)" fg:x="135653" fg:w="445"/><text x="63.7487%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (377 samples, 0.18%)</title><rect x="63.5306%" y="325" width="0.1765%" height="15" fill="rgb(220,168,23)" fg:x="135721" fg:w="377"/><text x="63.7806%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (1,267 samples, 0.59%)</title><rect x="63.4739%" y="357" width="0.5931%" height="15" fill="rgb(242,38,24)" fg:x="135600" fg:w="1267"/><text x="63.7239%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (769 samples, 0.36%)</title><rect x="63.7070%" y="341" width="0.3600%" height="15" fill="rgb(225,182,9)" fg:x="136098" fg:w="769"/><text x="63.9570%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (1,889 samples, 0.88%)</title><rect x="63.4608%" y="373" width="0.8842%" height="15" fill="rgb(243,178,37)" fg:x="135572" fg:w="1889"/><text x="63.7108%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (594 samples, 0.28%)</title><rect x="64.0670%" y="357" width="0.2780%" height="15" fill="rgb(232,139,19)" fg:x="136867" fg:w="594"/><text x="64.3170%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (2,299 samples, 1.08%)</title><rect x="63.4576%" y="389" width="1.0762%" height="15" fill="rgb(225,201,24)" fg:x="135565" fg:w="2299"/><text x="63.7076%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (403 samples, 0.19%)</title><rect x="64.3451%" y="373" width="0.1886%" height="15" fill="rgb(221,47,46)" fg:x="137461" fg:w="403"/><text x="64.5951%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::new (27 samples, 0.01%)</title><rect x="64.5337%" y="389" width="0.0126%" height="15" fill="rgb(249,23,13)" fg:x="137864" fg:w="27"/><text x="64.7837%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::new_impl (26 samples, 0.01%)</title><rect x="64.5342%" y="373" width="0.0122%" height="15" fill="rgb(219,9,5)" fg:x="137865" fg:w="26"/><text x="64.7842%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::generate_bitmaps (53 samples, 0.02%)</title><rect x="64.5735%" y="373" width="0.0248%" height="15" fill="rgb(254,171,16)" fg:x="137949" fg:w="53"/><text x="64.8235%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::Node::hash (118 samples, 0.06%)</title><rect x="64.5463%" y="389" width="0.0552%" height="15" fill="rgb(230,171,20)" fg:x="137891" fg:w="118"/><text x="64.7963%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::NodeKey::gen_child_node_key (31 samples, 0.01%)</title><rect x="64.6020%" y="389" width="0.0145%" height="15" fill="rgb(210,71,41)" fg:x="138010" fg:w="31"/><text x="64.8520%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.01%)</title><rect x="64.6049%" y="373" width="0.0117%" height="15" fill="rgb(206,173,20)" fg:x="138016" fg:w="25"/><text x="64.8549%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.01%)</title><rect x="64.6063%" y="357" width="0.0103%" height="15" fill="rgb(233,88,34)" fg:x="138019" fg:w="22"/><text x="64.8563%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.01%)</title><rect x="64.6938%" y="357" width="0.0117%" height="15" fill="rgb(223,209,46)" fg:x="138206" fg:w="25"/><text x="64.9438%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.01%)</title><rect x="64.6947%" y="341" width="0.0108%" height="15" fill="rgb(250,43,18)" fg:x="138208" fg:w="23"/><text x="64.9447%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.01%)</title><rect x="64.6952%" y="325" width="0.0103%" height="15" fill="rgb(208,13,10)" fg:x="138209" fg:w="22"/><text x="64.9452%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::InternalNode as core::clone::Clone&gt;::clone (110 samples, 0.05%)</title><rect x="64.6563%" y="373" width="0.0515%" height="15" fill="rgb(212,200,36)" fg:x="138126" fg:w="110"/><text x="64.9063%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (42 samples, 0.02%)</title><rect x="64.7228%" y="341" width="0.0197%" height="15" fill="rgb(225,90,30)" fg:x="138268" fg:w="42"/><text x="64.9728%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (27 samples, 0.01%)</title><rect x="64.7298%" y="325" width="0.0126%" height="15" fill="rgb(236,182,39)" fg:x="138283" fg:w="27"/><text x="64.9798%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (100 samples, 0.05%)</title><rect x="64.7186%" y="357" width="0.0468%" height="15" fill="rgb(212,144,35)" fg:x="138259" fg:w="100"/><text x="64.9686%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (49 samples, 0.02%)</title><rect x="64.7425%" y="341" width="0.0229%" height="15" fill="rgb(228,63,44)" fg:x="138310" fg:w="49"/><text x="64.9925%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::merkle_hash (193 samples, 0.09%)</title><rect x="64.7177%" y="373" width="0.0903%" height="15" fill="rgb(228,109,6)" fg:x="138257" fg:w="193"/><text x="64.9677%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (91 samples, 0.04%)</title><rect x="64.7654%" y="357" width="0.0426%" height="15" fill="rgb(238,117,24)" fg:x="138359" fg:w="91"/><text x="65.0154%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::new (44 samples, 0.02%)</title><rect x="64.8080%" y="373" width="0.0206%" height="15" fill="rgb(242,26,26)" fg:x="138450" fg:w="44"/><text x="65.0580%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::InternalNode::new_impl (44 samples, 0.02%)</title><rect x="64.8080%" y="357" width="0.0206%" height="15" fill="rgb(221,92,48)" fg:x="138450" fg:w="44"/><text x="65.0580%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::Node::hash (121 samples, 0.06%)</title><rect x="64.8286%" y="373" width="0.0566%" height="15" fill="rgb(209,209,32)" fg:x="138494" fg:w="121"/><text x="65.0786%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (97 samples, 0.05%)</title><rect x="64.8398%" y="357" width="0.0454%" height="15" fill="rgb(221,70,22)" fg:x="138518" fg:w="97"/><text x="65.0898%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::NodeKey::gen_child_node_key (37 samples, 0.02%)</title><rect x="64.8852%" y="373" width="0.0173%" height="15" fill="rgb(248,145,5)" fg:x="138615" fg:w="37"/><text x="65.1352%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`realloc (22 samples, 0.01%)</title><rect x="64.9536%" y="309" width="0.0103%" height="15" fill="rgb(226,116,26)" fg:x="138761" fg:w="22"/><text x="65.2036%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (41 samples, 0.02%)</title><rect x="64.9452%" y="341" width="0.0192%" height="15" fill="rgb(244,5,17)" fg:x="138743" fg:w="41"/><text x="65.1952%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::finish_grow (34 samples, 0.02%)</title><rect x="64.9484%" y="325" width="0.0159%" height="15" fill="rgb(252,159,33)" fg:x="138750" fg:w="34"/><text x="65.1984%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree::JellyfishMerkleTree&lt;R,H&gt;::create_leaf_node (135 samples, 0.06%)</title><rect x="64.9026%" y="373" width="0.0632%" height="15" fill="rgb(206,71,0)" fg:x="138652" fg:w="135"/><text x="65.1526%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::types::nibble::nibble_path::NibbleIterator::get_nibble_path (104 samples, 0.05%)</title><rect x="64.9171%" y="357" width="0.0487%" height="15" fill="rgb(233,118,54)" fg:x="138683" fg:w="104"/><text x="65.1671%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree::JellyfishMerkleTree&lt;R,H&gt;::insert_at_leaf_node (22 samples, 0.01%)</title><rect x="65.0046%" y="341" width="0.0103%" height="15" fill="rgb(234,83,48)" fg:x="138870" fg:w="22"/><text x="65.2546%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockFetcher::ReadBlockContents (25 samples, 0.01%)</title><rect x="65.0243%" y="133" width="0.0117%" height="15" fill="rgb(228,3,54)" fg:x="138912" fg:w="25"/><text x="65.2743%" y="143.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (28 samples, 0.01%)</title><rect x="65.0243%" y="181" width="0.0131%" height="15" fill="rgb(226,155,13)" fg:x="138912" fg:w="28"/><text x="65.2743%" y="191.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (28 samples, 0.01%)</title><rect x="65.0243%" y="165" width="0.0131%" height="15" fill="rgb(241,28,37)" fg:x="138912" fg:w="28"/><text x="65.2743%" y="175.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, bool, rocksdb::CachableEntry (28 samples, 0.01%)</title><rect x="65.0243%" y="149" width="0.0131%" height="15" fill="rgb(233,93,10)" fg:x="138912" fg:w="28"/><text x="65.2743%" y="159.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTable::Get (44 samples, 0.02%)</title><rect x="65.0196%" y="197" width="0.0206%" height="15" fill="rgb(225,113,19)" fg:x="138902" fg:w="44"/><text x="65.2696%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf (50 samples, 0.02%)</title><rect x="65.0172%" y="293" width="0.0234%" height="15" fill="rgb(241,2,18)" fg:x="138897" fg:w="50"/><text x="65.2672%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_get_pinned_cf (49 samples, 0.02%)</title><rect x="65.0177%" y="277" width="0.0229%" height="15" fill="rgb(228,207,21)" fg:x="138898" fg:w="49"/><text x="65.2677%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (48 samples, 0.02%)</title><rect x="65.0182%" y="261" width="0.0225%" height="15" fill="rgb(213,211,35)" fg:x="138899" fg:w="48"/><text x="65.2682%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::GetImpl (48 samples, 0.02%)</title><rect x="65.0182%" y="245" width="0.0225%" height="15" fill="rgb(209,83,10)" fg:x="138899" fg:w="48"/><text x="65.2682%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (46 samples, 0.02%)</title><rect x="65.0191%" y="229" width="0.0215%" height="15" fill="rgb(209,164,1)" fg:x="138901" fg:w="46"/><text x="65.2691%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, std::__1::shared_ptr (45 samples, 0.02%)</title><rect x="65.0196%" y="213" width="0.0211%" height="15" fill="rgb(213,184,43)" fg:x="138902" fg:w="45"/><text x="65.2696%" y="223.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree::JellyfishMerkleTree&lt;R,H&gt;::insert_at (80 samples, 0.04%)</title><rect x="65.0037%" y="357" width="0.0374%" height="15" fill="rgb(231,61,34)" fg:x="138868" fg:w="80"/><text x="65.2537%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::get_node_option (56 samples, 0.03%)</title><rect x="65.0149%" y="341" width="0.0262%" height="15" fill="rgb(235,75,3)" fg:x="138892" fg:w="56"/><text x="65.2649%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_state::tree_db::TreeReadLogger&lt;W&gt; as jmt::reader::TreeReader&gt;::get_node_option (54 samples, 0.03%)</title><rect x="65.0158%" y="325" width="0.0253%" height="15" fill="rgb(220,106,47)" fg:x="138894" fg:w="54"/><text x="65.2658%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::DB::get (52 samples, 0.02%)</title><rect x="65.0168%" y="309" width="0.0243%" height="15" fill="rgb(210,196,33)" fg:x="138896" fg:w="52"/><text x="65.2668%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::InternalNode as core::clone::Clone&gt;::clone (27 samples, 0.01%)</title><rect x="65.0613%" y="341" width="0.0126%" height="15" fill="rgb(229,154,42)" fg:x="138991" fg:w="27"/><text x="65.3113%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::LeafNode::hash (38 samples, 0.02%)</title><rect x="65.0931%" y="341" width="0.0178%" height="15" fill="rgb(228,114,26)" fg:x="139059" fg:w="38"/><text x="65.3431%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (31 samples, 0.01%)</title><rect x="65.0964%" y="325" width="0.0145%" height="15" fill="rgb(208,144,1)" fg:x="139066" fg:w="31"/><text x="65.3464%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::node_type::Node::hash (40 samples, 0.02%)</title><rect x="65.1109%" y="341" width="0.0187%" height="15" fill="rgb(239,112,37)" fg:x="139097" fg:w="40"/><text x="65.3609%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (37 samples, 0.02%)</title><rect x="65.1123%" y="325" width="0.0173%" height="15" fill="rgb(210,96,50)" fg:x="139100" fg:w="37"/><text x="65.3623%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::put_node (26 samples, 0.01%)</title><rect x="65.1380%" y="325" width="0.0122%" height="15" fill="rgb(222,178,2)" fg:x="139155" fg:w="26"/><text x="65.3880%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (25 samples, 0.01%)</title><rect x="65.1385%" y="309" width="0.0117%" height="15" fill="rgb(226,74,18)" fg:x="139156" fg:w="25"/><text x="65.3885%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (39 samples, 0.02%)</title><rect x="65.1670%" y="309" width="0.0183%" height="15" fill="rgb(225,67,54)" fg:x="139217" fg:w="39"/><text x="65.4170%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::finish_grow (33 samples, 0.02%)</title><rect x="65.1698%" y="293" width="0.0154%" height="15" fill="rgb(251,92,32)" fg:x="139223" fg:w="33"/><text x="65.4198%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree::JellyfishMerkleTree&lt;R,H&gt;::create_leaf_node (113 samples, 0.05%)</title><rect x="65.1329%" y="341" width="0.0529%" height="15" fill="rgb(228,149,22)" fg:x="139144" fg:w="113"/><text x="65.3829%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::types::nibble::nibble_path::NibbleIterator::get_nibble_path (76 samples, 0.04%)</title><rect x="65.1502%" y="325" width="0.0356%" height="15" fill="rgb(243,54,13)" fg:x="139181" fg:w="76"/><text x="65.4002%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::delete_node (30 samples, 0.01%)</title><rect x="65.1858%" y="341" width="0.0140%" height="15" fill="rgb(243,180,28)" fg:x="139257" fg:w="30"/><text x="65.4358%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::put_node (36 samples, 0.02%)</title><rect x="65.1998%" y="341" width="0.0169%" height="15" fill="rgb(208,167,24)" fg:x="139287" fg:w="36"/><text x="65.4498%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (30 samples, 0.01%)</title><rect x="65.2026%" y="325" width="0.0140%" height="15" fill="rgb(245,73,45)" fg:x="139293" fg:w="30"/><text x="65.4526%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree::JellyfishMerkleTree&lt;R,H&gt;::insert_at_leaf_node (515 samples, 0.24%)</title><rect x="65.0411%" y="357" width="0.2411%" height="15" fill="rgb(237,203,48)" fg:x="138948" fg:w="515"/><text x="65.2911%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (120 samples, 0.06%)</title><rect x="65.2260%" y="341" width="0.0562%" height="15" fill="rgb(211,197,16)" fg:x="139343" fg:w="120"/><text x="65.4760%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (33 samples, 0.02%)</title><rect x="65.3936%" y="213" width="0.0154%" height="15" fill="rgb(243,99,51)" fg:x="139701" fg:w="33"/><text x="65.6436%" y="223.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (87 samples, 0.04%)</title><rect x="65.3707%" y="229" width="0.0407%" height="15" fill="rgb(215,123,29)" fg:x="139652" fg:w="87"/><text x="65.6207%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (90 samples, 0.04%)</title><rect x="65.3697%" y="245" width="0.0421%" height="15" fill="rgb(239,186,37)" fg:x="139650" fg:w="90"/><text x="65.6197%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (54 samples, 0.03%)</title><rect x="65.4910%" y="133" width="0.0253%" height="15" fill="rgb(252,136,39)" fg:x="139909" fg:w="54"/><text x="65.7410%" y="143.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::BinarySeek&lt;rocksdb::DecodeKeyV4&gt; (149 samples, 0.07%)</title><rect x="65.4484%" y="165" width="0.0697%" height="15" fill="rgb(223,213,32)" fg:x="139818" fg:w="149"/><text x="65.6984%" y="175.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (63 samples, 0.03%)</title><rect x="65.4886%" y="149" width="0.0295%" height="15" fill="rgb(233,115,5)" fg:x="139904" fg:w="63"/><text x="65.7386%" y="159.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Seek (163 samples, 0.08%)</title><rect x="65.4484%" y="197" width="0.0763%" height="15" fill="rgb(207,226,44)" fg:x="139818" fg:w="163"/><text x="65.6984%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::IndexBlockIter::SeekImpl (163 samples, 0.08%)</title><rect x="65.4484%" y="181" width="0.0763%" height="15" fill="rgb(208,126,0)" fg:x="139818" fg:w="163"/><text x="65.6984%" y="191.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`crc32c_arm64(unsigned int, unsigned char const*, unsigned long) (37 samples, 0.02%)</title><rect x="65.5462%" y="101" width="0.0173%" height="15" fill="rgb(244,66,21)" fg:x="140027" fg:w="37"/><text x="65.7962%" y="111.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockFetcher::ProcessTrailerIfPresent (43 samples, 0.02%)</title><rect x="65.5448%" y="133" width="0.0201%" height="15" fill="rgb(222,97,12)" fg:x="140024" fg:w="43"/><text x="65.7948%" y="143.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::VerifyBlockChecksum(rocksdb::ChecksumType, char const*, unsigned long, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (42 samples, 0.02%)</title><rect x="65.5453%" y="117" width="0.0197%" height="15" fill="rgb(219,213,19)" fg:x="140025" fg:w="42"/><text x="65.7953%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`pread (286 samples, 0.13%)</title><rect x="65.5705%" y="117" width="0.1339%" height="15" fill="rgb(252,169,30)" fg:x="140079" fg:w="286"/><text x="65.8205%" y="127.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long long, unsigned long, rocksdb::Slice*, char*, std::__1::unique_ptr&lt;char [], std::__1::default_delete (304 samples, 0.14%)</title><rect x="65.5654%" y="133" width="0.1423%" height="15" fill="rgb(206,32,51)" fg:x="140068" fg:w="304"/><text x="65.8154%" y="143.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (30 samples, 0.01%)</title><rect x="65.7105%" y="101" width="0.0140%" height="15" fill="rgb(250,172,42)" fg:x="140378" fg:w="30"/><text x="65.9605%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (30 samples, 0.01%)</title><rect x="65.7105%" y="85" width="0.0140%" height="15" fill="rgb(209,34,43)" fg:x="140378" fg:w="30"/><text x="65.9605%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.01%)</title><rect x="65.7110%" y="69" width="0.0136%" height="15" fill="rgb(223,11,35)" fg:x="140379" fg:w="29"/><text x="65.9610%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (29 samples, 0.01%)</title><rect x="65.7110%" y="53" width="0.0136%" height="15" fill="rgb(251,219,26)" fg:x="140379" fg:w="29"/><text x="65.9610%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (28 samples, 0.01%)</title><rect x="65.7114%" y="37" width="0.0131%" height="15" fill="rgb(231,119,3)" fg:x="140380" fg:w="28"/><text x="65.9614%" y="47.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`LZ4_decompress_safe_continue (193 samples, 0.09%)</title><rect x="65.7264%" y="101" width="0.0903%" height="15" fill="rgb(216,97,11)" fg:x="140412" fg:w="193"/><text x="65.9764%" y="111.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`LZ4_decompress_safe (192 samples, 0.09%)</title><rect x="65.7269%" y="85" width="0.0899%" height="15" fill="rgb(223,59,9)" fg:x="140413" fg:w="192"/><text x="65.9769%" y="95.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::UncompressBlockContentsForCompressionType (236 samples, 0.11%)</title><rect x="65.7077%" y="133" width="0.1105%" height="15" fill="rgb(233,93,31)" fg:x="140372" fg:w="236"/><text x="65.9577%" y="143.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::LZ4_Uncompress (230 samples, 0.11%)</title><rect x="65.7105%" y="117" width="0.1077%" height="15" fill="rgb(239,81,33)" fg:x="140378" fg:w="230"/><text x="65.9605%" y="127.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockFetcher::ReadBlockContents (601 samples, 0.28%)</title><rect x="65.5406%" y="149" width="0.2813%" height="15" fill="rgb(213,120,34)" fg:x="140015" fg:w="601"/><text x="65.7906%" y="159.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry (31 samples, 0.01%)</title><rect x="65.8233%" y="149" width="0.0145%" height="15" fill="rgb(243,49,53)" fg:x="140619" fg:w="31"/><text x="66.0733%" y="159.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::cache_entry_roles_detail::RegisteredDeleter&lt;rocksdb::Block, (rocksdb::CacheEntryRole)0&gt;::Delete (28 samples, 0.01%)</title><rect x="65.8715%" y="117" width="0.0131%" height="15" fill="rgb(247,216,33)" fg:x="140722" fg:w="28"/><text x="66.1215%" y="127.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Block::~Block (23 samples, 0.01%)</title><rect x="65.8739%" y="101" width="0.0108%" height="15" fill="rgb(226,26,14)" fg:x="140727" fg:w="23"/><text x="66.1239%" y="111.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::lru_cache::LRUCacheShard::InsertItem (65 samples, 0.03%)</title><rect x="65.8598%" y="133" width="0.0304%" height="15" fill="rgb(215,49,53)" fg:x="140697" fg:w="65"/><text x="66.1098%" y="143.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::CachableEntry (113 samples, 0.05%)</title><rect x="65.8378%" y="149" width="0.0529%" height="15" fill="rgb(245,162,40)" fg:x="140650" fg:w="113"/><text x="66.0878%" y="159.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, bool, rocksdb::CachableEntry (767 samples, 0.36%)</title><rect x="65.5340%" y="165" width="0.3590%" height="15" fill="rgb(229,68,17)" fg:x="140001" fg:w="767"/><text x="65.7840%" y="175.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (772 samples, 0.36%)</title><rect x="65.5322%" y="181" width="0.3614%" height="15" fill="rgb(213,182,10)" fg:x="139997" fg:w="772"/><text x="65.7822%" y="191.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (790 samples, 0.37%)</title><rect x="65.5256%" y="197" width="0.3698%" height="15" fill="rgb(245,125,30)" fg:x="139983" fg:w="790"/><text x="65.7756%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::BinarySeek&lt;rocksdb::DecodeKey&gt; (34 samples, 0.02%)</title><rect x="65.8996%" y="181" width="0.0159%" height="15" fill="rgb(232,202,2)" fg:x="140782" fg:w="34"/><text x="66.1496%" y="191.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (30 samples, 0.01%)</title><rect x="65.9165%" y="181" width="0.0140%" height="15" fill="rgb(237,140,51)" fg:x="140818" fg:w="30"/><text x="66.1665%" y="191.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter::NextImpl (27 samples, 0.01%)</title><rect x="65.9305%" y="181" width="0.0126%" height="15" fill="rgb(236,157,25)" fg:x="140848" fg:w="27"/><text x="66.1805%" y="191.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter::SeekImpl (102 samples, 0.05%)</title><rect x="65.8959%" y="197" width="0.0477%" height="15" fill="rgb(219,209,0)" fg:x="140774" fg:w="102"/><text x="66.1459%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTable::Get (1,117 samples, 0.52%)</title><rect x="65.4292%" y="213" width="0.5229%" height="15" fill="rgb(240,116,54)" fg:x="139777" fg:w="1117"/><text x="65.6792%" y="223.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1,160 samples, 0.54%)</title><rect x="65.4119%" y="245" width="0.5430%" height="15" fill="rgb(216,10,36)" fg:x="139740" fg:w="1160"/><text x="65.6619%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, std::__1::shared_ptr (1,124 samples, 0.53%)</title><rect x="65.4287%" y="229" width="0.5261%" height="15" fill="rgb(222,72,44)" fg:x="139776" fg:w="1124"/><text x="65.6787%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::GetImpl (1,271 samples, 0.59%)</title><rect x="65.3636%" y="261" width="0.5950%" height="15" fill="rgb(232,159,9)" fg:x="139637" fg:w="1271"/><text x="65.6136%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_get_pinned_cf (1,287 samples, 0.60%)</title><rect x="65.3576%" y="293" width="0.6024%" height="15" fill="rgb(210,39,32)" fg:x="139624" fg:w="1287"/><text x="65.6076%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1,277 samples, 0.60%)</title><rect x="65.3622%" y="277" width="0.5978%" height="15" fill="rgb(216,194,45)" fg:x="139634" fg:w="1277"/><text x="65.6122%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf (1,329 samples, 0.62%)</title><rect x="65.3388%" y="309" width="0.6221%" height="15" fill="rgb(218,18,35)" fg:x="139584" fg:w="1329"/><text x="65.5888%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_state::tree_db::TreeReadLogger&lt;W&gt; as jmt::reader::TreeReader&gt;::get_node_option (1,457 samples, 0.68%)</title><rect x="65.2925%" y="341" width="0.6820%" height="15" fill="rgb(207,83,51)" fg:x="139485" fg:w="1457"/><text x="65.5425%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::DB::get (1,414 samples, 0.66%)</title><rect x="65.3126%" y="325" width="0.6619%" height="15" fill="rgb(225,63,43)" fg:x="139528" fg:w="1414"/><text x="65.5626%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::get_node_option (1,473 samples, 0.69%)</title><rect x="65.2878%" y="357" width="0.6895%" height="15" fill="rgb(207,57,36)" fg:x="139475" fg:w="1473"/><text x="65.5378%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree::JellyfishMerkleTree&lt;R,H&gt;::insert_at (2,189 samples, 1.02%)</title><rect x="64.9658%" y="373" width="1.0247%" height="15" fill="rgb(216,99,33)" fg:x="138787" fg:w="2189"/><text x="65.2158%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (22 samples, 0.01%)</title><rect x="65.9801%" y="357" width="0.0103%" height="15" fill="rgb(225,42,16)" fg:x="140954" fg:w="22"/><text x="66.2301%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree::JellyfishMerkleTree&lt;R,H&gt;::insert_at_leaf_node (137 samples, 0.06%)</title><rect x="65.9904%" y="373" width="0.0641%" height="15" fill="rgb(220,201,45)" fg:x="140976" fg:w="137"/><text x="66.2404%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (33 samples, 0.02%)</title><rect x="66.0391%" y="357" width="0.0154%" height="15" fill="rgb(225,33,4)" fg:x="141080" fg:w="33"/><text x="66.2891%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (60 samples, 0.03%)</title><rect x="66.0733%" y="357" width="0.0281%" height="15" fill="rgb(224,33,50)" fg:x="141153" fg:w="60"/><text x="66.3233%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::raw::RawTable&lt;T,A&gt;::insert (40 samples, 0.02%)</title><rect x="66.0826%" y="341" width="0.0187%" height="15" fill="rgb(246,198,51)" fg:x="141173" fg:w="40"/><text x="66.3326%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (37 samples, 0.02%)</title><rect x="66.0840%" y="325" width="0.0173%" height="15" fill="rgb(205,22,4)" fg:x="141176" fg:w="37"/><text x="66.3340%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`core::hash::BuildHasher::hash_one (22 samples, 0.01%)</title><rect x="66.0911%" y="309" width="0.0103%" height="15" fill="rgb(206,3,8)" fg:x="141191" fg:w="22"/><text x="66.3411%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::delete_node (111 samples, 0.05%)</title><rect x="66.0546%" y="373" width="0.0520%" height="15" fill="rgb(251,23,15)" fg:x="141113" fg:w="111"/><text x="66.3046%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::Node as core::clone::Clone&gt;::clone (24 samples, 0.01%)</title><rect x="66.1262%" y="357" width="0.0112%" height="15" fill="rgb(252,88,28)" fg:x="141266" fg:w="24"/><text x="66.3762%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (32 samples, 0.01%)</title><rect x="66.1589%" y="325" width="0.0150%" height="15" fill="rgb(212,127,14)" fg:x="141336" fg:w="32"/><text x="66.4089%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (30 samples, 0.01%)</title><rect x="66.1599%" y="309" width="0.0140%" height="15" fill="rgb(247,145,37)" fg:x="141338" fg:w="30"/><text x="66.4099%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (28 samples, 0.01%)</title><rect x="66.1608%" y="293" width="0.0131%" height="15" fill="rgb(209,117,53)" fg:x="141340" fg:w="28"/><text x="66.4108%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (22 samples, 0.01%)</title><rect x="66.1636%" y="277" width="0.0103%" height="15" fill="rgb(212,90,42)" fg:x="141346" fg:w="22"/><text x="66.4136%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_state::witness::ArrayWitness as sov_state::witness::Witness&gt;::add_hint (43 samples, 0.02%)</title><rect x="66.1566%" y="341" width="0.0201%" height="15" fill="rgb(218,164,37)" fg:x="141331" fg:w="43"/><text x="66.4066%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`borsh::ser::BorshSerialize::try_to_vec (60 samples, 0.03%)</title><rect x="66.1781%" y="341" width="0.0281%" height="15" fill="rgb(246,65,34)" fg:x="141377" fg:w="60"/><text x="66.4281%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (29 samples, 0.01%)</title><rect x="66.2380%" y="325" width="0.0136%" height="15" fill="rgb(231,100,33)" fg:x="141505" fg:w="29"/><text x="66.4880%" y="335.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (38 samples, 0.02%)</title><rect x="66.2591%" y="293" width="0.0178%" height="15" fill="rgb(228,126,14)" fg:x="141550" fg:w="38"/><text x="66.5091%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (37 samples, 0.02%)</title><rect x="66.2596%" y="277" width="0.0173%" height="15" fill="rgb(215,173,21)" fg:x="141551" fg:w="37"/><text x="66.5096%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::histogram::Histogram::start_timer (40 samples, 0.02%)</title><rect x="66.2586%" y="325" width="0.0187%" height="15" fill="rgb(210,6,40)" fg:x="141549" fg:w="40"/><text x="66.5086%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (39 samples, 0.02%)</title><rect x="66.2591%" y="309" width="0.0183%" height="15" fill="rgb(212,48,18)" fg:x="141550" fg:w="39"/><text x="66.5091%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::vec::MetricVec&lt;T&gt;::with_label_values (28 samples, 0.01%)</title><rect x="66.2774%" y="325" width="0.0131%" height="15" fill="rgb(230,214,11)" fg:x="141589" fg:w="28"/><text x="66.5274%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.01%)</title><rect x="66.2947%" y="309" width="0.0131%" height="15" fill="rgb(254,105,39)" fg:x="141626" fg:w="28"/><text x="66.5447%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.01%)</title><rect x="66.3083%" y="309" width="0.0108%" height="15" fill="rgb(245,158,5)" fg:x="141655" fg:w="23"/><text x="66.5583%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (24 samples, 0.01%)</title><rect x="66.5147%" y="213" width="0.0112%" height="15" fill="rgb(249,208,11)" fg:x="142096" fg:w="24"/><text x="66.7647%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (178 samples, 0.08%)</title><rect x="66.5259%" y="213" width="0.0833%" height="15" fill="rgb(210,39,28)" fg:x="142120" fg:w="178"/><text x="66.7759%" y="223.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (264 samples, 0.12%)</title><rect x="66.5063%" y="229" width="0.1236%" height="15" fill="rgb(211,56,53)" fg:x="142078" fg:w="264"/><text x="66.7563%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (567 samples, 0.27%)</title><rect x="66.3799%" y="245" width="0.2654%" height="15" fill="rgb(226,201,30)" fg:x="141808" fg:w="567"/><text x="66.6299%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::SaveValue (33 samples, 0.02%)</title><rect x="66.6298%" y="229" width="0.0154%" height="15" fill="rgb(239,101,34)" fg:x="142342" fg:w="33"/><text x="66.8798%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (598 samples, 0.28%)</title><rect x="66.3743%" y="261" width="0.2799%" height="15" fill="rgb(226,209,5)" fg:x="141796" fg:w="598"/><text x="66.6243%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BinarySearchIndexReader::NewIterator (27 samples, 0.01%)</title><rect x="66.6940%" y="213" width="0.0126%" height="15" fill="rgb(250,105,47)" fg:x="142479" fg:w="27"/><text x="66.9440%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (84 samples, 0.04%)</title><rect x="66.7726%" y="149" width="0.0393%" height="15" fill="rgb(230,72,3)" fg:x="142647" fg:w="84"/><text x="67.0226%" y="159.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::BinarySeek&lt;rocksdb::DecodeKeyV4&gt; (219 samples, 0.10%)</title><rect x="66.7141%" y="181" width="0.1025%" height="15" fill="rgb(232,218,39)" fg:x="142522" fg:w="219"/><text x="66.9641%" y="191.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (105 samples, 0.05%)</title><rect x="66.7675%" y="165" width="0.0492%" height="15" fill="rgb(248,166,6)" fg:x="142636" fg:w="105"/><text x="67.0175%" y="175.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Seek (237 samples, 0.11%)</title><rect x="66.7118%" y="213" width="0.1109%" height="15" fill="rgb(247,89,20)" fg:x="142517" fg:w="237"/><text x="66.9618%" y="223.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::IndexBlockIter::SeekImpl (236 samples, 0.11%)</title><rect x="66.7122%" y="197" width="0.1105%" height="15" fill="rgb(248,130,54)" fg:x="142518" fg:w="236"/><text x="66.9622%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`crc32c_arm64(unsigned int, unsigned char const*, unsigned long) (60 samples, 0.03%)</title><rect x="66.8620%" y="117" width="0.0281%" height="15" fill="rgb(234,196,4)" fg:x="142838" fg:w="60"/><text x="67.1120%" y="127.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::VerifyBlockChecksum(rocksdb::ChecksumType, char const*, unsigned long, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (67 samples, 0.03%)</title><rect x="66.8611%" y="133" width="0.0314%" height="15" fill="rgb(250,143,31)" fg:x="142836" fg:w="67"/><text x="67.1111%" y="143.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockFetcher::ProcessTrailerIfPresent (74 samples, 0.03%)</title><rect x="66.8583%" y="149" width="0.0346%" height="15" fill="rgb(211,110,34)" fg:x="142830" fg:w="74"/><text x="67.1083%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`pread (440 samples, 0.21%)</title><rect x="66.9013%" y="133" width="0.2060%" height="15" fill="rgb(215,124,48)" fg:x="142922" fg:w="440"/><text x="67.1513%" y="143.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long long, unsigned long, rocksdb::Slice*, char*, std::__1::unique_ptr&lt;char [], std::__1::default_delete (467 samples, 0.22%)</title><rect x="66.8962%" y="149" width="0.2186%" height="15" fill="rgb(216,46,13)" fg:x="142911" fg:w="467"/><text x="67.1462%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (31 samples, 0.01%)</title><rect x="67.1227%" y="37" width="0.0145%" height="15" fill="rgb(205,184,25)" fg:x="143395" fg:w="31"/><text x="67.3727%" y="47.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (49 samples, 0.02%)</title><rect x="67.1167%" y="117" width="0.0229%" height="15" fill="rgb(228,1,10)" fg:x="143382" fg:w="49"/><text x="67.3667%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (49 samples, 0.02%)</title><rect x="67.1167%" y="101" width="0.0229%" height="15" fill="rgb(213,116,27)" fg:x="143382" fg:w="49"/><text x="67.3667%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (48 samples, 0.02%)</title><rect x="67.1171%" y="85" width="0.0225%" height="15" fill="rgb(241,95,50)" fg:x="143383" fg:w="48"/><text x="67.3671%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (47 samples, 0.02%)</title><rect x="67.1176%" y="69" width="0.0220%" height="15" fill="rgb(238,48,32)" fg:x="143384" fg:w="47"/><text x="67.3676%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (46 samples, 0.02%)</title><rect x="67.1181%" y="53" width="0.0215%" height="15" fill="rgb(235,113,49)" fg:x="143385" fg:w="46"/><text x="67.3681%" y="63.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`LZ4_decompress_safe_continue (325 samples, 0.15%)</title><rect x="67.1447%" y="117" width="0.1521%" height="15" fill="rgb(205,127,43)" fg:x="143442" fg:w="325"/><text x="67.3947%" y="127.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`LZ4_decompress_safe (324 samples, 0.15%)</title><rect x="67.1452%" y="101" width="0.1517%" height="15" fill="rgb(250,162,2)" fg:x="143443" fg:w="324"/><text x="67.3952%" y="111.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::UncompressBlockContentsForCompressionType (393 samples, 0.18%)</title><rect x="67.1153%" y="149" width="0.1840%" height="15" fill="rgb(220,13,41)" fg:x="143379" fg:w="393"/><text x="67.3653%" y="159.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::LZ4_Uncompress (390 samples, 0.18%)</title><rect x="67.1167%" y="133" width="0.1826%" height="15" fill="rgb(249,221,25)" fg:x="143382" fg:w="390"/><text x="67.3667%" y="143.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockFetcher::ReadBlockContents (969 samples, 0.45%)</title><rect x="66.8503%" y="165" width="0.4536%" height="15" fill="rgb(215,208,19)" fg:x="142813" fg:w="969"/><text x="67.1003%" y="175.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::lru_cache::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int, rocksdb::Cache::CacheItemHelper const*, std::__1::function&lt;rocksdb::Status (25 samples, 0.01%)</title><rect x="67.3268%" y="149" width="0.0117%" height="15" fill="rgb(236,175,2)" fg:x="143831" fg:w="25"/><text x="67.5768%" y="159.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry (67 samples, 0.03%)</title><rect x="67.3095%" y="165" width="0.0314%" height="15" fill="rgb(241,52,2)" fg:x="143794" fg:w="67"/><text x="67.5595%" y="175.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::cache_entry_roles_detail::RegisteredDeleter&lt;rocksdb::Block, (rocksdb::CacheEntryRole)0&gt;::Delete (34 samples, 0.02%)</title><rect x="67.3872%" y="133" width="0.0159%" height="15" fill="rgb(248,140,14)" fg:x="143960" fg:w="34"/><text x="67.6372%" y="143.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Block::~Block (27 samples, 0.01%)</title><rect x="67.3905%" y="117" width="0.0126%" height="15" fill="rgb(253,22,42)" fg:x="143967" fg:w="27"/><text x="67.6405%" y="127.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::lru_cache::LRUCacheShard::InsertItem (88 samples, 0.04%)</title><rect x="67.3685%" y="149" width="0.0412%" height="15" fill="rgb(234,61,47)" fg:x="143920" fg:w="88"/><text x="67.6185%" y="159.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::CachableEntry (148 samples, 0.07%)</title><rect x="67.3409%" y="165" width="0.0693%" height="15" fill="rgb(208,226,15)" fg:x="143861" fg:w="148"/><text x="67.5909%" y="175.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (1,238 samples, 0.58%)</title><rect x="66.8335%" y="197" width="0.5795%" height="15" fill="rgb(217,221,4)" fg:x="142777" fg:w="1238"/><text x="67.0835%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, bool, rocksdb::CachableEntry (1,228 samples, 0.57%)</title><rect x="66.8381%" y="181" width="0.5748%" height="15" fill="rgb(212,174,34)" fg:x="142787" fg:w="1228"/><text x="67.0881%" y="191.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (1,262 samples, 0.59%)</title><rect x="66.8250%" y="213" width="0.5907%" height="15" fill="rgb(253,83,4)" fg:x="142759" fg:w="1262"/><text x="67.0750%" y="223.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::BinarySeek&lt;rocksdb::DecodeKey&gt; (35 samples, 0.02%)</title><rect x="67.4209%" y="197" width="0.0164%" height="15" fill="rgb(250,195,49)" fg:x="144032" fg:w="35"/><text x="67.6709%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (30 samples, 0.01%)</title><rect x="67.4397%" y="197" width="0.0140%" height="15" fill="rgb(241,192,25)" fg:x="144072" fg:w="30"/><text x="67.6897%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter::NextImpl (50 samples, 0.02%)</title><rect x="67.4537%" y="197" width="0.0234%" height="15" fill="rgb(208,124,10)" fg:x="144102" fg:w="50"/><text x="67.7037%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter::SeekImpl (133 samples, 0.06%)</title><rect x="67.4162%" y="213" width="0.0623%" height="15" fill="rgb(222,33,0)" fg:x="144022" fg:w="133"/><text x="67.6662%" y="223.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTable::Get (1,725 samples, 0.81%)</title><rect x="66.6837%" y="229" width="0.8075%" height="15" fill="rgb(234,209,28)" fg:x="142457" fg:w="1725"/><text x="66.9337%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, std::__1::shared_ptr (1,738 samples, 0.81%)</title><rect x="66.6818%" y="245" width="0.8136%" height="15" fill="rgb(224,11,23)" fg:x="142453" fg:w="1738"/><text x="66.9318%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1,797 samples, 0.84%)</title><rect x="66.6556%" y="261" width="0.8412%" height="15" fill="rgb(232,99,1)" fg:x="142397" fg:w="1797"/><text x="66.9056%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::GetImpl (2,464 samples, 1.15%)</title><rect x="66.3523%" y="277" width="1.1534%" height="15" fill="rgb(237,95,45)" fg:x="141749" fg:w="2464"/><text x="66.6023%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (2,489 samples, 1.17%)</title><rect x="66.3462%" y="293" width="1.1651%" height="15" fill="rgb(208,109,11)" fg:x="141736" fg:w="2489"/><text x="66.5962%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_get_pinned_cf (2,510 samples, 1.17%)</title><rect x="66.3373%" y="309" width="1.1749%" height="15" fill="rgb(216,190,48)" fg:x="141717" fg:w="2510"/><text x="66.5873%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf (2,629 samples, 1.23%)</title><rect x="66.2905%" y="325" width="1.2306%" height="15" fill="rgb(251,171,36)" fg:x="141617" fg:w="2629"/><text x="66.5405%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (41 samples, 0.02%)</title><rect x="67.5314%" y="309" width="0.0192%" height="15" fill="rgb(230,62,22)" fg:x="144268" fg:w="41"/><text x="67.7814%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (34 samples, 0.02%)</title><rect x="67.5539%" y="277" width="0.0159%" height="15" fill="rgb(225,114,35)" fg:x="144316" fg:w="34"/><text x="67.8039%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.02%)</title><rect x="67.5543%" y="261" width="0.0154%" height="15" fill="rgb(215,118,42)" fg:x="144317" fg:w="33"/><text x="67.8043%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (24 samples, 0.01%)</title><rect x="67.5585%" y="245" width="0.0112%" height="15" fill="rgb(243,119,21)" fg:x="144326" fg:w="24"/><text x="67.8085%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.02%)</title><rect x="67.5539%" y="293" width="0.0169%" height="15" fill="rgb(252,177,53)" fg:x="144316" fg:w="36"/><text x="67.8039%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;[T (125 samples, 0.06%)</title><rect x="67.5717%" y="293" width="0.0585%" height="15" fill="rgb(237,209,29)" fg:x="144354" fg:w="125"/><text x="67.8217%" y="303.50"></text></g><g><title> N] as borsh::de::BorshDeserialize&gt;::deserialize_reader::ArrayDropGuard&lt;T,_&gt;::fill_buffer (125 samples, 0.06%)</title><rect x="67.5717%" y="277" width="0.0585%" height="15" fill="rgb(212,65,23)" fg:x="144354" fg:w="125"/><text x="67.8217%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::Child as borsh::de::BorshDeserialize&gt;::deserialize_reader (38 samples, 0.02%)</title><rect x="67.6124%" y="261" width="0.0178%" height="15" fill="rgb(230,222,46)" fg:x="144441" fg:w="38"/><text x="67.8624%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;alloc::boxed::Box&lt;T&gt; as borsh::de::BorshDeserialize&gt;::deserialize_reader (172 samples, 0.08%)</title><rect x="67.5506%" y="309" width="0.0805%" height="15" fill="rgb(215,135,32)" fg:x="144309" fg:w="172"/><text x="67.8006%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_db::schema::tables::_&lt;impl sov_rollup_interface::node::db::ValueCodec&lt;sov_db::schema::tables::JmtNodes&gt; for jmt::node_type::Node&gt;::decode_value (223 samples, 0.10%)</title><rect x="67.5286%" y="325" width="0.1044%" height="15" fill="rgb(246,101,22)" fg:x="144262" fg:w="223"/><text x="67.7786%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::DB::get (3,053 samples, 1.43%)</title><rect x="66.2072%" y="341" width="1.4291%" height="15" fill="rgb(206,107,13)" fg:x="141439" fg:w="3053"/><text x="66.4572%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_state::tree_db::TreeReadLogger&lt;W&gt; as jmt::reader::TreeReader&gt;::get_node_option (3,203 samples, 1.50%)</title><rect x="66.1374%" y="357" width="1.4993%" height="15" fill="rgb(250,100,44)" fg:x="141290" fg:w="3203"/><text x="66.3874%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::get_node_option (3,286 samples, 1.54%)</title><rect x="66.1065%" y="373" width="1.5382%" height="15" fill="rgb(231,147,38)" fg:x="141224" fg:w="3286"/><text x="66.3565%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::put_node (87 samples, 0.04%)</title><rect x="67.6447%" y="373" width="0.0407%" height="15" fill="rgb(229,8,40)" fg:x="144510" fg:w="87"/><text x="67.8947%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (81 samples, 0.04%)</title><rect x="67.6475%" y="357" width="0.0379%" height="15" fill="rgb(221,135,30)" fg:x="144516" fg:w="81"/><text x="67.8975%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (54 samples, 0.03%)</title><rect x="67.6601%" y="341" width="0.0253%" height="15" fill="rgb(249,193,18)" fg:x="144543" fg:w="54"/><text x="67.9101%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`core::hash::BuildHasher::hash_one (22 samples, 0.01%)</title><rect x="67.6751%" y="325" width="0.0103%" height="15" fill="rgb(209,133,39)" fg:x="144575" fg:w="22"/><text x="67.9251%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree::JellyfishMerkleTree&lt;R,H&gt;::insert_at (6,705 samples, 3.14%)</title><rect x="64.6240%" y="389" width="3.1386%" height="15" fill="rgb(232,100,14)" fg:x="138057" fg:w="6705"/><text x="64.8740%" y="399.50">rol..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (162 samples, 0.08%)</title><rect x="67.6868%" y="373" width="0.0758%" height="15" fill="rgb(224,185,1)" fg:x="144600" fg:w="162"/><text x="67.9368%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (35 samples, 0.02%)</title><rect x="67.7781%" y="373" width="0.0164%" height="15" fill="rgb(223,139,8)" fg:x="144795" fg:w="35"/><text x="68.0281%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (32 samples, 0.01%)</title><rect x="67.7795%" y="357" width="0.0150%" height="15" fill="rgb(232,213,38)" fg:x="144798" fg:w="32"/><text x="68.0295%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (38 samples, 0.02%)</title><rect x="67.8048%" y="373" width="0.0178%" height="15" fill="rgb(207,94,22)" fg:x="144852" fg:w="38"/><text x="68.0548%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::raw::RawTable&lt;T,A&gt;::insert (24 samples, 0.01%)</title><rect x="67.8113%" y="357" width="0.0112%" height="15" fill="rgb(219,183,54)" fg:x="144866" fg:w="24"/><text x="68.0613%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (22 samples, 0.01%)</title><rect x="67.8123%" y="341" width="0.0103%" height="15" fill="rgb(216,185,54)" fg:x="144868" fg:w="22"/><text x="68.0623%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::delete_node (139 samples, 0.07%)</title><rect x="67.7678%" y="389" width="0.0651%" height="15" fill="rgb(254,217,39)" fg:x="144773" fg:w="139"/><text x="68.0178%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (22 samples, 0.01%)</title><rect x="67.8226%" y="373" width="0.0103%" height="15" fill="rgb(240,178,23)" fg:x="144890" fg:w="22"/><text x="68.0726%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::Node as core::clone::Clone&gt;::clone (186 samples, 0.09%)</title><rect x="67.8595%" y="373" width="0.0871%" height="15" fill="rgb(218,11,47)" fg:x="144969" fg:w="186"/><text x="68.1095%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`borsh::ser::BorshSerialize::try_to_vec (25 samples, 0.01%)</title><rect x="67.9728%" y="357" width="0.0117%" height="15" fill="rgb(218,51,51)" fg:x="145211" fg:w="25"/><text x="68.2228%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (136 samples, 0.06%)</title><rect x="68.1432%" y="229" width="0.0637%" height="15" fill="rgb(238,126,27)" fg:x="145575" fg:w="136"/><text x="68.3932%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (201 samples, 0.09%)</title><rect x="68.1306%" y="245" width="0.0941%" height="15" fill="rgb(249,202,22)" fg:x="145548" fg:w="201"/><text x="68.3806%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (372 samples, 0.17%)</title><rect x="68.0627%" y="261" width="0.1741%" height="15" fill="rgb(254,195,49)" fg:x="145403" fg:w="372"/><text x="68.3127%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::SaveValue (26 samples, 0.01%)</title><rect x="68.2246%" y="245" width="0.0122%" height="15" fill="rgb(208,123,14)" fg:x="145749" fg:w="26"/><text x="68.4746%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (387 samples, 0.18%)</title><rect x="68.0594%" y="277" width="0.1812%" height="15" fill="rgb(224,200,8)" fg:x="145396" fg:w="387"/><text x="68.3094%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Seek (22 samples, 0.01%)</title><rect x="68.2457%" y="229" width="0.0103%" height="15" fill="rgb(217,61,36)" fg:x="145794" fg:w="22"/><text x="68.4957%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::IndexBlockIter::SeekImpl (22 samples, 0.01%)</title><rect x="68.2457%" y="213" width="0.0103%" height="15" fill="rgb(206,35,45)" fg:x="145794" fg:w="22"/><text x="68.4957%" y="223.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::UncompressBlockContentsForCompressionType (29 samples, 0.01%)</title><rect x="68.2691%" y="165" width="0.0136%" height="15" fill="rgb(217,65,33)" fg:x="145844" fg:w="29"/><text x="68.5191%" y="175.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::LZ4_Uncompress (28 samples, 0.01%)</title><rect x="68.2696%" y="149" width="0.0131%" height="15" fill="rgb(222,158,48)" fg:x="145845" fg:w="28"/><text x="68.5196%" y="159.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`LZ4_decompress_safe_continue (24 samples, 0.01%)</title><rect x="68.2715%" y="133" width="0.0112%" height="15" fill="rgb(254,2,54)" fg:x="145849" fg:w="24"/><text x="68.5215%" y="143.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`LZ4_decompress_safe (24 samples, 0.01%)</title><rect x="68.2715%" y="117" width="0.0112%" height="15" fill="rgb(250,143,38)" fg:x="145849" fg:w="24"/><text x="68.5215%" y="127.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockFetcher::ReadBlockContents (57 samples, 0.03%)</title><rect x="68.2565%" y="181" width="0.0267%" height="15" fill="rgb(248,25,0)" fg:x="145817" fg:w="57"/><text x="68.5065%" y="191.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (68 samples, 0.03%)</title><rect x="68.2560%" y="213" width="0.0318%" height="15" fill="rgb(206,152,27)" fg:x="145816" fg:w="68"/><text x="68.5060%" y="223.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, bool, rocksdb::CachableEntry (68 samples, 0.03%)</title><rect x="68.2560%" y="197" width="0.0318%" height="15" fill="rgb(240,77,30)" fg:x="145816" fg:w="68"/><text x="68.5060%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (69 samples, 0.03%)</title><rect x="68.2560%" y="229" width="0.0323%" height="15" fill="rgb(231,5,3)" fg:x="145816" fg:w="69"/><text x="68.5060%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (116 samples, 0.05%)</title><rect x="68.2410%" y="277" width="0.0543%" height="15" fill="rgb(207,226,32)" fg:x="145784" fg:w="116"/><text x="68.4910%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::TableCache::Get(rocksdb::ReadOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::Slice const&amp;, rocksdb::GetContext*, std::__1::shared_ptr (114 samples, 0.05%)</title><rect x="68.2420%" y="261" width="0.0534%" height="15" fill="rgb(222,207,47)" fg:x="145786" fg:w="114"/><text x="68.4920%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTable::Get (113 samples, 0.05%)</title><rect x="68.2424%" y="245" width="0.0529%" height="15" fill="rgb(229,115,45)" fg:x="145787" fg:w="113"/><text x="68.4924%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::GetImpl (541 samples, 0.25%)</title><rect x="68.0463%" y="293" width="0.2532%" height="15" fill="rgb(224,191,6)" fg:x="145368" fg:w="541"/><text x="68.2963%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (546 samples, 0.26%)</title><rect x="68.0449%" y="309" width="0.2556%" height="15" fill="rgb(230,227,24)" fg:x="145365" fg:w="546"/><text x="68.2949%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_get_pinned_cf (556 samples, 0.26%)</title><rect x="68.0421%" y="325" width="0.2603%" height="15" fill="rgb(228,80,19)" fg:x="145359" fg:w="556"/><text x="68.2921%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf (616 samples, 0.29%)</title><rect x="68.0229%" y="341" width="0.2883%" height="15" fill="rgb(247,229,0)" fg:x="145318" fg:w="616"/><text x="68.2729%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;[T (50 samples, 0.02%)</title><rect x="68.3290%" y="309" width="0.0234%" height="15" fill="rgb(237,194,15)" fg:x="145972" fg:w="50"/><text x="68.5790%" y="319.50"></text></g><g><title> N] as borsh::de::BorshDeserialize&gt;::deserialize_reader::ArrayDropGuard&lt;T,_&gt;::fill_buffer (50 samples, 0.02%)</title><rect x="68.3290%" y="293" width="0.0234%" height="15" fill="rgb(219,203,20)" fg:x="145972" fg:w="50"/><text x="68.5790%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::Child as borsh::de::BorshDeserialize&gt;::deserialize_reader (33 samples, 0.02%)</title><rect x="68.3370%" y="277" width="0.0154%" height="15" fill="rgb(234,128,8)" fg:x="145989" fg:w="33"/><text x="68.5870%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;alloc::boxed::Box&lt;T&gt; as borsh::de::BorshDeserialize&gt;::deserialize_reader (74 samples, 0.03%)</title><rect x="68.3197%" y="325" width="0.0346%" height="15" fill="rgb(248,202,8)" fg:x="145952" fg:w="74"/><text x="68.5697%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_db::schema::tables::_&lt;impl sov_rollup_interface::node::db::ValueCodec&lt;sov_db::schema::tables::JmtNodes&gt; for jmt::node_type::Node&gt;::decode_value (88 samples, 0.04%)</title><rect x="68.3141%" y="341" width="0.0412%" height="15" fill="rgb(206,104,37)" fg:x="145940" fg:w="88"/><text x="68.5641%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::DB::get (793 samples, 0.37%)</title><rect x="67.9850%" y="357" width="0.3712%" height="15" fill="rgb(223,8,27)" fg:x="145237" fg:w="793"/><text x="68.2350%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_state::tree_db::TreeReadLogger&lt;W&gt; as jmt::reader::TreeReader&gt;::get_node_option (878 samples, 0.41%)</title><rect x="67.9471%" y="373" width="0.4110%" height="15" fill="rgb(216,217,28)" fg:x="145156" fg:w="878"/><text x="68.1971%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::get_node_option (1,145 samples, 0.54%)</title><rect x="67.8329%" y="389" width="0.5360%" height="15" fill="rgb(249,199,1)" fg:x="144912" fg:w="1145"/><text x="68.0829%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`core::hash::BuildHasher::hash_one (22 samples, 0.01%)</title><rect x="68.3787%" y="357" width="0.0103%" height="15" fill="rgb(240,85,17)" fg:x="146078" fg:w="22"/><text x="68.6287%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::put_node (106 samples, 0.05%)</title><rect x="68.3688%" y="389" width="0.0496%" height="15" fill="rgb(206,108,45)" fg:x="146057" fg:w="106"/><text x="68.6188%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (101 samples, 0.05%)</title><rect x="68.3712%" y="373" width="0.0473%" height="15" fill="rgb(245,210,41)" fg:x="146062" fg:w="101"/><text x="68.6212%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (63 samples, 0.03%)</title><rect x="68.3890%" y="357" width="0.0295%" height="15" fill="rgb(206,13,37)" fg:x="146100" fg:w="63"/><text x="68.6390%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`core::hash::BuildHasher::hash_one (26 samples, 0.01%)</title><rect x="68.4063%" y="341" width="0.0122%" height="15" fill="rgb(250,61,18)" fg:x="146137" fg:w="26"/><text x="68.6563%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree::JellyfishMerkleTree&lt;R,H&gt;::insert_at (11,023 samples, 5.16%)</title><rect x="63.3377%" y="405" width="5.1598%" height="15" fill="rgb(235,172,48)" fg:x="135309" fg:w="11023"/><text x="63.5877%" y="415.50">rollup..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (168 samples, 0.08%)</title><rect x="68.4189%" y="389" width="0.0786%" height="15" fill="rgb(249,201,17)" fg:x="146164" fg:w="168"/><text x="68.6689%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (40 samples, 0.02%)</title><rect x="68.5036%" y="389" width="0.0187%" height="15" fill="rgb(219,208,6)" fg:x="146345" fg:w="40"/><text x="68.7536%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (36 samples, 0.02%)</title><rect x="68.5055%" y="373" width="0.0169%" height="15" fill="rgb(248,31,23)" fg:x="146349" fg:w="36"/><text x="68.7555%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::delete_node (108 samples, 0.05%)</title><rect x="68.4975%" y="405" width="0.0506%" height="15" fill="rgb(245,15,42)" fg:x="146332" fg:w="108"/><text x="68.7475%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.01%)</title><rect x="68.6473%" y="373" width="0.0108%" height="15" fill="rgb(222,217,39)" fg:x="146652" fg:w="23"/><text x="68.8973%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::Node as core::clone::Clone&gt;::clone (211 samples, 0.10%)</title><rect x="68.5603%" y="389" width="0.0988%" height="15" fill="rgb(210,219,27)" fg:x="146466" fg:w="211"/><text x="68.8103%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_get_pinned_cf (22 samples, 0.01%)</title><rect x="68.6670%" y="341" width="0.0103%" height="15" fill="rgb(252,166,36)" fg:x="146694" fg:w="22"/><text x="68.9170%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (22 samples, 0.01%)</title><rect x="68.6670%" y="325" width="0.0103%" height="15" fill="rgb(245,132,34)" fg:x="146694" fg:w="22"/><text x="68.9170%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::GetImpl (22 samples, 0.01%)</title><rect x="68.6670%" y="309" width="0.0103%" height="15" fill="rgb(236,54,3)" fg:x="146694" fg:w="22"/><text x="68.9170%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::db::DBCommon&lt;T,D&gt;::get_cf (27 samples, 0.01%)</title><rect x="68.6661%" y="357" width="0.0126%" height="15" fill="rgb(241,173,43)" fg:x="146692" fg:w="27"/><text x="68.9161%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_state::tree_db::TreeReadLogger&lt;W&gt; as jmt::reader::TreeReader&gt;::get_node_option (50 samples, 0.02%)</title><rect x="68.6590%" y="389" width="0.0234%" height="15" fill="rgb(215,190,9)" fg:x="146677" fg:w="50"/><text x="68.9090%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::DB::get (43 samples, 0.02%)</title><rect x="68.6623%" y="373" width="0.0201%" height="15" fill="rgb(242,101,16)" fg:x="146684" fg:w="43"/><text x="68.9123%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::get_node_option (299 samples, 0.14%)</title><rect x="68.5481%" y="405" width="0.1400%" height="15" fill="rgb(223,190,21)" fg:x="146440" fg:w="299"/><text x="68.7981%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::put_node (55 samples, 0.03%)</title><rect x="68.6881%" y="405" width="0.0257%" height="15" fill="rgb(215,228,25)" fg:x="146739" fg:w="55"/><text x="68.9381%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (49 samples, 0.02%)</title><rect x="68.6909%" y="389" width="0.0229%" height="15" fill="rgb(225,36,22)" fg:x="146745" fg:w="49"/><text x="68.9409%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree::JellyfishMerkleTree&lt;R,H&gt;::insert_at (16,715 samples, 7.82%)</title><rect x="60.9570%" y="421" width="7.8242%" height="15" fill="rgb(251,106,46)" fg:x="130223" fg:w="16715"/><text x="61.2070%" y="431.50">rollup_coar..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (144 samples, 0.07%)</title><rect x="68.7138%" y="405" width="0.0674%" height="15" fill="rgb(208,90,1)" fg:x="146794" fg:w="144"/><text x="68.9638%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (44 samples, 0.02%)</title><rect x="68.7906%" y="405" width="0.0206%" height="15" fill="rgb(243,10,4)" fg:x="146958" fg:w="44"/><text x="69.0406%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (39 samples, 0.02%)</title><rect x="68.7929%" y="389" width="0.0183%" height="15" fill="rgb(212,137,27)" fg:x="146963" fg:w="39"/><text x="69.0429%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::delete_node (116 samples, 0.05%)</title><rect x="68.7812%" y="421" width="0.0543%" height="15" fill="rgb(231,220,49)" fg:x="146938" fg:w="116"/><text x="69.0312%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::Node as core::clone::Clone&gt;::clone (90 samples, 0.04%)</title><rect x="68.8524%" y="405" width="0.0421%" height="15" fill="rgb(237,96,20)" fg:x="147090" fg:w="90"/><text x="69.1024%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::get_node_option (149 samples, 0.07%)</title><rect x="68.8355%" y="421" width="0.0697%" height="15" fill="rgb(239,229,30)" fg:x="147054" fg:w="149"/><text x="69.0855%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::put_node (39 samples, 0.02%)</title><rect x="68.9053%" y="421" width="0.0183%" height="15" fill="rgb(219,65,33)" fg:x="147203" fg:w="39"/><text x="69.1553%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (33 samples, 0.02%)</title><rect x="68.9081%" y="405" width="0.0154%" height="15" fill="rgb(243,134,7)" fg:x="147209" fg:w="33"/><text x="69.1581%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree::JellyfishMerkleTree&lt;R,H&gt;::insert_at (22,812 samples, 10.68%)</title><rect x="58.3202%" y="437" width="10.6782%" height="15" fill="rgb(216,177,54)" fg:x="124590" fg:w="22812"/><text x="58.5702%" y="447.50">rollup_coarse_me..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (160 samples, 0.07%)</title><rect x="68.9235%" y="421" width="0.0749%" height="15" fill="rgb(211,160,20)" fg:x="147242" fg:w="160"/><text x="69.1735%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::delete_node (63 samples, 0.03%)</title><rect x="68.9984%" y="437" width="0.0295%" height="15" fill="rgb(239,85,39)" fg:x="147402" fg:w="63"/><text x="69.2484%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;jmt::node_type::Node as core::clone::Clone&gt;::clone (72 samples, 0.03%)</title><rect x="69.0471%" y="421" width="0.0337%" height="15" fill="rgb(232,125,22)" fg:x="147506" fg:w="72"/><text x="69.2971%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.01%)</title><rect x="69.0696%" y="405" width="0.0112%" height="15" fill="rgb(244,57,34)" fg:x="147554" fg:w="24"/><text x="69.3196%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (43 samples, 0.02%)</title><rect x="69.0817%" y="421" width="0.0201%" height="15" fill="rgb(214,203,32)" fg:x="147580" fg:w="43"/><text x="69.3317%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::get_node_option (177 samples, 0.08%)</title><rect x="69.0279%" y="437" width="0.0829%" height="15" fill="rgb(207,58,43)" fg:x="147465" fg:w="177"/><text x="69.2779%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`core::hash::BuildHasher::hash_one (29 samples, 0.01%)</title><rect x="69.1197%" y="405" width="0.0136%" height="15" fill="rgb(215,193,15)" fg:x="147661" fg:w="29"/><text x="69.3697%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::put_node (49 samples, 0.02%)</title><rect x="69.1108%" y="437" width="0.0229%" height="15" fill="rgb(232,15,44)" fg:x="147642" fg:w="49"/><text x="69.3608%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (42 samples, 0.02%)</title><rect x="69.1140%" y="421" width="0.0197%" height="15" fill="rgb(212,3,48)" fg:x="147649" fg:w="42"/><text x="69.3640%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree::JellyfishMerkleTree&lt;R,H&gt;::insert_at (29,226 samples, 13.68%)</title><rect x="55.5444%" y="453" width="13.6806%" height="15" fill="rgb(218,128,7)" fg:x="118660" fg:w="29226"/><text x="55.7944%" y="463.50">rollup_coarse_measure..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (195 samples, 0.09%)</title><rect x="69.1337%" y="437" width="0.0913%" height="15" fill="rgb(226,216,39)" fg:x="147691" fg:w="195"/><text x="69.3837%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree::JellyfishMerkleTree&lt;R,H&gt;::put (29,339 samples, 13.73%)</title><rect x="55.4919%" y="469" width="13.7335%" height="15" fill="rgb(243,47,51)" fg:x="118548" fg:w="29339"/><text x="55.7419%" y="479.50">rollup_coarse_measure..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (441 samples, 0.21%)</title><rect x="69.2273%" y="469" width="0.2064%" height="15" fill="rgb(241,183,40)" fg:x="147891" fg:w="441"/><text x="69.4773%" y="479.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutexattr_settype (25 samples, 0.01%)</title><rect x="69.4571%" y="453" width="0.0117%" height="15" fill="rgb(231,217,32)" fg:x="148382" fg:w="25"/><text x="69.7071%" y="463.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (28 samples, 0.01%)</title><rect x="69.4712%" y="421" width="0.0131%" height="15" fill="rgb(229,61,38)" fg:x="148412" fg:w="28"/><text x="69.7212%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (24 samples, 0.01%)</title><rect x="69.4731%" y="405" width="0.0112%" height="15" fill="rgb(225,210,5)" fg:x="148416" fg:w="24"/><text x="69.7231%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (33 samples, 0.02%)</title><rect x="69.4693%" y="453" width="0.0154%" height="15" fill="rgb(231,79,45)" fg:x="148408" fg:w="33"/><text x="69.7193%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (29 samples, 0.01%)</title><rect x="69.4712%" y="437" width="0.0136%" height="15" fill="rgb(224,100,7)" fg:x="148412" fg:w="29"/><text x="69.7212%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (31 samples, 0.01%)</title><rect x="69.4983%" y="453" width="0.0145%" height="15" fill="rgb(241,198,18)" fg:x="148470" fg:w="31"/><text x="69.7483%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (29 samples, 0.01%)</title><rect x="69.5138%" y="453" width="0.0136%" height="15" fill="rgb(252,97,53)" fg:x="148503" fg:w="29"/><text x="69.7638%" y="463.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (69 samples, 0.03%)</title><rect x="69.5278%" y="421" width="0.0323%" height="15" fill="rgb(220,88,7)" fg:x="148533" fg:w="69"/><text x="69.7778%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (66 samples, 0.03%)</title><rect x="69.5292%" y="405" width="0.0309%" height="15" fill="rgb(213,176,14)" fg:x="148536" fg:w="66"/><text x="69.7792%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::histogram::Histogram::start_timer (71 samples, 0.03%)</title><rect x="69.5274%" y="453" width="0.0332%" height="15" fill="rgb(246,73,7)" fg:x="148532" fg:w="71"/><text x="69.7774%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (70 samples, 0.03%)</title><rect x="69.5278%" y="437" width="0.0328%" height="15" fill="rgb(245,64,36)" fg:x="148533" fg:w="70"/><text x="69.7778%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (49 samples, 0.02%)</title><rect x="69.5704%" y="437" width="0.0229%" height="15" fill="rgb(245,80,10)" fg:x="148624" fg:w="49"/><text x="69.8204%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (47 samples, 0.02%)</title><rect x="69.5714%" y="421" width="0.0220%" height="15" fill="rgb(232,107,50)" fg:x="148626" fg:w="47"/><text x="69.8214%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (45 samples, 0.02%)</title><rect x="69.5723%" y="405" width="0.0211%" height="15" fill="rgb(253,3,0)" fg:x="148628" fg:w="45"/><text x="69.8223%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (38 samples, 0.02%)</title><rect x="69.5756%" y="389" width="0.0178%" height="15" fill="rgb(212,99,53)" fg:x="148635" fg:w="38"/><text x="69.8256%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_db::schema::tables::_&lt;impl sov_rollup_interface::node::db::ValueCodec&lt;sov_db::schema::tables::KeyHashToKey&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::encode_value (51 samples, 0.02%)</title><rect x="69.5700%" y="453" width="0.0239%" height="15" fill="rgb(249,111,54)" fg:x="148623" fg:w="51"/><text x="69.8200%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.01%)</title><rect x="69.6317%" y="421" width="0.0103%" height="15" fill="rgb(249,55,30)" fg:x="148755" fg:w="22"/><text x="69.8817%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.02%)</title><rect x="69.6303%" y="437" width="0.0239%" height="15" fill="rgb(237,47,42)" fg:x="148752" fg:w="51"/><text x="69.8803%" y="447.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (32 samples, 0.01%)</title><rect x="69.6547%" y="405" width="0.0150%" height="15" fill="rgb(211,20,18)" fg:x="148804" fg:w="32"/><text x="69.9047%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (32 samples, 0.01%)</title><rect x="69.6547%" y="389" width="0.0150%" height="15" fill="rgb(231,203,46)" fg:x="148804" fg:w="32"/><text x="69.9047%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (34 samples, 0.02%)</title><rect x="69.6542%" y="437" width="0.0159%" height="15" fill="rgb(237,142,3)" fg:x="148803" fg:w="34"/><text x="69.9042%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (33 samples, 0.02%)</title><rect x="69.6547%" y="421" width="0.0154%" height="15" fill="rgb(241,107,1)" fg:x="148804" fg:w="33"/><text x="69.9047%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::histogram::Histogram::observe (29 samples, 0.01%)</title><rect x="69.6870%" y="437" width="0.0136%" height="15" fill="rgb(229,83,13)" fg:x="148873" fg:w="29"/><text x="69.9370%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::histogram::Histogram::start_timer (60 samples, 0.03%)</title><rect x="69.7006%" y="437" width="0.0281%" height="15" fill="rgb(241,91,40)" fg:x="148902" fg:w="60"/><text x="69.9506%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (58 samples, 0.03%)</title><rect x="69.7015%" y="421" width="0.0271%" height="15" fill="rgb(225,3,45)" fg:x="148904" fg:w="58"/><text x="69.9515%" y="431.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (58 samples, 0.03%)</title><rect x="69.7015%" y="405" width="0.0271%" height="15" fill="rgb(244,223,14)" fg:x="148904" fg:w="58"/><text x="69.9515%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (53 samples, 0.02%)</title><rect x="69.7038%" y="389" width="0.0248%" height="15" fill="rgb(224,124,37)" fg:x="148909" fg:w="53"/><text x="69.9538%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::vec::MetricVec&lt;T&gt;::with_label_values (29 samples, 0.01%)</title><rect x="69.7286%" y="437" width="0.0136%" height="15" fill="rgb(251,171,30)" fg:x="148962" fg:w="29"/><text x="69.9786%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::MarkLogsSynced (25 samples, 0.01%)</title><rect x="69.8003%" y="373" width="0.0117%" height="15" fill="rgb(236,46,54)" fg:x="149115" fg:w="25"/><text x="70.0503%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::PreprocessWrite (30 samples, 0.01%)</title><rect x="69.8134%" y="373" width="0.0140%" height="15" fill="rgb(245,213,5)" fg:x="149143" fg:w="30"/><text x="70.0634%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`write (5,235 samples, 2.45%)</title><rect x="69.8925%" y="293" width="2.4505%" height="15" fill="rgb(230,144,27)" fg:x="149312" fg:w="5235"/><text x="70.1425%" y="303.50">li..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WritableFileWriter::WriteBuffered (5,297 samples, 2.48%)</title><rect x="69.8709%" y="309" width="2.4795%" height="15" fill="rgb(220,86,6)" fg:x="149266" fg:w="5297"/><text x="70.1209%" y="319.50">ro..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WritableFileWriter::Flush (5,325 samples, 2.49%)</title><rect x="69.8588%" y="325" width="2.4926%" height="15" fill="rgb(240,20,13)" fg:x="149240" fg:w="5325"/><text x="70.1088%" y="335.50">ro..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WritableFileWriter::Append (37 samples, 0.02%)</title><rect x="72.3682%" y="309" width="0.0173%" height="15" fill="rgb(217,89,34)" fg:x="154601" fg:w="37"/><text x="72.6182%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::crc32c::Crc32cCombine (123 samples, 0.06%)</title><rect x="72.3856%" y="309" width="0.0576%" height="15" fill="rgb(229,13,5)" fg:x="154638" fg:w="123"/><text x="72.6356%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::log::Writer::AddRecord (5,543 samples, 2.59%)</title><rect x="69.8489%" y="341" width="2.5947%" height="15" fill="rgb(244,67,35)" fg:x="149219" fg:w="5543"/><text x="70.0989%" y="351.50">ro..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::log::Writer::EmitPhysicalRecord (192 samples, 0.09%)</title><rect x="72.3537%" y="325" width="0.0899%" height="15" fill="rgb(221,40,2)" fg:x="154570" fg:w="192"/><text x="72.6037%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::WriteToWAL (5,554 samples, 2.60%)</title><rect x="69.8457%" y="357" width="2.5998%" height="15" fill="rgb(237,157,21)" fg:x="149212" fg:w="5554"/><text x="70.0957%" y="367.50">ro..</text></g><g><title>libsystem_kernel.dylib`fsync (7,260 samples, 3.40%)</title><rect x="72.4717%" y="325" width="3.3984%" height="15" fill="rgb(222,94,11)" fg:x="154822" fg:w="7260"/><text x="72.7217%" y="335.50">lib..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WritableFileWriter::SyncInternal (7,306 samples, 3.42%)</title><rect x="72.4548%" y="341" width="3.4199%" height="15" fill="rgb(249,113,6)" fg:x="154786" fg:w="7306"/><text x="72.7048%" y="351.50">rol..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WritableFileWriter::Sync (7,326 samples, 3.43%)</title><rect x="72.4459%" y="357" width="3.4293%" height="15" fill="rgb(238,137,36)" fg:x="154767" fg:w="7326"/><text x="72.6959%" y="367.50">rol..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::WriteToWAL (12,919 samples, 6.05%)</title><rect x="69.8312%" y="373" width="6.0473%" height="15" fill="rgb(210,102,26)" fg:x="149181" fg:w="12919"/><text x="70.0812%" y="383.50">rollup_c..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (29 samples, 0.01%)</title><rect x="75.9145%" y="309" width="0.0136%" height="15" fill="rgb(218,30,30)" fg:x="162177" fg:w="29"/><text x="76.1645%" y="319.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (78 samples, 0.04%)</title><rect x="76.3433%" y="261" width="0.0365%" height="15" fill="rgb(214,67,26)" fg:x="163093" fg:w="78"/><text x="76.5933%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (30 samples, 0.01%)</title><rect x="76.3798%" y="261" width="0.0140%" height="15" fill="rgb(251,9,53)" fg:x="163171" fg:w="30"/><text x="76.6298%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_context (132 samples, 0.06%)</title><rect x="76.4023%" y="261" width="0.0618%" height="15" fill="rgb(228,204,25)" fg:x="163219" fg:w="132"/><text x="76.6523%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (424 samples, 0.20%)</title><rect x="76.3227%" y="277" width="0.1985%" height="15" fill="rgb(207,153,8)" fg:x="163049" fg:w="424"/><text x="76.5727%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_level (122 samples, 0.06%)</title><rect x="76.4641%" y="261" width="0.0571%" height="15" fill="rgb(242,9,16)" fg:x="163351" fg:w="122"/><text x="76.7141%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (1,313 samples, 0.61%)</title><rect x="75.9436%" y="293" width="0.6146%" height="15" fill="rgb(217,211,10)" fg:x="162239" fg:w="1313"/><text x="76.1936%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_level (59 samples, 0.03%)</title><rect x="76.5306%" y="277" width="0.0276%" height="15" fill="rgb(219,228,52)" fg:x="163493" fg:w="59"/><text x="76.7806%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::SkipListRep::Allocate (26 samples, 0.01%)</title><rect x="76.5582%" y="293" width="0.0122%" height="15" fill="rgb(231,92,29)" fg:x="163552" fg:w="26"/><text x="76.8082%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOS (1,435 samples, 0.67%)</title><rect x="75.9057%" y="325" width="0.6717%" height="15" fill="rgb(232,8,23)" fg:x="162158" fg:w="1435"/><text x="76.1557%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS (1,369 samples, 0.64%)</title><rect x="75.9365%" y="309" width="0.6408%" height="15" fill="rgb(216,211,34)" fg:x="162224" fg:w="1369"/><text x="76.1865%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::MemTableInserter::PutCF (1,448 samples, 0.68%)</title><rect x="75.9047%" y="341" width="0.6778%" height="15" fill="rgb(236,151,0)" fg:x="162156" fg:w="1448"/><text x="76.1547%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WriteBatchInternal::InsertInto (1,486 samples, 0.70%)</title><rect x="75.8925%" y="373" width="0.6956%" height="15" fill="rgb(209,168,3)" fg:x="162130" fg:w="1486"/><text x="76.1425%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WriteBatchInternal::Iterate (1,472 samples, 0.69%)</title><rect x="75.8991%" y="357" width="0.6890%" height="15" fill="rgb(208,129,28)" fg:x="162144" fg:w="1472"/><text x="76.1491%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::WriteImpl (14,656 samples, 6.86%)</title><rect x="69.7567%" y="389" width="6.8604%" height="15" fill="rgb(229,78,22)" fg:x="149022" fg:w="14656"/><text x="70.0067%" y="399.50">rollup_co..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::Write (14,686 samples, 6.87%)</title><rect x="69.7511%" y="405" width="6.8745%" height="15" fill="rgb(228,187,13)" fg:x="149010" fg:w="14686"/><text x="70.0011%" y="415.50">rollup_co..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_write (14,693 samples, 6.88%)</title><rect x="69.7483%" y="421" width="6.8777%" height="15" fill="rgb(240,119,24)" fg:x="149004" fg:w="14693"/><text x="69.9983%" y="431.50">rollup_co..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write_opt (14,732 samples, 6.90%)</title><rect x="69.7432%" y="437" width="6.8960%" height="15" fill="rgb(209,194,42)" fg:x="148993" fg:w="14732"/><text x="69.9932%" y="447.50">rollup_co..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_writebatch_destroy (28 samples, 0.01%)</title><rect x="76.6261%" y="421" width="0.0131%" height="15" fill="rgb(247,200,46)" fg:x="163697" fg:w="28"/><text x="76.8761%" y="431.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (31 samples, 0.01%)</title><rect x="76.6780%" y="357" width="0.0145%" height="15" fill="rgb(218,76,16)" fg:x="163808" fg:w="31"/><text x="76.9280%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (31 samples, 0.01%)</title><rect x="76.6780%" y="341" width="0.0145%" height="15" fill="rgb(225,21,48)" fg:x="163808" fg:w="31"/><text x="76.9280%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (23 samples, 0.01%)</title><rect x="76.6818%" y="325" width="0.0108%" height="15" fill="rgb(239,223,50)" fg:x="163816" fg:w="23"/><text x="76.9318%" y="335.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__grow_by_and_replace (64 samples, 0.03%)</title><rect x="76.6719%" y="373" width="0.0300%" height="15" fill="rgb(244,45,21)" fg:x="163795" fg:w="64"/><text x="76.9219%" y="383.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (109 samples, 0.05%)</title><rect x="76.6668%" y="389" width="0.0510%" height="15" fill="rgb(232,33,43)" fg:x="163784" fg:w="109"/><text x="76.9168%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (26 samples, 0.01%)</title><rect x="76.7056%" y="373" width="0.0122%" height="15" fill="rgb(209,8,3)" fg:x="163867" fg:w="26"/><text x="76.9556%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WriteBatch::Put (151 samples, 0.07%)</title><rect x="76.6499%" y="421" width="0.0707%" height="15" fill="rgb(214,25,53)" fg:x="163748" fg:w="151"/><text x="76.8999%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WriteBatchInternal::Put (129 samples, 0.06%)</title><rect x="76.6602%" y="405" width="0.0604%" height="15" fill="rgb(254,186,54)" fg:x="163770" fg:w="129"/><text x="76.9102%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_writebatch_put_cf (156 samples, 0.07%)</title><rect x="76.6495%" y="437" width="0.0730%" height="15" fill="rgb(208,174,49)" fg:x="163747" fg:w="156"/><text x="76.8995%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::DB::write_schemas (15,232 samples, 7.13%)</title><rect x="69.5938%" y="453" width="7.1301%" height="15" fill="rgb(233,191,51)" fg:x="148674" fg:w="15232"/><text x="69.8438%" y="463.50">rollup_coa..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::DB::put (15,576 samples, 7.29%)</title><rect x="69.4347%" y="469" width="7.2911%" height="15" fill="rgb(222,134,10)" fg:x="148334" fg:w="15576"/><text x="69.6847%" y="479.50">rollup_coa..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (45,586 samples, 21.34%)</title><rect x="55.3885%" y="485" width="21.3387%" height="15" fill="rgb(230,226,20)" fg:x="118327" fg:w="45586"/><text x="55.6385%" y="495.50">rollup_coarse_measure-64f9a1d8b338..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (34 samples, 0.02%)</title><rect x="76.7332%" y="469" width="0.0159%" height="15" fill="rgb(251,111,25)" fg:x="163926" fg:w="34"/><text x="76.9832%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (23 samples, 0.01%)</title><rect x="76.8283%" y="437" width="0.0108%" height="15" fill="rgb(224,40,46)" fg:x="164129" fg:w="23"/><text x="77.0783%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (38 samples, 0.02%)</title><rect x="76.8217%" y="453" width="0.0178%" height="15" fill="rgb(236,108,47)" fg:x="164115" fg:w="38"/><text x="77.0717%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (184 samples, 0.09%)</title><rect x="76.7543%" y="469" width="0.0861%" height="15" fill="rgb(234,93,0)" fg:x="163971" fg:w="184"/><text x="77.0043%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (155 samples, 0.07%)</title><rect x="76.8681%" y="453" width="0.0726%" height="15" fill="rgb(224,213,32)" fg:x="164214" fg:w="155"/><text x="77.1181%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (66 samples, 0.03%)</title><rect x="77.1152%" y="421" width="0.0309%" height="15" fill="rgb(251,11,48)" fg:x="164742" fg:w="66"/><text x="77.3652%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (29 samples, 0.01%)</title><rect x="77.1784%" y="341" width="0.0136%" height="15" fill="rgb(236,173,5)" fg:x="164877" fg:w="29"/><text x="77.4284%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (36 samples, 0.02%)</title><rect x="77.1770%" y="373" width="0.0169%" height="15" fill="rgb(230,95,12)" fg:x="164874" fg:w="36"/><text x="77.4270%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (35 samples, 0.02%)</title><rect x="77.1775%" y="357" width="0.0164%" height="15" fill="rgb(232,209,1)" fg:x="164875" fg:w="35"/><text x="77.4275%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (179 samples, 0.08%)</title><rect x="77.1110%" y="437" width="0.0838%" height="15" fill="rgb(232,6,1)" fg:x="164733" fg:w="179"/><text x="77.3610%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (99 samples, 0.05%)</title><rect x="77.1484%" y="421" width="0.0463%" height="15" fill="rgb(210,224,50)" fg:x="164813" fg:w="99"/><text x="77.3984%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.02%)</title><rect x="77.1765%" y="405" width="0.0183%" height="15" fill="rgb(228,127,35)" fg:x="164873" fg:w="39"/><text x="77.4265%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.02%)</title><rect x="77.1770%" y="389" width="0.0178%" height="15" fill="rgb(245,102,45)" fg:x="164874" fg:w="38"/><text x="77.4270%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (532 samples, 0.25%)</title><rect x="76.9490%" y="453" width="0.2490%" height="15" fill="rgb(214,1,49)" fg:x="164387" fg:w="532"/><text x="77.1990%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree_cache::TreeCache&lt;R&gt;::freeze (998 samples, 0.47%)</title><rect x="76.7332%" y="485" width="0.4672%" height="15" fill="rgb(226,163,40)" fg:x="163926" fg:w="998"/><text x="76.9832%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::writer::NodeBatch::extend (767 samples, 0.36%)</title><rect x="76.8414%" y="469" width="0.3590%" height="15" fill="rgb(239,212,28)" fg:x="164157" fg:w="767"/><text x="77.0914%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (437 samples, 0.20%)</title><rect x="77.2018%" y="485" width="0.2046%" height="15" fill="rgb(220,20,13)" fg:x="164927" fg:w="437"/><text x="77.4518%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`jmt::tree::JellyfishMerkleTree&lt;R,H&gt;::put_value_set (47,074 samples, 22.04%)</title><rect x="55.3716%" y="501" width="22.0352%" height="15" fill="rgb(210,164,35)" fg:x="118291" fg:w="47074"/><text x="55.6216%" y="511.50">rollup_coarse_measure-64f9a1d8b3389..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (160 samples, 0.07%)</title><rect x="77.4068%" y="501" width="0.0749%" height="15" fill="rgb(248,109,41)" fg:x="165365" fg:w="160"/><text x="77.6568%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_state::prover_storage::ProverStorage&lt;S&gt; as sov_state::storage::Storage&gt;::validate_and_commit (133,789 samples, 62.63%)</title><rect x="14.8593%" y="517" width="62.6262%" height="15" fill="rgb(238,23,50)" fg:x="31744" fg:w="133789"/><text x="15.1093%" y="527.50">rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_state::prover_storage::ProverStorage&lt;S&gt; as sov_state::storag..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (273 samples, 0.13%)</title><rect x="77.4859%" y="517" width="0.1278%" height="15" fill="rgb(211,48,49)" fg:x="165534" fg:w="273"/><text x="77.7359%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (149 samples, 0.07%)</title><rect x="77.6137%" y="485" width="0.0697%" height="15" fill="rgb(223,36,21)" fg:x="165807" fg:w="149"/><text x="77.8637%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`DYLD-STUB$$memcmp (38 samples, 0.02%)</title><rect x="77.6854%" y="485" width="0.0178%" height="15" fill="rgb(207,123,46)" fg:x="165960" fg:w="38"/><text x="77.9354%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (22 samples, 0.01%)</title><rect x="77.7181%" y="469" width="0.0103%" height="15" fill="rgb(240,218,32)" fg:x="166030" fg:w="22"/><text x="77.9681%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`core::slice::sort::merge_sort (84 samples, 0.04%)</title><rect x="77.7031%" y="485" width="0.0393%" height="15" fill="rgb(252,5,43)" fg:x="165998" fg:w="84"/><text x="77.9531%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`core::slice::sort::insertion_sort_shift_left (28 samples, 0.01%)</title><rect x="77.7294%" y="469" width="0.0131%" height="15" fill="rgb(252,84,19)" fg:x="166054" fg:w="28"/><text x="77.9794%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_modules_stf_template::_&lt;impl sov_rollup_interface::state_machine::stf::StateTransitionFunction&lt;Vm&gt; for sov_modules_stf_template::app_template::AppTemplate&lt;C,RT,Vm&gt;&gt;::end_slot (134,354 samples, 62.89%)</title><rect x="14.8536%" y="533" width="62.8907%" height="15" fill="rgb(243,152,39)" fg:x="31732" fg:w="134354"/><text x="15.1036%" y="543.50">rollup_coarse_measure-64f9a1d8b33892a3`sov_modules_stf_template::_&lt;impl sov_rollup_interface::state_mach..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::scratchpad::StateCheckpoint&lt;S&gt;::freeze (279 samples, 0.13%)</title><rect x="77.6137%" y="517" width="0.1306%" height="15" fill="rgb(234,160,15)" fg:x="165807" fg:w="279"/><text x="77.8637%" y="527.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_state::internal_cache::OrderedReadsAndWrites as core::convert::From&lt;sov_state::internal_cache::StorageInternalCache&gt;&gt;::from (279 samples, 0.13%)</title><rect x="77.6137%" y="501" width="0.1306%" height="15" fill="rgb(237,34,20)" fg:x="165807" fg:w="279"/><text x="77.8637%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (51 samples, 0.02%)</title><rect x="77.7762%" y="517" width="0.0239%" height="15" fill="rgb(229,97,13)" fg:x="166154" fg:w="51"/><text x="78.0262%" y="527.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;demo_stf::runtime::Runtime&lt;C&gt; as sov_modules_api::dispatch::DispatchCall&gt;::decode_call (66 samples, 0.03%)</title><rect x="77.8005%" y="517" width="0.0309%" height="15" fill="rgb(234,71,50)" fg:x="166206" fg:w="66"/><text x="78.0505%" y="527.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_bank::call::CallMessage&lt;C&gt; as borsh::de::BorshDeserialize&gt;::deserialize_reader (41 samples, 0.02%)</title><rect x="77.8122%" y="501" width="0.0192%" height="15" fill="rgb(253,155,4)" fg:x="166231" fg:w="41"/><text x="78.0622%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::scratchpad::WorkingSet&lt;S&gt;::get_decoded (94 samples, 0.04%)</title><rect x="77.8777%" y="437" width="0.0440%" height="15" fill="rgb(222,185,37)" fg:x="166371" fg:w="94"/><text x="78.1277%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::scratchpad::WorkingSet&lt;S&gt;::get (92 samples, 0.04%)</title><rect x="77.8787%" y="421" width="0.0431%" height="15" fill="rgb(251,177,13)" fg:x="166373" fg:w="92"/><text x="78.1287%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::internal_cache::StorageInternalCache::get_or_fetch (89 samples, 0.04%)</title><rect x="77.8801%" y="405" width="0.0417%" height="15" fill="rgb(250,179,40)" fg:x="166376" fg:w="89"/><text x="78.1301%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::internal_cache::StorageInternalCache::get_value_from_cache (46 samples, 0.02%)</title><rect x="77.9002%" y="389" width="0.0215%" height="15" fill="rgb(242,44,2)" fg:x="166419" fg:w="46"/><text x="78.1502%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_first_read_last_write_cache::cache::CacheLog::get_value (27 samples, 0.01%)</title><rect x="77.9091%" y="373" width="0.0126%" height="15" fill="rgb(216,177,13)" fg:x="166438" fg:w="27"/><text x="78.1591%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (25 samples, 0.01%)</title><rect x="77.9100%" y="357" width="0.0117%" height="15" fill="rgb(216,106,43)" fg:x="166440" fg:w="25"/><text x="78.1600%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.01%)</title><rect x="77.9217%" y="421" width="0.0112%" height="15" fill="rgb(216,183,2)" fg:x="166465" fg:w="24"/><text x="78.1717%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::storage::StorageKey::new (41 samples, 0.02%)</title><rect x="77.9217%" y="437" width="0.0192%" height="15" fill="rgb(249,75,3)" fg:x="166465" fg:w="41"/><text x="78.1717%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::map::StateMap&lt;K,V&gt;::get_or_err (142 samples, 0.07%)</title><rect x="77.8749%" y="453" width="0.0665%" height="15" fill="rgb(219,67,39)" fg:x="166365" fg:w="142"/><text x="78.1249%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (30 samples, 0.01%)</title><rect x="77.9643%" y="373" width="0.0140%" height="15" fill="rgb(253,228,2)" fg:x="166556" fg:w="30"/><text x="78.2143%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.01%)</title><rect x="77.9657%" y="357" width="0.0126%" height="15" fill="rgb(235,138,27)" fg:x="166559" fg:w="27"/><text x="78.2157%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (25 samples, 0.01%)</title><rect x="77.9667%" y="341" width="0.0117%" height="15" fill="rgb(236,97,51)" fg:x="166561" fg:w="25"/><text x="78.2167%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_state::witness::ArrayWitness as sov_state::witness::Witness&gt;::add_hint (38 samples, 0.02%)</title><rect x="77.9625%" y="389" width="0.0178%" height="15" fill="rgb(240,80,30)" fg:x="166552" fg:w="38"/><text x="78.2125%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (36 samples, 0.02%)</title><rect x="77.9896%" y="373" width="0.0169%" height="15" fill="rgb(230,178,19)" fg:x="166610" fg:w="36"/><text x="78.2396%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (23 samples, 0.01%)</title><rect x="78.0182%" y="357" width="0.0108%" height="15" fill="rgb(210,190,27)" fg:x="166671" fg:w="23"/><text x="78.2682%" y="367.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (49 samples, 0.02%)</title><rect x="78.0332%" y="325" width="0.0229%" height="15" fill="rgb(222,107,31)" fg:x="166703" fg:w="49"/><text x="78.2832%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (46 samples, 0.02%)</title><rect x="78.0346%" y="309" width="0.0215%" height="15" fill="rgb(216,127,34)" fg:x="166706" fg:w="46"/><text x="78.2846%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`prometheus::histogram::Histogram::start_timer (52 samples, 0.02%)</title><rect x="78.0322%" y="357" width="0.0243%" height="15" fill="rgb(234,116,52)" fg:x="166701" fg:w="52"/><text x="78.2822%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys::unix::time::inner::_&lt;impl std::sys::unix::time::Timespec&gt;::now (50 samples, 0.02%)</title><rect x="78.0332%" y="341" width="0.0234%" height="15" fill="rgb(222,124,15)" fg:x="166703" fg:w="50"/><text x="78.2832%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MergingIterator::NextAndGetResult (28 samples, 0.01%)</title><rect x="78.0893%" y="309" width="0.0131%" height="15" fill="rgb(231,179,28)" fg:x="166823" fg:w="28"/><text x="78.3393%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MergingIterator::Next (23 samples, 0.01%)</title><rect x="78.0917%" y="293" width="0.0108%" height="15" fill="rgb(226,93,45)" fg:x="166828" fg:w="23"/><text x="78.3417%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBIter::FindNextUserEntryInternal (94 samples, 0.04%)</title><rect x="78.0701%" y="325" width="0.0440%" height="15" fill="rgb(215,8,51)" fg:x="166782" fg:w="94"/><text x="78.3201%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBIter::FindNextUserEntry (105 samples, 0.05%)</title><rect x="78.0678%" y="341" width="0.0492%" height="15" fill="rgb(223,106,5)" fg:x="166777" fg:w="105"/><text x="78.3178%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (30 samples, 0.01%)</title><rect x="78.1740%" y="245" width="0.0140%" height="15" fill="rgb(250,191,5)" fg:x="167004" fg:w="30"/><text x="78.4240%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter::SeekImpl (70 samples, 0.03%)</title><rect x="78.1642%" y="261" width="0.0328%" height="15" fill="rgb(242,132,44)" fg:x="166983" fg:w="70"/><text x="78.4142%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTableIterator::SeekImpl (93 samples, 0.04%)</title><rect x="78.1539%" y="277" width="0.0435%" height="15" fill="rgb(251,152,29)" fg:x="166961" fg:w="93"/><text x="78.4039%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::GetVarint32PtrFallback (25 samples, 0.01%)</title><rect x="78.2780%" y="245" width="0.0117%" height="15" fill="rgb(218,179,5)" fg:x="167226" fg:w="25"/><text x="78.5280%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (38 samples, 0.02%)</title><rect x="78.3168%" y="229" width="0.0178%" height="15" fill="rgb(227,67,19)" fg:x="167309" fg:w="38"/><text x="78.5668%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (141 samples, 0.07%)</title><rect x="78.2897%" y="245" width="0.0660%" height="15" fill="rgb(233,119,31)" fg:x="167251" fg:w="141"/><text x="78.5397%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Iterator::Seek (323 samples, 0.15%)</title><rect x="78.2068%" y="261" width="0.1512%" height="15" fill="rgb(241,120,22)" fg:x="167074" fg:w="323"/><text x="78.4568%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTableIterator::Seek (347 samples, 0.16%)</title><rect x="78.2017%" y="277" width="0.1624%" height="15" fill="rgb(224,102,30)" fg:x="167063" fg:w="347"/><text x="78.4517%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MergingIterator::NextAndGetResult (499 samples, 0.23%)</title><rect x="78.1371%" y="325" width="0.2336%" height="15" fill="rgb(210,164,37)" fg:x="166925" fg:w="499"/><text x="78.3871%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MergingIterator::Next (495 samples, 0.23%)</title><rect x="78.1389%" y="309" width="0.2317%" height="15" fill="rgb(226,191,16)" fg:x="166929" fg:w="495"/><text x="78.3889%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MergingIterator::SwitchToForward (469 samples, 0.22%)</title><rect x="78.1511%" y="293" width="0.2195%" height="15" fill="rgb(214,40,45)" fg:x="166955" fg:w="469"/><text x="78.4011%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBIter::ReverseToForward (558 samples, 0.26%)</title><rect x="78.1169%" y="341" width="0.2612%" height="15" fill="rgb(244,29,26)" fg:x="166882" fg:w="558"/><text x="78.3669%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBIter::Next (679 samples, 0.32%)</title><rect x="78.0659%" y="357" width="0.3178%" height="15" fill="rgb(216,16,5)" fg:x="166773" fg:w="679"/><text x="78.3159%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_db::schema::tables::_&lt;impl sov_rollup_interface::node::db::KeyDecoder&lt;sov_db::schema::tables::JmtValues&gt; for (alloc::vec::Vec&lt;u8&gt;,u64)&gt;::decode_key (22 samples, 0.01%)</title><rect x="78.3847%" y="357" width="0.0103%" height="15" fill="rgb(249,76,35)" fg:x="167454" fg:w="22"/><text x="78.6347%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_db::schema::tables::_&lt;impl sov_rollup_interface::node::db::ValueCodec&lt;sov_db::schema::tables::JmtValues&gt; for core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::decode_value (23 samples, 0.01%)</title><rect x="78.3950%" y="357" width="0.0108%" height="15" fill="rgb(207,11,44)" fg:x="167476" fg:w="23"/><text x="78.6450%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_schema_db::iterator::SchemaIterator&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (841 samples, 0.39%)</title><rect x="78.0135%" y="373" width="0.3937%" height="15" fill="rgb(228,190,49)" fg:x="166661" fg:w="841"/><text x="78.2635%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_small (35 samples, 0.02%)</title><rect x="78.4357%" y="325" width="0.0164%" height="15" fill="rgb(214,173,12)" fg:x="167563" fg:w="35"/><text x="78.6857%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Arena::~Arena (55 samples, 0.03%)</title><rect x="78.4301%" y="341" width="0.0257%" height="15" fill="rgb(218,26,35)" fg:x="167551" fg:w="55"/><text x="78.6801%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.01%)</title><rect x="78.4938%" y="293" width="0.0108%" height="15" fill="rgb(220,200,19)" fg:x="167687" fg:w="23"/><text x="78.7438%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTableIterator::~BlockBasedTableIterator (94 samples, 0.04%)</title><rect x="78.4919%" y="309" width="0.0440%" height="15" fill="rgb(239,95,49)" fg:x="167683" fg:w="94"/><text x="78.7419%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MergingIterator::~MergingIterator (140 samples, 0.07%)</title><rect x="78.4821%" y="325" width="0.0655%" height="15" fill="rgb(235,85,53)" fg:x="167662" fg:w="140"/><text x="78.7321%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBIter::~DBIter (204 samples, 0.10%)</title><rect x="78.4568%" y="341" width="0.0955%" height="15" fill="rgb(233,133,31)" fg:x="167608" fg:w="204"/><text x="78.7068%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter (275 samples, 0.13%)</title><rect x="78.4249%" y="357" width="0.1287%" height="15" fill="rgb(218,25,20)" fg:x="167540" fg:w="275"/><text x="78.6749%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_iter_destroy (307 samples, 0.14%)</title><rect x="78.4104%" y="373" width="0.1437%" height="15" fill="rgb(252,210,38)" fg:x="167509" fg:w="307"/><text x="78.6604%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (36 samples, 0.02%)</title><rect x="78.5724%" y="293" width="0.0169%" height="15" fill="rgb(242,134,21)" fg:x="167855" fg:w="36"/><text x="78.8224%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (35 samples, 0.02%)</title><rect x="78.6239%" y="133" width="0.0164%" height="15" fill="rgb(213,28,48)" fg:x="167965" fg:w="35"/><text x="78.8739%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (61 samples, 0.03%)</title><rect x="78.6155%" y="197" width="0.0286%" height="15" fill="rgb(250,196,2)" fg:x="167947" fg:w="61"/><text x="78.8655%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (51 samples, 0.02%)</title><rect x="78.6201%" y="181" width="0.0239%" height="15" fill="rgb(227,5,17)" fg:x="167957" fg:w="51"/><text x="78.8701%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (48 samples, 0.02%)</title><rect x="78.6215%" y="165" width="0.0225%" height="15" fill="rgb(221,226,24)" fg:x="167960" fg:w="48"/><text x="78.8715%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (46 samples, 0.02%)</title><rect x="78.6225%" y="149" width="0.0215%" height="15" fill="rgb(211,5,48)" fg:x="167962" fg:w="46"/><text x="78.8725%" y="159.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Arena::AllocateAligned (66 samples, 0.03%)</title><rect x="78.6145%" y="245" width="0.0309%" height="15" fill="rgb(219,150,6)" fg:x="167945" fg:w="66"/><text x="78.8645%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Arena::AllocateNewBlock (64 samples, 0.03%)</title><rect x="78.6155%" y="229" width="0.0300%" height="15" fill="rgb(251,46,16)" fg:x="167947" fg:w="64"/><text x="78.8655%" y="239.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (64 samples, 0.03%)</title><rect x="78.6155%" y="213" width="0.0300%" height="15" fill="rgb(220,204,40)" fg:x="167947" fg:w="64"/><text x="78.8655%" y="223.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::SkipListRep::GetIterator (71 samples, 0.03%)</title><rect x="78.6136%" y="261" width="0.0332%" height="15" fill="rgb(211,85,2)" fg:x="167943" fg:w="71"/><text x="78.8636%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTableIterator::MemTableIterator (91 samples, 0.04%)</title><rect x="78.6098%" y="277" width="0.0426%" height="15" fill="rgb(229,17,7)" fg:x="167935" fg:w="91"/><text x="78.8598%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Block::NewIndexIterator (31 samples, 0.01%)</title><rect x="78.6983%" y="197" width="0.0145%" height="15" fill="rgb(239,72,28)" fg:x="168124" fg:w="31"/><text x="78.9483%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BinarySearchIndexReader::NewIterator (42 samples, 0.02%)</title><rect x="78.6950%" y="213" width="0.0197%" height="15" fill="rgb(230,47,54)" fg:x="168117" fg:w="42"/><text x="78.9450%" y="223.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTable::NewIterator (52 samples, 0.02%)</title><rect x="78.6936%" y="229" width="0.0243%" height="15" fill="rgb(214,50,8)" fg:x="168114" fg:w="52"/><text x="78.9436%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, std::__1::shared_ptr (90 samples, 0.04%)</title><rect x="78.6805%" y="245" width="0.0421%" height="15" fill="rgb(216,198,43)" fg:x="168086" fg:w="90"/><text x="78.9305%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Version::AddIterators (115 samples, 0.05%)</title><rect x="78.6698%" y="277" width="0.0538%" height="15" fill="rgb(234,20,35)" fg:x="168063" fg:w="115"/><text x="78.9198%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Version::AddIteratorsForLevel (111 samples, 0.05%)</title><rect x="78.6716%" y="261" width="0.0520%" height="15" fill="rgb(254,45,19)" fg:x="168067" fg:w="111"/><text x="78.9216%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::NewInternalIterator (274 samples, 0.13%)</title><rect x="78.5963%" y="293" width="0.1283%" height="15" fill="rgb(219,14,44)" fg:x="167906" fg:w="274"/><text x="78.8463%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (31 samples, 0.01%)</title><rect x="78.7367%" y="261" width="0.0145%" height="15" fill="rgb(217,220,26)" fg:x="168206" fg:w="31"/><text x="78.9867%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.01%)</title><rect x="78.7376%" y="245" width="0.0136%" height="15" fill="rgb(213,158,28)" fg:x="168208" fg:w="29"/><text x="78.9876%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (28 samples, 0.01%)</title><rect x="78.7381%" y="229" width="0.0131%" height="15" fill="rgb(252,51,52)" fg:x="168209" fg:w="28"/><text x="78.9881%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (24 samples, 0.01%)</title><rect x="78.7400%" y="213" width="0.0112%" height="15" fill="rgb(246,89,16)" fg:x="168213" fg:w="24"/><text x="78.9900%" y="223.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (32 samples, 0.01%)</title><rect x="78.7367%" y="277" width="0.0150%" height="15" fill="rgb(216,158,49)" fg:x="168206" fg:w="32"/><text x="78.9867%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBIter::DBIter(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::Comparator const*, rocksdb::InternalIteratorBase (22 samples, 0.01%)</title><rect x="78.7746%" y="261" width="0.0103%" height="15" fill="rgb(236,107,19)" fg:x="168287" fg:w="22"/><text x="79.0246%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::ArenaWrappedDBIter::Init (74 samples, 0.03%)</title><rect x="78.7554%" y="277" width="0.0346%" height="15" fill="rgb(228,185,30)" fg:x="168246" fg:w="74"/><text x="79.0054%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::NewArenaWrappedDbIterator (134 samples, 0.06%)</title><rect x="78.7283%" y="293" width="0.0627%" height="15" fill="rgb(246,134,8)" fg:x="168188" fg:w="134"/><text x="78.9783%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::NewIteratorImpl (473 samples, 0.22%)</title><rect x="78.5715%" y="309" width="0.2214%" height="15" fill="rgb(214,143,50)" fg:x="167853" fg:w="473"/><text x="78.8215%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::NewIterator (479 samples, 0.22%)</title><rect x="78.5691%" y="325" width="0.2242%" height="15" fill="rgb(228,75,8)" fg:x="167848" fg:w="479"/><text x="78.8191%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::db_iterator::DBRawIteratorWithThreadMode&lt;D&gt;::new_cf (499 samples, 0.23%)</title><rect x="78.5616%" y="357" width="0.2336%" height="15" fill="rgb(207,175,4)" fg:x="167832" fg:w="499"/><text x="78.8116%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_create_iterator_cf (494 samples, 0.23%)</title><rect x="78.5640%" y="341" width="0.2312%" height="15" fill="rgb(205,108,24)" fg:x="167837" fg:w="494"/><text x="78.8140%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::DB::iter (531 samples, 0.25%)</title><rect x="78.5570%" y="373" width="0.2486%" height="15" fill="rgb(244,120,49)" fg:x="167822" fg:w="531"/><text x="78.8070%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (45 samples, 0.02%)</title><rect x="78.9207%" y="245" width="0.0211%" height="15" fill="rgb(223,47,38)" fg:x="168599" fg:w="45"/><text x="79.1707%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_context (32 samples, 0.01%)</title><rect x="78.9464%" y="245" width="0.0150%" height="15" fill="rgb(229,179,11)" fg:x="168654" fg:w="32"/><text x="79.1964%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (136 samples, 0.06%)</title><rect x="78.9019%" y="261" width="0.0637%" height="15" fill="rgb(231,122,1)" fg:x="168559" fg:w="136"/><text x="79.1519%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Prev (232 samples, 0.11%)</title><rect x="78.8584%" y="277" width="0.1086%" height="15" fill="rgb(245,119,9)" fg:x="168466" fg:w="232"/><text x="79.1084%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTableIterator::Prev (241 samples, 0.11%)</title><rect x="78.8584%" y="293" width="0.1128%" height="15" fill="rgb(241,163,25)" fg:x="168466" fg:w="241"/><text x="79.1084%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTableIterator::Prev (36 samples, 0.02%)</title><rect x="78.9932%" y="277" width="0.0169%" height="15" fill="rgb(217,214,3)" fg:x="168754" fg:w="36"/><text x="79.2432%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter::PrevImpl (35 samples, 0.02%)</title><rect x="78.9937%" y="261" width="0.0164%" height="15" fill="rgb(240,86,28)" fg:x="168755" fg:w="35"/><text x="79.2437%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (41 samples, 0.02%)</title><rect x="79.0260%" y="245" width="0.0192%" height="15" fill="rgb(215,47,9)" fg:x="168824" fg:w="41"/><text x="79.2760%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MergingIterator::Prev (153 samples, 0.07%)</title><rect x="78.9740%" y="293" width="0.0716%" height="15" fill="rgb(252,25,45)" fg:x="168713" fg:w="153"/><text x="79.2240%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTableIterator::Prev (75 samples, 0.04%)</title><rect x="79.0105%" y="277" width="0.0351%" height="15" fill="rgb(251,164,9)" fg:x="168791" fg:w="75"/><text x="79.2605%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Prev (74 samples, 0.03%)</title><rect x="79.0110%" y="261" width="0.0346%" height="15" fill="rgb(233,194,0)" fg:x="168792" fg:w="74"/><text x="79.2610%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBIter::FindValueForCurrentKey (452 samples, 0.21%)</title><rect x="78.8359%" y="309" width="0.2116%" height="15" fill="rgb(249,111,24)" fg:x="168418" fg:w="452"/><text x="79.0859%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBIter::PrevInternal (478 samples, 0.22%)</title><rect x="78.8261%" y="325" width="0.2238%" height="15" fill="rgb(250,223,3)" fg:x="168397" fg:w="478"/><text x="79.0761%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::GetVarint32PtrFallback (47 samples, 0.02%)</title><rect x="79.2174%" y="293" width="0.0220%" height="15" fill="rgb(236,178,37)" fg:x="169233" fg:w="47"/><text x="79.4674%" y="303.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (34 samples, 0.02%)</title><rect x="79.2671%" y="277" width="0.0159%" height="15" fill="rgb(241,158,50)" fg:x="169339" fg:w="34"/><text x="79.5171%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (119 samples, 0.06%)</title><rect x="79.2830%" y="277" width="0.0557%" height="15" fill="rgb(213,121,41)" fg:x="169373" fg:w="119"/><text x="79.5330%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_context (32 samples, 0.01%)</title><rect x="79.3452%" y="277" width="0.0150%" height="15" fill="rgb(240,92,3)" fg:x="169506" fg:w="32"/><text x="79.5952%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (269 samples, 0.13%)</title><rect x="79.2394%" y="293" width="0.1259%" height="15" fill="rgb(205,123,3)" fg:x="169280" fg:w="269"/><text x="79.4894%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Iterator::Seek (647 samples, 0.30%)</title><rect x="79.0676%" y="309" width="0.3029%" height="15" fill="rgb(205,97,47)" fg:x="168913" fg:w="647"/><text x="79.3176%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (22 samples, 0.01%)</title><rect x="79.3705%" y="309" width="0.0103%" height="15" fill="rgb(247,152,14)" fg:x="169560" fg:w="22"/><text x="79.6205%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::GetVarint32PtrFallback (22 samples, 0.01%)</title><rect x="79.4056%" y="277" width="0.0103%" height="15" fill="rgb(248,195,53)" fg:x="169635" fg:w="22"/><text x="79.6556%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (35 samples, 0.02%)</title><rect x="79.4346%" y="261" width="0.0164%" height="15" fill="rgb(226,201,16)" fg:x="169697" fg:w="35"/><text x="79.6846%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_context (30 samples, 0.01%)</title><rect x="79.4543%" y="261" width="0.0140%" height="15" fill="rgb(205,98,0)" fg:x="169739" fg:w="30"/><text x="79.7043%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Prev (198 samples, 0.09%)</title><rect x="79.3808%" y="293" width="0.0927%" height="15" fill="rgb(214,191,48)" fg:x="169582" fg:w="198"/><text x="79.6308%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (123 samples, 0.06%)</title><rect x="79.4159%" y="277" width="0.0576%" height="15" fill="rgb(237,112,39)" fg:x="169657" fg:w="123"/><text x="79.6659%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTableIterator::Prev (200 samples, 0.09%)</title><rect x="79.3808%" y="309" width="0.0936%" height="15" fill="rgb(247,203,27)" fg:x="169582" fg:w="200"/><text x="79.6308%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTableIterator::SeekForPrev (891 samples, 0.42%)</title><rect x="79.0592%" y="325" width="0.4171%" height="15" fill="rgb(235,124,28)" fg:x="168895" fg:w="891"/><text x="79.3092%" y="335.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTableIterator::InitDataBlock (24 samples, 0.01%)</title><rect x="79.4875%" y="277" width="0.0112%" height="15" fill="rgb(208,207,46)" fg:x="169810" fg:w="24"/><text x="79.7375%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (24 samples, 0.01%)</title><rect x="79.4875%" y="261" width="0.0112%" height="15" fill="rgb(234,176,4)" fg:x="169810" fg:w="24"/><text x="79.7375%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (24 samples, 0.01%)</title><rect x="79.4875%" y="245" width="0.0112%" height="15" fill="rgb(230,133,28)" fg:x="169810" fg:w="24"/><text x="79.7375%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, bool, rocksdb::CachableEntry (24 samples, 0.01%)</title><rect x="79.4875%" y="229" width="0.0112%" height="15" fill="rgb(211,137,40)" fg:x="169810" fg:w="24"/><text x="79.7375%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTableIterator::FindKeyBackward (25 samples, 0.01%)</title><rect x="79.4875%" y="293" width="0.0117%" height="15" fill="rgb(254,35,13)" fg:x="169810" fg:w="25"/><text x="79.7375%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockFetcher::ProcessTrailerIfPresent (86 samples, 0.04%)</title><rect x="79.5386%" y="213" width="0.0403%" height="15" fill="rgb(225,49,51)" fg:x="169919" fg:w="86"/><text x="79.7886%" y="223.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::VerifyBlockChecksum(rocksdb::ChecksumType, char const*, unsigned long, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (84 samples, 0.04%)</title><rect x="79.5395%" y="197" width="0.0393%" height="15" fill="rgb(251,10,15)" fg:x="169921" fg:w="84"/><text x="79.7895%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`crc32c_arm64(unsigned int, unsigned char const*, unsigned long) (83 samples, 0.04%)</title><rect x="79.5400%" y="181" width="0.0389%" height="15" fill="rgb(228,207,15)" fg:x="169922" fg:w="83"/><text x="79.7900%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`pread (482 samples, 0.23%)</title><rect x="79.5919%" y="197" width="0.2256%" height="15" fill="rgb(241,99,19)" fg:x="170033" fg:w="482"/><text x="79.8419%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long long, unsigned long, rocksdb::Slice*, char*, std::__1::unique_ptr&lt;char [], std::__1::default_delete (509 samples, 0.24%)</title><rect x="79.5840%" y="213" width="0.2383%" height="15" fill="rgb(207,104,49)" fg:x="170016" fg:w="509"/><text x="79.8340%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (31 samples, 0.01%)</title><rect x="79.8353%" y="101" width="0.0145%" height="15" fill="rgb(234,99,18)" fg:x="170553" fg:w="31"/><text x="80.0853%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (50 samples, 0.02%)</title><rect x="79.8283%" y="165" width="0.0234%" height="15" fill="rgb(213,191,49)" fg:x="170538" fg:w="50"/><text x="80.0783%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (47 samples, 0.02%)</title><rect x="79.8297%" y="149" width="0.0220%" height="15" fill="rgb(210,226,19)" fg:x="170541" fg:w="47"/><text x="80.0797%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (46 samples, 0.02%)</title><rect x="79.8302%" y="133" width="0.0215%" height="15" fill="rgb(229,97,18)" fg:x="170542" fg:w="46"/><text x="80.0802%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (39 samples, 0.02%)</title><rect x="79.8335%" y="117" width="0.0183%" height="15" fill="rgb(211,167,15)" fg:x="170549" fg:w="39"/><text x="80.0835%" y="127.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (51 samples, 0.02%)</title><rect x="79.8283%" y="181" width="0.0239%" height="15" fill="rgb(210,169,34)" fg:x="170538" fg:w="51"/><text x="80.0783%" y="191.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`LZ4_decompress_safe_continue (373 samples, 0.17%)</title><rect x="79.8601%" y="181" width="0.1746%" height="15" fill="rgb(241,121,31)" fg:x="170606" fg:w="373"/><text x="80.1101%" y="191.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`LZ4_decompress_safe (370 samples, 0.17%)</title><rect x="79.8615%" y="165" width="0.1732%" height="15" fill="rgb(232,40,11)" fg:x="170609" fg:w="370"/><text x="80.1115%" y="175.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::UncompressBlockContentsForCompressionType (459 samples, 0.21%)</title><rect x="79.8236%" y="213" width="0.2149%" height="15" fill="rgb(205,86,26)" fg:x="170528" fg:w="459"/><text x="80.0736%" y="223.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::LZ4_Uncompress (455 samples, 0.21%)</title><rect x="79.8255%" y="197" width="0.2130%" height="15" fill="rgb(231,126,28)" fg:x="170532" fg:w="455"/><text x="80.0755%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockFetcher::ReadBlockContents (1,093 samples, 0.51%)</title><rect x="79.5301%" y="229" width="0.5116%" height="15" fill="rgb(219,221,18)" fg:x="169901" fg:w="1093"/><text x="79.7801%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::lru_cache::LRUCacheShard::Lookup(rocksdb::Slice const&amp;, unsigned int, rocksdb::Cache::CacheItemHelper const*, std::__1::function&lt;rocksdb::Status (29 samples, 0.01%)</title><rect x="80.0567%" y="213" width="0.0136%" height="15" fill="rgb(211,40,0)" fg:x="171026" fg:w="29"/><text x="80.3067%" y="223.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry (59 samples, 0.03%)</title><rect x="80.0450%" y="229" width="0.0276%" height="15" fill="rgb(239,85,43)" fg:x="171001" fg:w="59"/><text x="80.2950%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (47 samples, 0.02%)</title><rect x="80.1457%" y="133" width="0.0220%" height="15" fill="rgb(231,55,21)" fg:x="171216" fg:w="47"/><text x="80.3957%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_small (96 samples, 0.04%)</title><rect x="80.1237%" y="165" width="0.0449%" height="15" fill="rgb(225,184,43)" fg:x="171169" fg:w="96"/><text x="80.3737%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`small_madvise_free_range_no_lock (51 samples, 0.02%)</title><rect x="80.1447%" y="149" width="0.0239%" height="15" fill="rgb(251,158,41)" fg:x="171214" fg:w="51"/><text x="80.3947%" y="159.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::cache_entry_roles_detail::RegisteredDeleter&lt;rocksdb::Block, (rocksdb::CacheEntryRole)0&gt;::Delete (114 samples, 0.05%)</title><rect x="80.1171%" y="197" width="0.0534%" height="15" fill="rgb(234,159,37)" fg:x="171155" fg:w="114"/><text x="80.3671%" y="207.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Block::~Block (104 samples, 0.05%)</title><rect x="80.1218%" y="181" width="0.0487%" height="15" fill="rgb(216,204,22)" fg:x="171165" fg:w="104"/><text x="80.3718%" y="191.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::CachableEntry (222 samples, 0.10%)</title><rect x="80.0726%" y="229" width="0.1039%" height="15" fill="rgb(214,17,3)" fg:x="171060" fg:w="222"/><text x="80.3226%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::lru_cache::LRUCacheShard::InsertItem (156 samples, 0.07%)</title><rect x="80.1035%" y="213" width="0.0730%" height="15" fill="rgb(212,111,17)" fg:x="171126" fg:w="156"/><text x="80.3535%" y="223.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, bool, rocksdb::CachableEntry (1,410 samples, 0.66%)</title><rect x="79.5189%" y="245" width="0.6600%" height="15" fill="rgb(221,157,24)" fg:x="169877" fg:w="1410"/><text x="79.7689%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (1,451 samples, 0.68%)</title><rect x="79.5006%" y="277" width="0.6792%" height="15" fill="rgb(252,16,13)" fg:x="169838" fg:w="1451"/><text x="79.7506%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (1,422 samples, 0.67%)</title><rect x="79.5142%" y="261" width="0.6656%" height="15" fill="rgb(221,62,2)" fg:x="169867" fg:w="1422"/><text x="79.7642%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTableIterator::InitDataBlock (1,456 samples, 0.68%)</title><rect x="79.4992%" y="293" width="0.6815%" height="15" fill="rgb(247,87,22)" fg:x="169835" fg:w="1456"/><text x="79.7492%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (127 samples, 0.06%)</title><rect x="80.2529%" y="229" width="0.0594%" height="15" fill="rgb(215,73,9)" fg:x="171445" fg:w="127"/><text x="80.5029%" y="239.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::BinarySeek&lt;rocksdb::DecodeKeyV4&gt; (276 samples, 0.13%)</title><rect x="80.1850%" y="261" width="0.1292%" height="15" fill="rgb(207,175,33)" fg:x="171300" fg:w="276"/><text x="80.4350%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (145 samples, 0.07%)</title><rect x="80.2463%" y="245" width="0.0679%" height="15" fill="rgb(243,129,54)" fg:x="171431" fg:w="145"/><text x="80.4963%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::IndexBlockIter::NextImpl (26 samples, 0.01%)</title><rect x="80.3156%" y="261" width="0.0122%" height="15" fill="rgb(227,119,45)" fg:x="171579" fg:w="26"/><text x="80.5656%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Seek (310 samples, 0.15%)</title><rect x="80.1831%" y="293" width="0.1451%" height="15" fill="rgb(205,109,36)" fg:x="171296" fg:w="310"/><text x="80.4331%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::IndexBlockIter::SeekImpl (309 samples, 0.14%)</title><rect x="80.1836%" y="277" width="0.1446%" height="15" fill="rgb(205,6,39)" fg:x="171297" fg:w="309"/><text x="80.4336%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::BinarySeek&lt;rocksdb::DecodeKey&gt; (79 samples, 0.04%)</title><rect x="80.3493%" y="277" width="0.0370%" height="15" fill="rgb(221,32,16)" fg:x="171651" fg:w="79"/><text x="80.5993%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (27 samples, 0.01%)</title><rect x="80.4045%" y="261" width="0.0126%" height="15" fill="rgb(228,144,50)" fg:x="171769" fg:w="27"/><text x="80.6545%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (71 samples, 0.03%)</title><rect x="80.3924%" y="277" width="0.0332%" height="15" fill="rgb(229,201,53)" fg:x="171743" fg:w="71"/><text x="80.6424%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (39 samples, 0.02%)</title><rect x="80.4265%" y="261" width="0.0183%" height="15" fill="rgb(249,153,27)" fg:x="171816" fg:w="39"/><text x="80.6765%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt; (34 samples, 0.02%)</title><rect x="80.4453%" y="261" width="0.0159%" height="15" fill="rgb(227,106,25)" fg:x="171856" fg:w="34"/><text x="80.6953%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter::NextImpl (77 samples, 0.04%)</title><rect x="80.4256%" y="277" width="0.0360%" height="15" fill="rgb(230,65,29)" fg:x="171814" fg:w="77"/><text x="80.6756%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (34 samples, 0.02%)</title><rect x="80.4986%" y="181" width="0.0159%" height="15" fill="rgb(221,57,46)" fg:x="171970" fg:w="34"/><text x="80.7486%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (32 samples, 0.01%)</title><rect x="80.4996%" y="165" width="0.0150%" height="15" fill="rgb(229,161,17)" fg:x="171972" fg:w="32"/><text x="80.7496%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (58 samples, 0.03%)</title><rect x="80.4981%" y="197" width="0.0271%" height="15" fill="rgb(222,213,11)" fg:x="171969" fg:w="58"/><text x="80.7481%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.01%)</title><rect x="80.5145%" y="181" width="0.0108%" height="15" fill="rgb(235,35,13)" fg:x="172004" fg:w="23"/><text x="80.7645%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (79 samples, 0.04%)</title><rect x="80.4888%" y="213" width="0.0370%" height="15" fill="rgb(233,158,34)" fg:x="171949" fg:w="79"/><text x="80.7388%" y="223.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (89 samples, 0.04%)</title><rect x="80.4888%" y="229" width="0.0417%" height="15" fill="rgb(215,151,48)" fg:x="171949" fg:w="89"/><text x="80.7388%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.01%)</title><rect x="80.5314%" y="229" width="0.0108%" height="15" fill="rgb(229,84,14)" fg:x="172040" fg:w="23"/><text x="80.7814%" y="239.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__grow_by_and_replace (151 samples, 0.07%)</title><rect x="80.4864%" y="245" width="0.0707%" height="15" fill="rgb(229,68,14)" fg:x="171944" fg:w="151"/><text x="80.7364%" y="255.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (196 samples, 0.09%)</title><rect x="80.4785%" y="261" width="0.0917%" height="15" fill="rgb(243,106,26)" fg:x="171927" fg:w="196"/><text x="80.7285%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (46 samples, 0.02%)</title><rect x="80.5744%" y="229" width="0.0215%" height="15" fill="rgb(206,45,38)" fg:x="172132" fg:w="46"/><text x="80.8244%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (45 samples, 0.02%)</title><rect x="80.5749%" y="213" width="0.0211%" height="15" fill="rgb(226,6,15)" fg:x="172133" fg:w="45"/><text x="80.8249%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (34 samples, 0.02%)</title><rect x="80.5801%" y="197" width="0.0159%" height="15" fill="rgb(232,22,54)" fg:x="172144" fg:w="34"/><text x="80.8301%" y="207.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (65 samples, 0.03%)</title><rect x="80.5712%" y="261" width="0.0304%" height="15" fill="rgb(229,222,32)" fg:x="172125" fg:w="65"/><text x="80.8212%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (65 samples, 0.03%)</title><rect x="80.5712%" y="245" width="0.0304%" height="15" fill="rgb(228,62,29)" fg:x="172125" fg:w="65"/><text x="80.8212%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (36 samples, 0.02%)</title><rect x="80.6110%" y="261" width="0.0169%" height="15" fill="rgb(251,103,34)" fg:x="172210" fg:w="36"/><text x="80.8610%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter::PrevImpl (386 samples, 0.18%)</title><rect x="80.4616%" y="277" width="0.1807%" height="15" fill="rgb(233,12,30)" fg:x="171891" fg:w="386"/><text x="80.7116%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt; (28 samples, 0.01%)</title><rect x="80.6292%" y="261" width="0.0131%" height="15" fill="rgb(238,52,0)" fg:x="172249" fg:w="28"/><text x="80.8792%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTableIterator::SeekForPrev (2,477 samples, 1.16%)</title><rect x="79.4866%" y="309" width="1.1595%" height="15" fill="rgb(223,98,5)" fg:x="169808" fg:w="2477"/><text x="79.7366%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DataBlockIter::SeekForPrevImpl (672 samples, 0.31%)</title><rect x="80.3315%" y="293" width="0.3146%" height="15" fill="rgb(228,75,37)" fg:x="171613" fg:w="672"/><text x="80.5815%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (29 samples, 0.01%)</title><rect x="80.8544%" y="277" width="0.0136%" height="15" fill="rgb(205,115,49)" fg:x="172730" fg:w="29"/><text x="81.1044%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::GetVarint32PtrFallback (80 samples, 0.04%)</title><rect x="80.8679%" y="277" width="0.0374%" height="15" fill="rgb(250,154,43)" fg:x="172759" fg:w="80"/><text x="81.1179%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (55 samples, 0.03%)</title><rect x="80.9377%" y="261" width="0.0257%" height="15" fill="rgb(226,43,29)" fg:x="172908" fg:w="55"/><text x="81.1877%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (151 samples, 0.07%)</title><rect x="80.9634%" y="261" width="0.0707%" height="15" fill="rgb(249,228,39)" fg:x="172963" fg:w="151"/><text x="81.2134%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_context (47 samples, 0.02%)</title><rect x="81.0435%" y="261" width="0.0220%" height="15" fill="rgb(216,79,43)" fg:x="173134" fg:w="47"/><text x="81.2935%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (366 samples, 0.17%)</title><rect x="80.9054%" y="277" width="0.1713%" height="15" fill="rgb(228,95,12)" fg:x="172839" fg:w="366"/><text x="81.1554%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_level (24 samples, 0.01%)</title><rect x="81.0655%" y="261" width="0.0112%" height="15" fill="rgb(249,221,15)" fg:x="173181" fg:w="24"/><text x="81.3155%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Iterator::Seek (891 samples, 0.42%)</title><rect x="80.6643%" y="293" width="0.4171%" height="15" fill="rgb(233,34,13)" fg:x="172324" fg:w="891"/><text x="80.9143%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (42 samples, 0.02%)</title><rect x="81.0814%" y="293" width="0.0197%" height="15" fill="rgb(214,103,39)" fg:x="173215" fg:w="42"/><text x="81.3314%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (58 samples, 0.03%)</title><rect x="81.1797%" y="245" width="0.0271%" height="15" fill="rgb(251,126,39)" fg:x="173425" fg:w="58"/><text x="81.4297%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`thread-local wrapper routine for rocksdb::perf_context (33 samples, 0.02%)</title><rect x="81.2092%" y="245" width="0.0154%" height="15" fill="rgb(214,216,36)" fg:x="173488" fg:w="33"/><text x="81.4592%" y="255.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTable::KeyComparator::operator() (155 samples, 0.07%)</title><rect x="81.1563%" y="261" width="0.0726%" height="15" fill="rgb(220,221,8)" fg:x="173375" fg:w="155"/><text x="81.4063%" y="271.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::(anonymous namespace)::SkipListRep::Iterator::Prev (274 samples, 0.13%)</title><rect x="81.1020%" y="277" width="0.1283%" height="15" fill="rgb(240,216,3)" fg:x="173259" fg:w="274"/><text x="81.3520%" y="287.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTableIterator::Prev (282 samples, 0.13%)</title><rect x="81.1011%" y="293" width="0.1320%" height="15" fill="rgb(232,218,17)" fg:x="173257" fg:w="282"/><text x="81.3511%" y="303.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTableIterator::SeekForPrev (1,260 samples, 0.59%)</title><rect x="80.6484%" y="309" width="0.5898%" height="15" fill="rgb(229,163,45)" fg:x="172290" fg:w="1260"/><text x="80.8984%" y="319.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MergingIterator::SeekForPrev (3,799 samples, 1.78%)</title><rect x="79.4772%" y="325" width="1.7783%" height="15" fill="rgb(231,110,42)" fg:x="169788" fg:w="3799"/><text x="79.7272%" y="335.50">r..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBIter::SeekForPrev (5,225 samples, 2.45%)</title><rect x="78.8158%" y="341" width="2.4458%" height="15" fill="rgb(208,170,48)" fg:x="168375" fg:w="5225"/><text x="79.0658%" y="351.50">ro..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb_iter_seek_for_prev (5,229 samples, 2.45%)</title><rect x="78.8153%" y="357" width="2.4477%" height="15" fill="rgb(239,116,25)" fg:x="168374" fg:w="5229"/><text x="79.0653%" y="367.50">ro..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_db::state_db::StateDB::get_value_option_by_key (7,010 samples, 3.28%)</title><rect x="77.9868%" y="389" width="3.2814%" height="15" fill="rgb(219,200,50)" fg:x="166604" fg:w="7010"/><text x="78.2368%" y="399.50">rol..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_schema_db::iterator::SchemaIterator&lt;S&gt;::seek_for_prev (5,261 samples, 2.46%)</title><rect x="78.8055%" y="373" width="2.4627%" height="15" fill="rgb(245,200,0)" fg:x="168353" fg:w="5261"/><text x="79.0555%" y="383.50">ro..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_state::prover_storage::ProverStorage&lt;S&gt; as sov_state::storage::Storage&gt;::get (7,098 samples, 3.32%)</title><rect x="77.9466%" y="405" width="3.3226%" height="15" fill="rgb(245,119,33)" fg:x="166518" fg:w="7098"/><text x="78.1966%" y="415.50">rol..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (134 samples, 0.06%)</title><rect x="81.3150%" y="341" width="0.0627%" height="15" fill="rgb(231,125,12)" fg:x="173714" fg:w="134"/><text x="81.5650%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::internal_cache::StorageInternalCache::add_read (227 samples, 0.11%)</title><rect x="81.2724%" y="405" width="0.1063%" height="15" fill="rgb(216,96,41)" fg:x="173623" fg:w="227"/><text x="81.5224%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_first_read_last_write_cache::cache::CacheLog::add_read (221 samples, 0.10%)</title><rect x="81.2752%" y="389" width="0.1034%" height="15" fill="rgb(248,43,45)" fg:x="173629" fg:w="221"/><text x="81.5252%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (187 samples, 0.09%)</title><rect x="81.2911%" y="373" width="0.0875%" height="15" fill="rgb(217,222,7)" fg:x="173663" fg:w="187"/><text x="81.5411%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (144 samples, 0.07%)</title><rect x="81.3112%" y="357" width="0.0674%" height="15" fill="rgb(233,28,6)" fg:x="173706" fg:w="144"/><text x="81.5612%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 0.01%)</title><rect x="81.3866%" y="373" width="0.0108%" height="15" fill="rgb(231,218,15)" fg:x="173867" fg:w="23"/><text x="81.6366%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::internal_cache::StorageInternalCache::get_or_fetch (7,377 samples, 3.45%)</title><rect x="77.9447%" y="421" width="3.4532%" height="15" fill="rgb(226,171,48)" fg:x="166514" fg:w="7377"/><text x="78.1947%" y="431.50">rol..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::internal_cache::StorageInternalCache::get_value_from_cache (41 samples, 0.02%)</title><rect x="81.3786%" y="405" width="0.0192%" height="15" fill="rgb(235,201,9)" fg:x="173850" fg:w="41"/><text x="81.6286%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_first_read_last_write_cache::cache::CacheLog::get_value (36 samples, 0.02%)</title><rect x="81.3810%" y="389" width="0.0169%" height="15" fill="rgb(217,80,15)" fg:x="173855" fg:w="36"/><text x="81.6310%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::scratchpad::WorkingSet&lt;S&gt;::get_decoded (7,383 samples, 3.46%)</title><rect x="77.9423%" y="453" width="3.4560%" height="15" fill="rgb(219,152,8)" fg:x="166509" fg:w="7383"/><text x="78.1923%" y="463.50">rol..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::scratchpad::WorkingSet&lt;S&gt;::get (7,380 samples, 3.45%)</title><rect x="77.9437%" y="437" width="3.4546%" height="15" fill="rgb(243,107,38)" fg:x="166512" fg:w="7380"/><text x="78.1937%" y="447.50">rol..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (50 samples, 0.02%)</title><rect x="81.4034%" y="421" width="0.0234%" height="15" fill="rgb(231,17,5)" fg:x="173903" fg:w="50"/><text x="81.6534%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (107 samples, 0.05%)</title><rect x="81.4006%" y="437" width="0.0501%" height="15" fill="rgb(209,25,54)" fg:x="173897" fg:w="107"/><text x="81.6506%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::raw::RawTable&lt;T,A&gt;::insert (44 samples, 0.02%)</title><rect x="81.4301%" y="421" width="0.0206%" height="15" fill="rgb(219,0,2)" fg:x="173960" fg:w="44"/><text x="81.6801%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (32 samples, 0.01%)</title><rect x="81.4357%" y="405" width="0.0150%" height="15" fill="rgb(246,9,5)" fg:x="173972" fg:w="32"/><text x="81.6857%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::scratchpad::WorkingSet&lt;S&gt;::set (113 samples, 0.05%)</title><rect x="81.3983%" y="453" width="0.0529%" height="15" fill="rgb(226,159,4)" fg:x="173892" fg:w="113"/><text x="81.6483%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (47 samples, 0.02%)</title><rect x="81.4826%" y="389" width="0.0220%" height="15" fill="rgb(219,175,34)" fg:x="174072" fg:w="47"/><text x="81.7326%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (70 samples, 0.03%)</title><rect x="81.4737%" y="405" width="0.0328%" height="15" fill="rgb(236,10,46)" fg:x="174053" fg:w="70"/><text x="81.7237%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (85 samples, 0.04%)</title><rect x="81.4690%" y="421" width="0.0398%" height="15" fill="rgb(240,211,16)" fg:x="174043" fg:w="85"/><text x="81.7190%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (180 samples, 0.08%)</title><rect x="81.4549%" y="437" width="0.0843%" height="15" fill="rgb(205,3,43)" fg:x="174013" fg:w="180"/><text x="81.7049%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (65 samples, 0.03%)</title><rect x="81.5088%" y="421" width="0.0304%" height="15" fill="rgb(245,7,22)" fg:x="174128" fg:w="65"/><text x="81.7588%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (61 samples, 0.03%)</title><rect x="81.5106%" y="405" width="0.0286%" height="15" fill="rgb(239,132,32)" fg:x="174132" fg:w="61"/><text x="81.7606%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (53 samples, 0.02%)</title><rect x="81.5144%" y="389" width="0.0248%" height="15" fill="rgb(228,202,34)" fg:x="174140" fg:w="53"/><text x="81.7644%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_small (31 samples, 0.01%)</title><rect x="81.5476%" y="437" width="0.0145%" height="15" fill="rgb(254,200,22)" fg:x="174211" fg:w="31"/><text x="81.7976%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::storage::StorageKey::new (277 samples, 0.13%)</title><rect x="81.4512%" y="453" width="0.1297%" height="15" fill="rgb(219,10,39)" fg:x="174005" fg:w="277"/><text x="81.7012%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.02%)</title><rect x="81.5809%" y="437" width="0.0183%" height="15" fill="rgb(226,210,39)" fg:x="174282" fg:w="39"/><text x="81.8309%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::storage::StorageValue::new (43 samples, 0.02%)</title><rect x="81.5809%" y="453" width="0.0201%" height="15" fill="rgb(208,219,16)" fg:x="174282" fg:w="43"/><text x="81.8309%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_bank::token::Token&lt;C&gt;::transfer (8,015 samples, 3.75%)</title><rect x="77.8557%" y="469" width="3.7518%" height="15" fill="rgb(216,158,51)" fg:x="166324" fg:w="8015"/><text x="78.1057%" y="479.50">roll..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_bank::token::Token&lt;C&gt; as borsh::de::BorshDeserialize&gt;::deserialize_reader (54 samples, 0.03%)</title><rect x="81.6122%" y="437" width="0.0253%" height="15" fill="rgb(233,14,44)" fg:x="174349" fg:w="54"/><text x="81.8622%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::internal_cache::StorageInternalCache::get_or_fetch (73 samples, 0.03%)</title><rect x="81.6473%" y="421" width="0.0342%" height="15" fill="rgb(237,97,39)" fg:x="174424" fg:w="73"/><text x="81.8973%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::internal_cache::StorageInternalCache::get_value_from_cache (38 samples, 0.02%)</title><rect x="81.6637%" y="405" width="0.0178%" height="15" fill="rgb(218,198,43)" fg:x="174459" fg:w="38"/><text x="81.9137%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_first_read_last_write_cache::cache::CacheLog::get_value (26 samples, 0.01%)</title><rect x="81.6693%" y="389" width="0.0122%" height="15" fill="rgb(231,104,20)" fg:x="174471" fg:w="26"/><text x="81.9193%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::scratchpad::WorkingSet&lt;S&gt;::get (84 samples, 0.04%)</title><rect x="81.6431%" y="437" width="0.0393%" height="15" fill="rgb(254,36,13)" fg:x="174415" fg:w="84"/><text x="81.8931%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.01%)</title><rect x="81.6824%" y="421" width="0.0108%" height="15" fill="rgb(248,14,50)" fg:x="174499" fg:w="23"/><text x="81.9324%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::storage::StorageKey::new (43 samples, 0.02%)</title><rect x="81.6824%" y="437" width="0.0201%" height="15" fill="rgb(217,107,29)" fg:x="174499" fg:w="43"/><text x="81.9324%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::map::StateMap&lt;K,V&gt;::get_or_err (207 samples, 0.10%)</title><rect x="81.6075%" y="469" width="0.0969%" height="15" fill="rgb(251,169,33)" fg:x="174339" fg:w="207"/><text x="81.8575%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::scratchpad::WorkingSet&lt;S&gt;::get_value (203 samples, 0.10%)</title><rect x="81.6094%" y="453" width="0.0950%" height="15" fill="rgb(217,108,32)" fg:x="174343" fg:w="203"/><text x="81.8594%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_bank::call::_&lt;impl sov_bank::Bank&lt;C&gt;&gt;::transfer_from (8,260 samples, 3.87%)</title><rect x="77.8389%" y="485" width="3.8665%" height="15" fill="rgb(219,66,42)" fg:x="166288" fg:w="8260"/><text x="78.0889%" y="495.50">roll..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;demo_stf::runtime::Runtime&lt;C&gt; as sov_modules_api::dispatch::DispatchCall&gt;::dispatch_call (8,278 samples, 3.87%)</title><rect x="77.8314%" y="517" width="3.8749%" height="15" fill="rgb(206,180,7)" fg:x="166272" fg:w="8278"/><text x="78.0814%" y="527.50">roll..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_bank::Bank&lt;C&gt; as sov_modules_api::Module&gt;::call (8,276 samples, 3.87%)</title><rect x="77.8323%" y="501" width="3.8740%" height="15" fill="rgb(208,226,31)" fg:x="166274" fg:w="8276"/><text x="78.0823%" y="511.50">roll..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (79 samples, 0.04%)</title><rect x="81.7115%" y="501" width="0.0370%" height="15" fill="rgb(218,26,49)" fg:x="174561" fg:w="79"/><text x="81.9615%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (23 samples, 0.01%)</title><rect x="81.7512%" y="485" width="0.0108%" height="15" fill="rgb(233,197,48)" fg:x="174646" fg:w="23"/><text x="82.0012%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_modules_stf_template::tx_verifier::RawTx as borsh::de::BorshDeserialize&gt;::deserialize_reader (59 samples, 0.03%)</title><rect x="81.7484%" y="501" width="0.0276%" height="15" fill="rgb(252,181,51)" fg:x="174640" fg:w="59"/><text x="81.9984%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_modules_stf_template::batch::Batch as borsh::de::BorshDeserialize&gt;::deserialize_reader (142 samples, 0.07%)</title><rect x="81.7115%" y="517" width="0.0665%" height="15" fill="rgb(253,90,19)" fg:x="174561" fg:w="142"/><text x="81.9615%" y="527.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (391 samples, 0.18%)</title><rect x="81.7812%" y="517" width="0.1830%" height="15" fill="rgb(215,171,30)" fg:x="174710" fg:w="391"/><text x="82.0312%" y="527.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::scratchpad::WorkingSet&lt;S&gt;::get_decoded (88 samples, 0.04%)</title><rect x="81.9755%" y="485" width="0.0412%" height="15" fill="rgb(214,222,9)" fg:x="175125" fg:w="88"/><text x="82.2255%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::scratchpad::WorkingSet&lt;S&gt;::get (83 samples, 0.04%)</title><rect x="81.9778%" y="469" width="0.0389%" height="15" fill="rgb(223,3,22)" fg:x="175130" fg:w="83"/><text x="82.2278%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::internal_cache::StorageInternalCache::get_or_fetch (76 samples, 0.04%)</title><rect x="81.9811%" y="453" width="0.0356%" height="15" fill="rgb(225,196,46)" fg:x="175137" fg:w="76"/><text x="82.2311%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::internal_cache::StorageInternalCache::get_value_from_cache (33 samples, 0.02%)</title><rect x="82.0012%" y="437" width="0.0154%" height="15" fill="rgb(209,110,37)" fg:x="175180" fg:w="33"/><text x="82.2512%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::storage::StorageKey::new (43 samples, 0.02%)</title><rect x="82.0167%" y="485" width="0.0201%" height="15" fill="rgb(249,89,12)" fg:x="175213" fg:w="43"/><text x="82.2667%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::map::StateMap&lt;K,V&gt;::get_or_err (148 samples, 0.07%)</title><rect x="81.9689%" y="501" width="0.0693%" height="15" fill="rgb(226,27,33)" fg:x="175111" fg:w="148"/><text x="82.2189%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::scratchpad::WorkingSet&lt;S&gt;::set (41 samples, 0.02%)</title><rect x="82.0382%" y="501" width="0.0192%" height="15" fill="rgb(213,82,22)" fg:x="175259" fg:w="41"/><text x="82.2882%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (38 samples, 0.02%)</title><rect x="82.0396%" y="485" width="0.0178%" height="15" fill="rgb(248,140,0)" fg:x="175262" fg:w="38"/><text x="82.2896%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (38 samples, 0.02%)</title><rect x="82.0583%" y="485" width="0.0178%" height="15" fill="rgb(228,106,3)" fg:x="175302" fg:w="38"/><text x="82.3083%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::storage::StorageKey::new (61 samples, 0.03%)</title><rect x="82.0574%" y="501" width="0.0286%" height="15" fill="rgb(209,23,37)" fg:x="175300" fg:w="61"/><text x="82.3074%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_accounts::hooks::_&lt;impl sov_modules_api::hooks::TxHooks for sov_accounts::Accounts&lt;C&gt;&gt;::post_dispatch_tx_hook (280 samples, 0.13%)</title><rect x="81.9642%" y="517" width="0.1311%" height="15" fill="rgb(241,93,50)" fg:x="175101" fg:w="280"/><text x="82.2142%" y="527.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::scratchpad::WorkingSet&lt;S&gt;::get_decoded (73 samples, 0.03%)</title><rect x="82.1051%" y="501" width="0.0342%" height="15" fill="rgb(253,46,43)" fg:x="175402" fg:w="73"/><text x="82.3551%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::scratchpad::WorkingSet&lt;S&gt;::get (50 samples, 0.02%)</title><rect x="82.1159%" y="485" width="0.0234%" height="15" fill="rgb(226,206,43)" fg:x="175425" fg:w="50"/><text x="82.3659%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (69 samples, 0.03%)</title><rect x="82.1393%" y="485" width="0.0323%" height="15" fill="rgb(217,54,7)" fg:x="175475" fg:w="69"/><text x="82.3893%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (41 samples, 0.02%)</title><rect x="82.1524%" y="469" width="0.0192%" height="15" fill="rgb(223,5,52)" fg:x="175503" fg:w="41"/><text x="82.4024%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (36 samples, 0.02%)</title><rect x="82.1547%" y="453" width="0.0169%" height="15" fill="rgb(206,52,46)" fg:x="175508" fg:w="36"/><text x="82.4047%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (30 samples, 0.01%)</title><rect x="82.1576%" y="437" width="0.0140%" height="15" fill="rgb(253,136,11)" fg:x="175514" fg:w="30"/><text x="82.4076%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::storage::StorageKey::new (100 samples, 0.05%)</title><rect x="82.1393%" y="501" width="0.0468%" height="15" fill="rgb(208,106,33)" fg:x="175475" fg:w="100"/><text x="82.3893%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_accounts::hooks::_&lt;impl sov_modules_api::hooks::TxHooks for sov_accounts::Accounts&lt;C&gt;&gt;::pre_dispatch_tx_hook (201 samples, 0.09%)</title><rect x="82.0953%" y="517" width="0.0941%" height="15" fill="rgb(206,54,4)" fg:x="175381" fg:w="201"/><text x="82.3453%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (27 samples, 0.01%)</title><rect x="82.1964%" y="501" width="0.0126%" height="15" fill="rgb(213,3,15)" fg:x="175597" fg:w="27"/><text x="82.4464%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (23 samples, 0.01%)</title><rect x="82.1983%" y="485" width="0.0108%" height="15" fill="rgb(252,211,39)" fg:x="175601" fg:w="23"/><text x="82.4483%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`madvise (23 samples, 0.01%)</title><rect x="82.1983%" y="469" width="0.0108%" height="15" fill="rgb(223,6,36)" fg:x="175601" fg:w="23"/><text x="82.4483%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (42 samples, 0.02%)</title><rect x="82.2395%" y="485" width="0.0197%" height="15" fill="rgb(252,169,45)" fg:x="175689" fg:w="42"/><text x="82.4895%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (129 samples, 0.06%)</title><rect x="82.2704%" y="469" width="0.0604%" height="15" fill="rgb(212,48,26)" fg:x="175755" fg:w="129"/><text x="82.5204%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (52 samples, 0.02%)</title><rect x="82.3307%" y="469" width="0.0243%" height="15" fill="rgb(251,102,48)" fg:x="175884" fg:w="52"/><text x="82.5807%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (160 samples, 0.07%)</title><rect x="82.3588%" y="453" width="0.0749%" height="15" fill="rgb(243,208,16)" fg:x="175944" fg:w="160"/><text x="82.6088%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (2,554 samples, 1.20%)</title><rect x="82.4337%" y="453" width="1.1955%" height="15" fill="rgb(219,96,24)" fg:x="176104" fg:w="2554"/><text x="82.6837%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::to_bytes (52 samples, 0.02%)</title><rect x="83.6292%" y="453" width="0.0243%" height="15" fill="rgb(219,33,29)" fg:x="178658" fg:w="52"/><text x="83.8792%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::field::_&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (2,839 samples, 1.33%)</title><rect x="82.3570%" y="469" width="1.3289%" height="15" fill="rgb(223,176,5)" fg:x="175940" fg:w="2839"/><text x="82.6070%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`subtle::black_box (65 samples, 0.03%)</title><rect x="83.6555%" y="453" width="0.0304%" height="15" fill="rgb(228,140,14)" fg:x="178714" fg:w="65"/><text x="83.9055%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::edwards::CompressedEdwardsY::decompress (3,032 samples, 1.42%)</title><rect x="82.2694%" y="485" width="1.4193%" height="15" fill="rgb(217,179,31)" fg:x="175753" fg:w="3032"/><text x="82.5194%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_modules_api::transaction::Transaction&lt;C&gt; as borsh::de::BorshDeserialize&gt;::deserialize_reader (3,158 samples, 1.48%)</title><rect x="82.2123%" y="501" width="1.4782%" height="15" fill="rgb(230,9,30)" fg:x="175631" fg:w="3158"/><text x="82.4623%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (377 samples, 0.18%)</title><rect x="83.6915%" y="501" width="0.1765%" height="15" fill="rgb(230,136,20)" fg:x="178791" fg:w="377"/><text x="83.9415%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (11,947 samples, 5.59%)</title><rect x="83.8933%" y="453" width="5.5924%" height="15" fill="rgb(215,210,22)" fg:x="179222" fg:w="11947"/><text x="84.1433%" y="463.50">rollup_..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::to_bytes (42 samples, 0.02%)</title><rect x="89.4856%" y="437" width="0.0197%" height="15" fill="rgb(218,43,5)" fg:x="191169" fg:w="42"/><text x="89.7356%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;curve25519_dalek::edwards::EdwardsPoint as core::cmp::PartialEq&gt;::eq (80 samples, 0.04%)</title><rect x="89.4856%" y="453" width="0.0374%" height="15" fill="rgb(216,11,5)" fg:x="191169" fg:w="80"/><text x="89.7356%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`subtle::black_box (38 samples, 0.02%)</title><rect x="89.5053%" y="437" width="0.0178%" height="15" fill="rgb(209,82,29)" fg:x="191211" fg:w="38"/><text x="89.7553%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;ed25519_dalek::signature::InternalSignature as core::convert::TryFrom&lt;&amp;ed25519::Signature&gt;&gt;::try_from (25 samples, 0.01%)</title><rect x="89.5245%" y="453" width="0.0117%" height="15" fill="rgb(244,115,12)" fg:x="191252" fg:w="25"/><text x="89.7745%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sha2::sha512::Sha512 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (247 samples, 0.12%)</title><rect x="89.5362%" y="453" width="0.1156%" height="15" fill="rgb(222,82,18)" fg:x="191277" fg:w="247"/><text x="89.7862%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha512::soft::compress (240 samples, 0.11%)</title><rect x="89.5394%" y="437" width="0.1123%" height="15" fill="rgb(249,227,8)" fg:x="191284" fg:w="240"/><text x="89.7894%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (345 samples, 0.16%)</title><rect x="89.6523%" y="453" width="0.1615%" height="15" fill="rgb(253,141,45)" fg:x="191525" fg:w="345"/><text x="89.9023%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (24 samples, 0.01%)</title><rect x="89.8137%" y="453" width="0.0112%" height="15" fill="rgb(234,184,4)" fg:x="191870" fg:w="24"/><text x="90.0637%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (29 samples, 0.01%)</title><rect x="89.8250%" y="453" width="0.0136%" height="15" fill="rgb(218,194,23)" fg:x="191894" fg:w="29"/><text x="90.0750%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (33 samples, 0.02%)</title><rect x="89.8479%" y="453" width="0.0154%" height="15" fill="rgb(235,66,41)" fg:x="191943" fg:w="33"/><text x="90.0979%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (3,027 samples, 1.42%)</title><rect x="90.7326%" y="437" width="1.4169%" height="15" fill="rgb(245,217,1)" fg:x="193833" fg:w="3027"/><text x="90.9826%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (308 samples, 0.14%)</title><rect x="92.1720%" y="421" width="0.1442%" height="15" fill="rgb(229,91,1)" fg:x="196908" fg:w="308"/><text x="92.4220%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (61 samples, 0.03%)</title><rect x="92.3181%" y="421" width="0.0286%" height="15" fill="rgb(207,101,30)" fg:x="197220" fg:w="61"/><text x="92.5681%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;curve25519_dalek::window::NafLookupTable5&lt;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; as core::convert::From&lt;&amp;curve25519_dalek::edwards::EdwardsPoint&gt;&gt;::from (461 samples, 0.22%)</title><rect x="92.1495%" y="437" width="0.2158%" height="15" fill="rgb(223,82,49)" fg:x="196860" fg:w="461"/><text x="92.3995%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (40 samples, 0.02%)</title><rect x="92.3466%" y="421" width="0.0187%" height="15" fill="rgb(218,167,17)" fg:x="197281" fg:w="40"/><text x="92.5966%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (1,406 samples, 0.66%)</title><rect x="92.3653%" y="437" width="0.6581%" height="15" fill="rgb(208,103,14)" fg:x="197321" fg:w="1406"/><text x="92.6153%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (111 samples, 0.05%)</title><rect x="93.0235%" y="437" width="0.0520%" height="15" fill="rgb(238,20,8)" fg:x="198727" fg:w="111"/><text x="93.2735%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Add&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::add (184 samples, 0.09%)</title><rect x="93.0754%" y="437" width="0.0861%" height="15" fill="rgb(218,80,54)" fg:x="198838" fg:w="184"/><text x="93.3254%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::AffineNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (131 samples, 0.06%)</title><rect x="93.1616%" y="437" width="0.0613%" height="15" fill="rgb(240,144,17)" fg:x="199022" fg:w="131"/><text x="93.4116%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::_&lt;impl core::ops::arith::Sub&lt;&amp;curve25519_dalek::backend::serial::curve_models::ProjectiveNielsPoint&gt; for &amp;curve25519_dalek::edwards::EdwardsPoint&gt;::sub (170 samples, 0.08%)</title><rect x="93.2229%" y="437" width="0.0796%" height="15" fill="rgb(245,27,50)" fg:x="199153" fg:w="170"/><text x="93.4729%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::scalar_mul::vartime_double_base::mul (15,127 samples, 7.08%)</title><rect x="89.8634%" y="453" width="7.0809%" height="15" fill="rgb(251,51,7)" fg:x="191976" fg:w="15127"/><text x="90.1134%" y="463.50">rollup_coa..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (7,780 samples, 3.64%)</title><rect x="93.3025%" y="437" width="3.6418%" height="15" fill="rgb(245,217,29)" fg:x="199323" fg:w="7780"/><text x="93.5525%" y="447.50">roll..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (161 samples, 0.08%)</title><rect x="96.9569%" y="437" width="0.0754%" height="15" fill="rgb(221,176,29)" fg:x="207130" fg:w="161"/><text x="97.2069%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (38 samples, 0.02%)</title><rect x="97.0323%" y="437" width="0.0178%" height="15" fill="rgb(212,180,24)" fg:x="207291" fg:w="38"/><text x="97.2823%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51 as core::ops::arith::Mul&lt;&amp;curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;&gt;::mul (153 samples, 0.07%)</title><rect x="97.0547%" y="421" width="0.0716%" height="15" fill="rgb(254,24,2)" fg:x="207339" fg:w="153"/><text x="97.3047%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (2,481 samples, 1.16%)</title><rect x="97.1264%" y="421" width="1.1613%" height="15" fill="rgb(230,100,2)" fg:x="207492" fg:w="2481"/><text x="97.3764%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::to_bytes (52 samples, 0.02%)</title><rect x="98.2877%" y="421" width="0.0243%" height="15" fill="rgb(219,142,25)" fg:x="209973" fg:w="52"/><text x="98.5377%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::field::_&lt;impl curve25519_dalek::backend::serial::u64::field::FieldElement51&gt;::sqrt_ratio_i (2,746 samples, 1.29%)</title><rect x="97.0515%" y="437" width="1.2854%" height="15" fill="rgb(240,73,43)" fg:x="207332" fg:w="2746"/><text x="97.3015%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`subtle::black_box (51 samples, 0.02%)</title><rect x="98.3130%" y="421" width="0.0239%" height="15" fill="rgb(214,114,15)" fg:x="210027" fg:w="51"/><text x="98.5630%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::edwards::CompressedEdwardsY::decompress (2,956 samples, 1.38%)</title><rect x="96.9541%" y="453" width="1.3837%" height="15" fill="rgb(207,130,4)" fg:x="207124" fg:w="2956"/><text x="97.2041%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::curve_models::ProjectivePoint::double (41 samples, 0.02%)</title><rect x="98.3476%" y="437" width="0.0192%" height="15" fill="rgb(221,25,40)" fg:x="210101" fg:w="41"/><text x="98.5976%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::pow2k (211 samples, 0.10%)</title><rect x="98.3668%" y="437" width="0.0988%" height="15" fill="rgb(241,184,7)" fg:x="210142" fg:w="211"/><text x="98.6168%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::field::FieldElement51::to_bytes (68 samples, 0.03%)</title><rect x="98.4656%" y="437" width="0.0318%" height="15" fill="rgb(235,159,4)" fg:x="210353" fg:w="68"/><text x="98.7156%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::edwards::EdwardsPoint::is_small_order (423 samples, 0.20%)</title><rect x="98.3378%" y="453" width="0.1980%" height="15" fill="rgb(214,87,48)" fg:x="210080" fg:w="423"/><text x="98.5878%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`subtle::black_box (81 samples, 0.04%)</title><rect x="98.4979%" y="437" width="0.0379%" height="15" fill="rgb(246,198,24)" fg:x="210422" fg:w="81"/><text x="98.7479%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::scalar::Scalar52::from_bytes_wide (24 samples, 0.01%)</title><rect x="98.5433%" y="437" width="0.0112%" height="15" fill="rgb(209,66,40)" fg:x="210519" fg:w="24"/><text x="98.7933%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::scalar::Scalar::from_bytes_mod_order_wide (80 samples, 0.04%)</title><rect x="98.5433%" y="453" width="0.0374%" height="15" fill="rgb(233,147,39)" fg:x="210519" fg:w="80"/><text x="98.7933%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`curve25519_dalek::backend::serial::u64::scalar::Scalar52::montgomery_mul (56 samples, 0.03%)</title><rect x="98.5545%" y="437" width="0.0262%" height="15" fill="rgb(231,145,52)" fg:x="210543" fg:w="56"/><text x="98.8045%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`ed25519_dalek::public::PublicKey::verify_strict (31,407 samples, 14.70%)</title><rect x="83.8881%" y="469" width="14.7015%" height="15" fill="rgb(206,20,26)" fg:x="179211" fg:w="31407"/><text x="84.1381%" y="479.50">rollup_coarse_measure-..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;sov_modules_api::default_signature::DefaultSignature as sov_modules_api::Signature&gt;::verify (31,444 samples, 14.72%)</title><rect x="83.8731%" y="485" width="14.7188%" height="15" fill="rgb(238,220,4)" fg:x="179179" fg:w="31444"/><text x="84.1231%" y="495.50">rollup_coarse_measure-..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_modules_stf_template::tx_verifier::verify_txs_stateless (35,213 samples, 16.48%)</title><rect x="82.1899%" y="517" width="16.4831%" height="15" fill="rgb(252,195,42)" fg:x="175583" fg:w="35213"/><text x="82.4399%" y="527.50">rollup_coarse_measure-64f..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_modules_api::transaction::Transaction&lt;C&gt;::verify (31,628 samples, 14.80%)</title><rect x="83.8680%" y="501" width="14.8050%" height="15" fill="rgb(209,10,6)" fg:x="179168" fg:w="31628"/><text x="84.1180%" y="511.50">rollup_coarse_measure-6..</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sha2::sha256::soft::compress (171 samples, 0.08%)</title><rect x="98.5929%" y="485" width="0.0800%" height="15" fill="rgb(229,3,52)" fg:x="210625" fg:w="171"/><text x="98.8429%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.01%)</title><rect x="98.7010%" y="485" width="0.0117%" height="15" fill="rgb(253,49,37)" fg:x="210856" fg:w="25"/><text x="98.9510%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (58 samples, 0.03%)</title><rect x="98.7207%" y="485" width="0.0271%" height="15" fill="rgb(240,103,49)" fg:x="210898" fg:w="58"/><text x="98.9707%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::sync::Arc&lt;T&gt;::drop_slow (30 samples, 0.01%)</title><rect x="98.7497%" y="485" width="0.0140%" height="15" fill="rgb(250,182,30)" fg:x="210960" fg:w="30"/><text x="98.9997%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (79 samples, 0.04%)</title><rect x="98.7759%" y="469" width="0.0370%" height="15" fill="rgb(248,8,30)" fg:x="211016" fg:w="79"/><text x="99.0259%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (112 samples, 0.05%)</title><rect x="98.7684%" y="485" width="0.0524%" height="15" fill="rgb(237,120,30)" fg:x="211000" fg:w="112"/><text x="99.0184%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.01%)</title><rect x="98.8527%" y="453" width="0.0122%" height="15" fill="rgb(221,146,34)" fg:x="211180" fg:w="26"/><text x="99.1027%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_small (32 samples, 0.01%)</title><rect x="98.8649%" y="453" width="0.0150%" height="15" fill="rgb(242,55,13)" fg:x="211206" fg:w="32"/><text x="99.1149%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`alloc::sync::Arc&lt;T&gt;::drop_slow (67 samples, 0.03%)</title><rect x="98.8513%" y="469" width="0.0314%" height="15" fill="rgb(242,112,31)" fg:x="211177" fg:w="67"/><text x="99.1013%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_state::scratchpad::WorkingSet&lt;S&gt;::checkpoint (444 samples, 0.21%)</title><rect x="98.6762%" y="517" width="0.2078%" height="15" fill="rgb(249,192,27)" fg:x="210803" fg:w="444"/><text x="98.9262%" y="527.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_first_read_last_write_cache::cache::CacheLog::add_write (394 samples, 0.18%)</title><rect x="98.6996%" y="501" width="0.1844%" height="15" fill="rgb(208,204,44)" fg:x="210853" fg:w="394"/><text x="98.9496%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_first_read_last_write_cache::access::Access::write_value (135 samples, 0.06%)</title><rect x="98.8209%" y="485" width="0.0632%" height="15" fill="rgb(208,93,54)" fg:x="211112" fg:w="135"/><text x="99.0709%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`sov_modules_stf_template::app_template::AppTemplate&lt;C,RT,Vm&gt;::apply_blob (45,165 samples, 21.14%)</title><rect x="77.7448%" y="533" width="21.1416%" height="15" fill="rgb(242,1,31)" fg:x="166087" fg:w="45165"/><text x="77.9948%" y="543.50">rollup_coarse_measure-64f9a1d8b33..</text></g><g><title>dyld`start (211,262 samples, 98.89%)</title><rect x="0.0000%" y="661" width="98.8911%" height="15" fill="rgb(241,83,25)" fg:x="0" fg:w="211262"/><text x="0.2500%" y="671.50">dyld`start</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`main (211,261 samples, 98.89%)</title><rect x="0.0005%" y="645" width="98.8906%" height="15" fill="rgb(205,169,50)" fg:x="1" fg:w="211261"/><text x="0.2505%" y="655.50">rollup_coarse_measure-64f9a1d8b33892a3`main</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::rt::lang_start_internal (211,261 samples, 98.89%)</title><rect x="0.0005%" y="629" width="98.8906%" height="15" fill="rgb(239,186,37)" fg:x="1" fg:w="211261"/><text x="0.2505%" y="639.50">rollup_coarse_measure-64f9a1d8b33892a3`std::rt::lang_start_internal</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::rt::lang_start::_{{closure}} (211,261 samples, 98.89%)</title><rect x="0.0005%" y="613" width="98.8906%" height="15" fill="rgb(205,221,10)" fg:x="1" fg:w="211261"/><text x="0.2505%" y="623.50">rollup_coarse_measure-64f9a1d8b33892a3`std::rt::lang_start::_{{closure}}</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`std::sys_common::backtrace::__rust_begin_short_backtrace (211,261 samples, 98.89%)</title><rect x="0.0005%" y="597" width="98.8906%" height="15" fill="rgb(218,196,15)" fg:x="1" fg:w="211261"/><text x="0.2505%" y="607.50">rollup_coarse_measure-64f9a1d8b33892a3`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rollup_coarse_measure::main (211,261 samples, 98.89%)</title><rect x="0.0005%" y="581" width="98.8906%" height="15" fill="rgb(218,196,35)" fg:x="1" fg:w="211261"/><text x="0.2505%" y="591.50">rollup_coarse_measure-64f9a1d8b33892a3`rollup_coarse_measure::main</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`tokio::runtime::scheduler::multi_thread::MultiThread::block_on (211,261 samples, 98.89%)</title><rect x="0.0005%" y="565" width="98.8906%" height="15" fill="rgb(233,63,24)" fg:x="1" fg:w="211261"/><text x="0.2505%" y="575.50">rollup_coarse_measure-64f9a1d8b33892a3`tokio::runtime::scheduler::multi_thread::MultiThread::block_on</text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`tokio::runtime::park::CachedParkThread::block_on (211,239 samples, 98.88%)</title><rect x="0.0108%" y="549" width="98.8803%" height="15" fill="rgb(225,8,4)" fg:x="23" fg:w="211239"/><text x="0.2608%" y="559.50">rollup_coarse_measure-64f9a1d8b33892a3`tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>libsystem_platform.dylib`_platform_memmove (22 samples, 0.01%)</title><rect x="98.9444%" y="453" width="0.0103%" height="15" fill="rgb(234,105,35)" fg:x="211376" fg:w="22"/><text x="99.1944%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (40 samples, 0.02%)</title><rect x="98.9693%" y="357" width="0.0187%" height="15" fill="rgb(236,21,32)" fg:x="211429" fg:w="40"/><text x="99.2193%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`LZ4_compress_fast_continue (1,054 samples, 0.49%)</title><rect x="98.9884%" y="357" width="0.4934%" height="15" fill="rgb(228,109,6)" fg:x="211470" fg:w="1054"/><text x="99.2384%" y="367.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext const&amp;, rocksdb::UncompressionContext*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1,125 samples, 0.53%)</title><rect x="98.9618%" y="405" width="0.5266%" height="15" fill="rgb(229,215,31)" fg:x="211413" fg:w="1125"/><text x="99.2118%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1,121 samples, 0.52%)</title><rect x="98.9636%" y="389" width="0.5247%" height="15" fill="rgb(221,52,54)" fg:x="211417" fg:w="1121"/><text x="99.2136%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::LZ4_Compress(rocksdb::CompressionInfo const&amp;, unsigned int, char const*, unsigned long, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1,114 samples, 0.52%)</title><rect x="98.9669%" y="373" width="0.5215%" height="15" fill="rgb(252,129,43)" fg:x="211424" fg:w="1114"/><text x="99.2169%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`crc32c_arm64(unsigned int, unsigned char const*, unsigned long) (53 samples, 0.02%)</title><rect x="99.4963%" y="389" width="0.0248%" height="15" fill="rgb(248,183,27)" fg:x="212555" fg:w="53"/><text x="99.7463%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WritableFileWriter::Flush (85 samples, 0.04%)</title><rect x="99.5258%" y="373" width="0.0398%" height="15" fill="rgb(250,0,22)" fg:x="212618" fg:w="85"/><text x="99.7758%" y="383.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WritableFileWriter::WriteBuffered (85 samples, 0.04%)</title><rect x="99.5258%" y="357" width="0.0398%" height="15" fill="rgb(213,166,10)" fg:x="212618" fg:w="85"/><text x="99.7758%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`write (85 samples, 0.04%)</title><rect x="99.5258%" y="341" width="0.0398%" height="15" fill="rgb(207,163,36)" fg:x="212618" fg:w="85"/><text x="99.7758%" y="351.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTableBuilder::WriteRawBlock (165 samples, 0.08%)</title><rect x="99.4888%" y="405" width="0.0772%" height="15" fill="rgb(208,122,22)" fg:x="212539" fg:w="165"/><text x="99.7388%" y="415.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::WritableFileWriter::Append (96 samples, 0.04%)</title><rect x="99.5211%" y="389" width="0.0449%" height="15" fill="rgb(207,104,49)" fg:x="212608" fg:w="96"/><text x="99.7711%" y="399.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTableBuilder::WriteBlock (1,295 samples, 0.61%)</title><rect x="98.9618%" y="421" width="0.6062%" height="15" fill="rgb(248,211,50)" fg:x="211413" fg:w="1295"/><text x="99.2118%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTableBuilder::Flush (1,318 samples, 0.62%)</title><rect x="98.9547%" y="453" width="0.6170%" height="15" fill="rgb(217,13,45)" fg:x="211398" fg:w="1318"/><text x="99.2047%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTableBuilder::WriteBlock (1,315 samples, 0.62%)</title><rect x="98.9561%" y="437" width="0.6155%" height="15" fill="rgb(211,216,49)" fg:x="211401" fg:w="1315"/><text x="99.2061%" y="447.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (68 samples, 0.03%)</title><rect x="99.6218%" y="421" width="0.0318%" height="15" fill="rgb(221,58,53)" fg:x="212823" fg:w="68"/><text x="99.8718%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBuilder::AddWithLastKeyImpl (212 samples, 0.10%)</title><rect x="99.5871%" y="437" width="0.0992%" height="15" fill="rgb(220,112,41)" fg:x="212749" fg:w="212"/><text x="99.8371%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (70 samples, 0.03%)</title><rect x="99.6536%" y="421" width="0.0328%" height="15" fill="rgb(236,38,28)" fg:x="212891" fg:w="70"/><text x="99.9036%" y="431.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBuilder::AddWithLastKey (247 samples, 0.12%)</title><rect x="99.5736%" y="453" width="0.1156%" height="15" fill="rgb(227,195,22)" fg:x="212720" fg:w="247"/><text x="99.8236%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BlockBasedTableBuilder::Add (1,715 samples, 0.80%)</title><rect x="98.9276%" y="469" width="0.8028%" height="15" fill="rgb(214,55,33)" fg:x="211340" fg:w="1715"/><text x="99.1776%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::ShortenedIndexBuilder::AddIndexEntry(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (44 samples, 0.02%)</title><rect x="99.7098%" y="453" width="0.0206%" height="15" fill="rgb(248,80,13)" fg:x="213011" fg:w="44"/><text x="99.9598%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (23 samples, 0.01%)</title><rect x="99.7402%" y="453" width="0.0108%" height="15" fill="rgb(238,52,6)" fg:x="213076" fg:w="23"/><text x="99.9902%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (26 samples, 0.01%)</title><rect x="99.8287%" y="437" width="0.0122%" height="15" fill="rgb(224,198,47)" fg:x="213265" fg:w="26"/><text x="100.0787%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTableIterator::key (31 samples, 0.01%)</title><rect x="99.8488%" y="437" width="0.0145%" height="15" fill="rgb(233,171,20)" fg:x="213308" fg:w="31"/><text x="100.0988%" y="447.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::CompactionIterator::NextFromInput (249 samples, 0.12%)</title><rect x="99.7566%" y="453" width="0.1166%" height="15" fill="rgb(241,30,25)" fg:x="213111" fg:w="249"/><text x="100.0066%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::MemTableIterator::Next (35 samples, 0.02%)</title><rect x="99.8774%" y="453" width="0.0164%" height="15" fill="rgb(207,171,38)" fg:x="213369" fg:w="35"/><text x="100.1274%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::CompactionIterator::Next (344 samples, 0.16%)</title><rect x="99.7365%" y="469" width="0.1610%" height="15" fill="rgb(234,70,1)" fg:x="213068" fg:w="344"/><text x="99.9865%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::FileMetaData::UpdateBoundaries (35 samples, 0.02%)</title><rect x="99.9017%" y="469" width="0.0164%" height="15" fill="rgb(232,178,18)" fg:x="213421" fg:w="35"/><text x="100.1517%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (23 samples, 0.01%)</title><rect x="99.9073%" y="453" width="0.0108%" height="15" fill="rgb(241,78,40)" fg:x="213433" fg:w="23"/><text x="100.1573%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (22 samples, 0.01%)</title><rect x="99.9354%" y="453" width="0.0103%" height="15" fill="rgb(222,35,25)" fg:x="213493" fg:w="22"/><text x="100.1854%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (25 samples, 0.01%)</title><rect x="99.9457%" y="453" width="0.0117%" height="15" fill="rgb(207,92,16)" fg:x="213515" fg:w="25"/><text x="100.1957%" y="463.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::OutputValidator::Add (100 samples, 0.05%)</title><rect x="99.9209%" y="469" width="0.0468%" height="15" fill="rgb(216,59,51)" fg:x="213462" fg:w="100"/><text x="100.1709%" y="479.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::BuildTable(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&amp;, rocksdb::TableBuilderOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::TableCache*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, std::__1::vector&lt;std::__1::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt;, std::__1::allocator&lt;std::__1::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt; &gt; &gt;, rocksdb::FileMetaData*, std::__1::vector&lt;rocksdb::BlobFileAddition, std::__1::allocator&lt;rocksdb::BlobFileAddition&gt; &gt;*, std::__1::vector&lt;unsigned long long, std::__1::allocator&lt;unsigned long long&gt; &gt;, unsigned long long, unsigned long long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::__1::shared_ptr (2,321 samples, 1.09%)</title><rect x="98.8944%" y="485" width="1.0865%" height="15" fill="rgb(213,80,28)" fg:x="211269" fg:w="2321"/><text x="99.1444%" y="495.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::BackgroundFlush (2,334 samples, 1.09%)</title><rect x="98.8944%" y="565" width="1.0925%" height="15" fill="rgb(220,93,7)" fg:x="211269" fg:w="2334"/><text x="99.1444%" y="575.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector (2,334 samples, 1.09%)</title><rect x="98.8944%" y="549" width="1.0925%" height="15" fill="rgb(225,24,44)" fg:x="211269" fg:w="2334"/><text x="99.1444%" y="559.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&amp;, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::__1::vector&lt;unsigned long long, std::__1::allocator (2,334 samples, 1.09%)</title><rect x="98.8944%" y="533" width="1.0925%" height="15" fill="rgb(243,74,40)" fg:x="211269" fg:w="2334"/><text x="99.1444%" y="543.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::FlushJob::Run (2,334 samples, 1.09%)</title><rect x="98.8944%" y="517" width="1.0925%" height="15" fill="rgb(228,39,7)" fg:x="211269" fg:w="2334"/><text x="99.1444%" y="527.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::FlushJob::WriteLevel0Table (2,334 samples, 1.09%)</title><rect x="98.8944%" y="501" width="1.0925%" height="15" fill="rgb(227,79,8)" fg:x="211269" fg:w="2334"/><text x="99.1444%" y="511.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`void* std::__1::__thread_proxy&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt; &gt;, void (*)(void*), rocksdb::BGThreadMetadata*&gt; &gt; (2,364 samples, 1.11%)</title><rect x="98.8930%" y="629" width="1.1066%" height="15" fill="rgb(236,58,11)" fg:x="211266" fg:w="2364"/><text x="99.1430%" y="639.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper (2,364 samples, 1.11%)</title><rect x="98.8930%" y="613" width="1.1066%" height="15" fill="rgb(249,63,35)" fg:x="211266" fg:w="2364"/><text x="99.1430%" y="623.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::ThreadPoolImpl::Impl::BGThread (2,364 samples, 1.11%)</title><rect x="98.8930%" y="597" width="1.1066%" height="15" fill="rgb(252,114,16)" fg:x="211266" fg:w="2364"/><text x="99.1430%" y="607.50"></text></g><g><title>rollup_coarse_measure-64f9a1d8b33892a3`rocksdb::DBImpl::BackgroundCallFlush (2,362 samples, 1.11%)</title><rect x="98.8939%" y="581" width="1.1056%" height="15" fill="rgb(254,151,24)" fg:x="211268" fg:w="2362"/><text x="99.1439%" y="591.50"></text></g><g><title>all (213,631 samples, 100%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(253,54,39)" fg:x="0" fg:w="213631"/><text x="0.2500%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (2,366 samples, 1.11%)</title><rect x="98.8925%" y="661" width="1.1075%" height="15" fill="rgb(243,25,45)" fg:x="211265" fg:w="2366"/><text x="99.1425%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (2,366 samples, 1.11%)</title><rect x="98.8925%" y="645" width="1.1075%" height="15" fill="rgb(234,134,9)" fg:x="211265" fg:w="2366"/><text x="99.1425%" y="655.50"></text></g></svg></svg>